{"version":3,"file":"276.8b7af5db010151f7.js","mappings":"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","names":["i0","_r2","ctx_r2","create","saveButtonEnabled","_r4","save","PromotionDetailComponent_ng_template_12_button_0_Template","entity_r5","customFields","detailForm","get","$event","_r6","removeCondition","i_r8","condition_r7","getConditionDefinition","condition_r10","_r9","$implicit","addCondition","description","PromotionDetailComponent_vdr_dropdown_57_button_6_Template","getAvailableConditions","_r11","removeAction","i_r13","action_r12","getActionDefinition","action_r15","_r14","addAction","PromotionDetailComponent_vdr_dropdown_62_button_6_Template","getAvailableActions","GET_PROMOTION_DETAIL","gql","PROMOTION_FRAGMENT","PromotionDetailComponent","TypedBaseDetailComponent","constructor","changeDetector","dataService","formBuilder","notificationService","super","this","getCustomFieldConfig","group","name","Validators","required","enabled","couponCode","perCustomerUsageLimit","usageLimit","startsAt","endsAt","conditions","array","actions","getCustomFieldsDefaults","allConditions","allActions","ngOnInit","init","promotion","getPromotionActionsAndConditions","single$","subscribe","data","promotionActions","promotionConditions","markForCheck","ngOnDestroy","destroy","filter","o","find","c","code","condition","a","action","dirty","valid","length","value","addOperation","markAsDirty","removeOperation","formArrayOf","key","input","getUpdatedPromotion","id","createdAt","updatedAt","translations","languageCode","createPromotion","__typename","success","_","entity","markAsPristine","router","navigate","relativeTo","route","error","message","err","combineLatest","entity$","languageCode$","pipe","take","mergeMap","paymentMethod","updatePromotion","formGroup","formValue","createUpdatedTranslatable","translatable","updatedFields","customFieldConfig","defaultTranslation","mapOperationsToInputs","setFormValues","currentTranslation","findTranslation","patchValue","forEach","setCustomFieldFormValues","operations","formValueOperations","map","i","arguments","Object","values","args","j","encodeConfigArgValue","operation","operationsArray","collection","findIndex","argsHash","reduce","output","arg","getConfigArgValue","getDefaultArgValue","push","control","argName","def","argDef","getDefaultConfigArgValue","Error","index","removeAt","splice","static","t","i1","i2","core","VBU","selectors","features","decls","vars","consts","template","rf","ctx","_r1","setLanguage","PromotionDetailComponent_button_10_Template","PromotionDetailComponent_ng_template_12_Template","PromotionDetailComponent_vdr_card_18_Template","PromotionDetailComponent_vdr_card_19_Template","PromotionDetailComponent_vdr_card_51_Template","PromotionDetailComponent_div_55_Template","PromotionDetailComponent_vdr_dropdown_57_Template","PromotionDetailComponent_div_60_Template","PromotionDetailComponent_vdr_dropdown_62_Template","isNew$","availableLanguages$","updateButton_r16","deletePromotionsBulkAction","createBulkDeleteAction","location","requiresPermission","Permission","DeletePromotion","getItemName","item","bulkDelete","ids","deletePromotions","res","assignPromotionsToChannelBulkAction","createBulkAssignToChannelAction","UpdatePromotion","bulkAssignToChannel","promotionIds","channelIds","channelId","mutate","AssignPromotionsToChannelDocument","assignPromotionsToChannel","removePromotionsFromChannelBulkAction","createBulkRemoveFromChannelAction","DeleteCatalog","bulkRemoveFromChannel","RemovePromotionsFromChannelDocument","removePromotionsFromChannel","duplicatePromotionsBulkAction","label","icon","onClick","injector","selection","hostComponent","clearSelection","ModalService","fromComponent","DuplicateEntityDialogComponent","locals","entities","entityName","title","getEntityName","result","refresh","_c0","promotion_r1","promotion_r2","promotion_r3","_c1","promotion_r4","PromotionListComponent_ng_template_32_vdr_chip_0_Template","PromotionListComponent_ng_template_32_vdr_chip_1_Template","promotion_r5","promotion_r6","promotion_r7","promotion_r8","promotion_r9","promotion_r10","customField_r11","ctx_r11","sorts","GET_PROMOTION_LIST","PromotionListComponent","TypedBaseListComponent","dataTableListId","filters","createFilterCollection","addIdFilter","addDateFilters","addFilters","type","kind","filterField","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSorts","addCustomFieldSorts","configure","document","GetPromotionListDocument","getItems","promotions","setVariables","skip","createQueryOptions","searchTermControl","refreshListOnChanges","valueChanges","searchTerm","createFilterInput","sort","createSortInput","filterOperator","LogicalOperator","AND","contains","OR","options","PromotionListComponent_a_8_Template","setPageNumber","setItemsPerPage","setVisibleColumns","PromotionListComponent_ng_template_20_Template","PromotionListComponent_ng_template_23_Template","PromotionListComponent_ng_template_26_Template","PromotionListComponent_ng_template_29_Template","PromotionListComponent_ng_template_32_Template","PromotionListComponent_ng_template_35_Template","PromotionListComponent_ng_template_38_Template","PromotionListComponent_ng_template_41_Template","PromotionListComponent_ng_template_44_Template","PromotionListComponent_ng_template_47_Template","PromotionListComponent_vdr_dt2_custom_field_column_48_Template","contentLanguage$","items$","itemsPerPage$","totalItems$","currentPage$","selectionManager","createRoutes","pageService","path","component","PageComponent","locationId","breadcrumb","children","getPageTabRoutes","link","promotionBreadcrumb","params","detailBreadcrumb","breadcrumbKey","getName","MarketingModule","hasRegisteredTabsAndBulkActions","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","query","GetPromotionDetailDocument","entityKey","getBreadcrumbs","$C","G2t","provide","ROUTES","useFactory","multi","deps","PageService","imports","SharedModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/lib/marketing/src/components/promotion-detail/promotion-detail.component.html","./src/lib/marketing/src/components/promotion-detail/promotion-detail.component.ts","./src/lib/marketing/src/components/promotion-list/promotion-list-bulk-actions.ts","./src/lib/marketing/src/components/promotion-list/promotion-list.component.html","./src/lib/marketing/src/components/promotion-list/promotion-list.component.ts","./src/lib/marketing/src/marketing.routes.ts","./src/lib/marketing/src/marketing.module.ts"],"sourcesContent":["<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <div class=\"flex clr-align-items-center\">\r\n                <vdr-language-selector\r\n                    [disabled]=\"isNew$ | async\"\r\n                    [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                    [currentLanguageCode]=\"languageCode$ | async\"\r\n                    (languageCodeChange)=\"setLanguage($event)\"\r\n                ></vdr-language-selector>\r\n            </div>\r\n        </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"promotion-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"!saveButtonEnabled()\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    *vdrIfPermissions=\"'UpdatePromotion'\"\r\n                    [disabled]=\"!saveButtonEnabled()\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"promotion-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *vdrIfPermissions=\"'UpdatePromotion'\">\r\n                <clr-toggle-wrapper>\r\n                    <input type=\"checkbox\" clrToggle name=\"enabled\" formControlName=\"enabled\" />\r\n                    <label>{{ 'common.enabled' | translate }}</label>\r\n                </clr-toggle-wrapper>\r\n            </vdr-card>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-rich-text-editor\r\n                        class=\"form-grid-span\"\r\n                        formControlName=\"description\"\r\n                        [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                        [label]=\"'common.description' | translate\"\r\n                    ></vdr-rich-text-editor>\r\n                    <vdr-form-field [label]=\"'marketing.starts-at' | translate\" for=\"startsAt\">\r\n                        <vdr-datetime-picker formControlName=\"startsAt\"></vdr-datetime-picker>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'marketing.ends-at' | translate\" for=\"endsAt\">\r\n                        <vdr-datetime-picker formControlName=\"endsAt\"></vdr-datetime-picker>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'marketing.coupon-code' | translate\" for=\"couponCode\">\r\n                        <input\r\n                            id=\"couponCode\"\r\n                            [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                            type=\"text\"\r\n                            formControlName=\"couponCode\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'marketing.per-customer-limit' | translate\"\r\n                        [tooltip]=\"'marketing.per-customer-limit-tooltip' | translate\"\r\n                        for=\"perCustomerUsageLimit\"\r\n                    >\r\n                        <input\r\n                            id=\"perCustomerUsageLimit\"\r\n                            [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            max=\"999\"\r\n                            formControlName=\"perCustomerUsageLimit\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'marketing.usage-limit' | translate\"\r\n                        [tooltip]=\"'marketing.usage-limit-tooltip' | translate\"\r\n                        for=\"usageLimit\"\r\n                    >\r\n                        <input\r\n                            id=\"usageLimit\"\r\n                            [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                            type=\"number\"\r\n                            min=\"1\"\r\n                            max=\"9999999\"\r\n                            formControlName=\"usageLimit\"\r\n                        />\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                [title]=\"'common.custom-fields' | translate\"\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Promotion\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                    [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"promotion-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n\r\n            <vdr-card [title]=\"'marketing.conditions' | translate\" formArrayName=\"conditions\">\r\n                <div *ngFor=\"let condition of conditions; index as i\">\r\n                    <vdr-configurable-input\r\n                        (remove)=\"removeCondition($event)\"\r\n                        [position]=\"i\"\r\n                        [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                        [operation]=\"condition\"\r\n                        [operationDefinition]=\"getConditionDefinition(condition)\"\r\n                        [formControlName]=\"i\"\r\n                    ></vdr-configurable-input>\r\n                </div>\r\n                <div>\r\n                    <vdr-dropdown *vdrIfPermissions=\"'UpdatePromotion'\">\r\n                        <button class=\"btn btn-outline\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"plus\"></clr-icon>\r\n                            {{ 'marketing.add-condition' | translate }}\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-left\">\r\n                            <button\r\n                                *ngFor=\"let condition of getAvailableConditions()\"\r\n                                type=\"button\"\r\n                                vdrDropdownItem\r\n                                class=\"item-wrap\"\r\n                                (click)=\"addCondition(condition)\"\r\n                            >\r\n                                {{ condition.description }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'marketing.actions' | translate\" formArrayName=\"actions\">\r\n                <div *ngFor=\"let action of actions; index as i\">\r\n                    <vdr-configurable-input\r\n                        (remove)=\"removeAction($event)\"\r\n                        [position]=\"i\"\r\n                        [operation]=\"action\"\r\n                        [readonly]=\"!('UpdatePromotion' | hasPermission)\"\r\n                        [operationDefinition]=\"getActionDefinition(action)\"\r\n                        [formControlName]=\"i\"\r\n                    ></vdr-configurable-input>\r\n                </div>\r\n                <div>\r\n                    <vdr-dropdown *vdrIfPermissions=\"'UpdatePromotion'\">\r\n                        <button class=\"btn btn-outline\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"plus\"></clr-icon>\r\n                            {{ 'marketing.add-action' | translate }}\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-left\">\r\n                            <button\r\n                                *ngFor=\"let action of getAvailableActions()\"\r\n                                type=\"button\"\r\n                                vdrDropdownItem\r\n                                class=\"item-wrap\"\r\n                                (click)=\"addAction(action)\"\r\n                            >\r\n                                {{ action.description }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-card>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, UntypedFormArray, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    ConfigurableOperation,\r\n    ConfigurableOperationDefinition,\r\n    ConfigurableOperationInput,\r\n    CreatePromotionInput,\r\n    createUpdatedTranslatable,\r\n    DataService,\r\n    encodeConfigArgValue,\r\n    findTranslation,\r\n    getConfigArgValue,\r\n    getCustomFieldsDefaults,\r\n    getDefaultConfigArgValue,\r\n    GetPromotionDetailDocument,\r\n    LanguageCode,\r\n    NotificationService,\r\n    PROMOTION_FRAGMENT,\r\n    PromotionFragment,\r\n    TypedBaseDetailComponent,\r\n    UpdatePromotionInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { combineLatest } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport const GET_PROMOTION_DETAIL = gql`\r\n    query GetPromotionDetail($id: ID!) {\r\n        promotion(id: $id) {\r\n            ...Promotion\r\n        }\r\n    }\r\n    ${PROMOTION_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-promotion-detail',\r\n    templateUrl: './promotion-detail.component.html',\r\n    styleUrls: ['./promotion-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PromotionDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetPromotionDetailDocument, 'promotion'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('Promotion');\r\n    detailForm = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        description: '',\r\n        enabled: true,\r\n        couponCode: null as string | null,\r\n        perCustomerUsageLimit: null as number | null,\r\n        usageLimit: null as number | null,\r\n        startsAt: null,\r\n        endsAt: null,\r\n        conditions: this.formBuilder.array([]),\r\n        actions: this.formBuilder.array([]),\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n    conditions: ConfigurableOperation[] = [];\r\n    actions: ConfigurableOperation[] = [];\r\n\r\n    private allConditions: ConfigurableOperationDefinition[] = [];\r\n    private allActions: ConfigurableOperationDefinition[] = [];\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n        this.customFields = this.getCustomFieldConfig('Promotion');\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.promotion.getPromotionActionsAndConditions().single$.subscribe(data => {\r\n            this.allActions = data.promotionActions;\r\n            this.allConditions = data.promotionConditions;\r\n            this.changeDetector.markForCheck();\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    getAvailableConditions(): ConfigurableOperationDefinition[] {\r\n        return this.allConditions.filter(o => !this.conditions.find(c => c.code === o.code));\r\n    }\r\n\r\n    getConditionDefinition(condition: ConfigurableOperation): ConfigurableOperationDefinition | undefined {\r\n        return this.allConditions.find(c => c.code === condition.code);\r\n    }\r\n\r\n    getAvailableActions(): ConfigurableOperationDefinition[] {\r\n        return this.allActions.filter(o => !this.actions.find(a => a.code === o.code));\r\n    }\r\n\r\n    getActionDefinition(action: ConfigurableOperation): ConfigurableOperationDefinition | undefined {\r\n        return this.allActions.find(c => c.code === action.code);\r\n    }\r\n\r\n    saveButtonEnabled(): boolean {\r\n        return !!(\r\n            this.detailForm.dirty &&\r\n            this.detailForm.valid &&\r\n            (this.conditions.length !== 0 || this.detailForm.value.couponCode) &&\r\n            this.actions.length !== 0\r\n        );\r\n    }\r\n\r\n    addCondition(condition: ConfigurableOperation) {\r\n        this.addOperation('conditions', condition);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    addAction(action: ConfigurableOperation) {\r\n        this.addOperation('actions', action);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    removeCondition(condition: ConfigurableOperation) {\r\n        this.removeOperation('conditions', condition);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    removeAction(action: ConfigurableOperation) {\r\n        this.removeOperation('actions', action);\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    formArrayOf(key: 'conditions' | 'actions'): UntypedFormArray {\r\n        return this.detailForm.get(key) as UntypedFormArray;\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n\r\n        const input = this.getUpdatedPromotion(\r\n            {\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                startsAt: '',\r\n                endsAt: '',\r\n                name: '',\r\n                description: '',\r\n                couponCode: null,\r\n                perCustomerUsageLimit: null,\r\n                usageLimit: null,\r\n                enabled: false,\r\n                conditions: [],\r\n                actions: [],\r\n                translations: [],\r\n            },\r\n            this.detailForm,\r\n            this.languageCode,\r\n        ) as CreatePromotionInput;\r\n        this.dataService.promotion.createPromotion(input).subscribe(\r\n            ({ createPromotion }) => {\r\n                switch (createPromotion.__typename) {\r\n                    case 'Promotion':\r\n                        this.notificationService.success(_('common.notify-create-success'), {\r\n                            entity: 'Promotion',\r\n                        });\r\n                        this.detailForm.markAsPristine();\r\n                        this.changeDetector.markForCheck();\r\n                        this.router.navigate(['../', createPromotion.id], { relativeTo: this.route });\r\n                        break;\r\n                    case 'MissingConditionsError':\r\n                        this.notificationService.error(createPromotion.message);\r\n                        break;\r\n                }\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'Promotion',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([paymentMethod, languageCode]) => {\r\n                    const input = this.getUpdatedPromotion(\r\n                        paymentMethod,\r\n                        this.detailForm,\r\n                        languageCode,\r\n                    ) as UpdatePromotionInput;\r\n                    return this.dataService.promotion.updatePromotion(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Promotion',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Promotion',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Given a PaymentMethod and the value of the detailForm, this method creates an updated copy of it which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedPromotion(\r\n        promotion: PromotionFragment,\r\n        formGroup: UntypedFormGroup,\r\n        languageCode: LanguageCode,\r\n    ): UpdatePromotionInput | CreatePromotionInput {\r\n        const formValue = formGroup.value;\r\n        const input = createUpdatedTranslatable({\r\n            translatable: promotion,\r\n            updatedFields: formValue,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: promotion.name || '',\r\n                description: promotion.description || '',\r\n            },\r\n        });\r\n\r\n        return {\r\n            ...input,\r\n            conditions: this.mapOperationsToInputs(this.conditions, formValue.conditions),\r\n            actions: this.mapOperationsToInputs(this.actions, formValue.actions),\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: PromotionFragment, languageCode: LanguageCode): void {\r\n        const currentTranslation = findTranslation(entity, languageCode);\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation?.name,\r\n            description: currentTranslation?.description,\r\n            enabled: entity.enabled,\r\n            couponCode: entity.couponCode,\r\n            perCustomerUsageLimit: entity.perCustomerUsageLimit,\r\n            usageLimit: entity.usageLimit,\r\n            startsAt: entity.startsAt,\r\n            endsAt: entity.endsAt,\r\n        });\r\n        entity.conditions.forEach(o => {\r\n            this.addOperation('conditions', o);\r\n        });\r\n        entity.actions.forEach(o => this.addOperation('actions', o));\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get('customFields'),\r\n                entity,\r\n                currentTranslation,\r\n            );\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Maps an array of conditions or actions to the input format expected by the GraphQL API.\r\n     */\r\n    private mapOperationsToInputs(\r\n        operations: ConfigurableOperation[],\r\n        formValueOperations: any,\r\n    ): ConfigurableOperationInput[] {\r\n        return operations.map((o, i) => ({\r\n            code: o.code,\r\n            arguments: Object.values<any>(formValueOperations[i].args).map((value, j) => ({\r\n                name: o.args[j].name,\r\n                value: encodeConfigArgValue(value),\r\n            })),\r\n        }));\r\n    }\r\n\r\n    /**\r\n     * Adds a new condition or action to the promotion.\r\n     */\r\n    private addOperation(key: 'conditions' | 'actions', operation: ConfigurableOperation) {\r\n        const operationsArray = this.formArrayOf(key);\r\n        const collection = key === 'conditions' ? this.conditions : this.actions;\r\n        const index = operationsArray.value.findIndex(o => o.code === operation.code);\r\n        if (index === -1) {\r\n            const argsHash = operation.args.reduce(\r\n                (output, arg) => ({\r\n                    ...output,\r\n                    [arg.name]:\r\n                        getConfigArgValue(arg.value) ?? this.getDefaultArgValue(key, operation, arg.name),\r\n                }),\r\n                {},\r\n            );\r\n            operationsArray.push(\r\n                this.formBuilder.control({\r\n                    code: operation.code,\r\n                    args: argsHash,\r\n                }),\r\n            );\r\n            collection.push({\r\n                code: operation.code,\r\n                args: operation.args.map(a => ({ name: a.name, value: getConfigArgValue(a.value) })),\r\n            });\r\n        }\r\n    }\r\n\r\n    private getDefaultArgValue(\r\n        key: 'conditions' | 'actions',\r\n        operation: ConfigurableOperation,\r\n        argName: string,\r\n    ) {\r\n        const def =\r\n            key === 'conditions'\r\n                ? this.allConditions.find(c => c.code === operation.code)\r\n                : this.allActions.find(a => a.code === operation.code);\r\n        if (def) {\r\n            const argDef = def.args.find(a => a.name === argName);\r\n            if (argDef) {\r\n                return getDefaultConfigArgValue(argDef);\r\n            }\r\n        }\r\n        throw new Error(`Could not determine default value for \"argName\"`);\r\n    }\r\n\r\n    /**\r\n     * Removes a condition or action from the promotion.\r\n     */\r\n    private removeOperation(key: 'conditions' | 'actions', operation: ConfigurableOperation) {\r\n        const operationsArray = this.formArrayOf(key);\r\n        const collection = key === 'conditions' ? this.conditions : this.actions;\r\n        const index = operationsArray.value.findIndex(o => o.code === operation.code);\r\n        if (index !== -1) {\r\n            operationsArray.removeAt(index);\r\n            collection.splice(index, 1);\r\n        }\r\n    }\r\n}\r\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    AssignPromotionsToChannelDocument,\r\n    BulkAction,\r\n    createBulkAssignToChannelAction,\r\n    createBulkDeleteAction,\r\n    createBulkRemoveFromChannelAction,\r\n    DuplicateEntityDialogComponent,\r\n    GetPromotionListQuery,\r\n    ItemOf,\r\n    ModalService,\r\n    Permission,\r\n    RemovePromotionsFromChannelDocument,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { map } from 'rxjs/operators';\r\nimport { PromotionListComponent } from './promotion-list.component';\r\n\r\nconst ASSIGN_PROMOTIONS_TO_CHANNEL = gql`\r\n    mutation AssignPromotionsToChannel($input: AssignPromotionsToChannelInput!) {\r\n        assignPromotionsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nconst REMOVE_PROMOTIONS_FROM_CHANNEL = gql`\r\n    mutation RemovePromotionsFromChannel($input: RemovePromotionsFromChannelInput!) {\r\n        removePromotionsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const deletePromotionsBulkAction = createBulkDeleteAction<ItemOf<GetPromotionListQuery, 'promotions'>>(\r\n    {\r\n        location: 'promotion-list',\r\n        requiresPermission: Permission.DeletePromotion,\r\n        getItemName: item => item.name,\r\n        bulkDelete: (dataService, ids) =>\r\n            dataService.promotion.deletePromotions(ids).pipe(map(res => res.deletePromotions)),\r\n    },\r\n);\r\n\r\nexport const assignPromotionsToChannelBulkAction = createBulkAssignToChannelAction<\r\n    ItemOf<GetPromotionListQuery, 'promotions'>\r\n>({\r\n    location: 'promotion-list',\r\n    requiresPermission: Permission.UpdatePromotion,\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, promotionIds, channelIds) => {\r\n        return channelIds.map(channelId =>\r\n            dataService\r\n                .mutate(AssignPromotionsToChannelDocument, {\r\n                    input: {\r\n                        channelId,\r\n                        promotionIds,\r\n                    },\r\n                })\r\n                .pipe(map(res => res.assignPromotionsToChannel)),\r\n        );\r\n    },\r\n});\r\n\r\nexport const removePromotionsFromChannelBulkAction = createBulkRemoveFromChannelAction<\r\n    ItemOf<GetPromotionListQuery, 'promotions'>\r\n>({\r\n    location: 'promotion-list',\r\n    requiresPermission: Permission.DeleteCatalog,\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, promotionIds, channelId) =>\r\n        dataService\r\n            .mutate(RemovePromotionsFromChannelDocument, {\r\n                input: {\r\n                    channelId,\r\n                    promotionIds,\r\n                },\r\n            })\r\n            .pipe(map(res => res.removePromotionsFromChannel)),\r\n});\r\n\r\nexport const duplicatePromotionsBulkAction: BulkAction<\r\n    ItemOf<GetPromotionListQuery, 'promotions'>,\r\n    PromotionListComponent\r\n> = {\r\n    location: 'promotion-list',\r\n    label: _('common.duplicate'),\r\n    icon: 'copy',\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const modalService = injector.get(ModalService);\r\n        modalService\r\n            .fromComponent(DuplicateEntityDialogComponent<ItemOf<GetPromotionListQuery, 'promotions'>>, {\r\n                locals: {\r\n                    entities: selection,\r\n                    entityName: 'Promotion',\r\n                    title: _('marketing.duplicate-promotions'),\r\n                    getEntityName: entity => entity.name,\r\n                },\r\n            })\r\n            .subscribe(result => {\r\n                if (result) {\r\n                    clearSelection();\r\n                    hostComponent.refresh();\r\n                }\r\n            });\r\n    },\r\n};\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"contentLanguage$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            />\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"promotion-list\" />\r\n            <a class=\"btn btn-primary\" [routerLink]=\"['./create']\" *vdrIfPermissions=\"'CreatePromotion'\">\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'marketing.create-new-promotion' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"promotion-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<vdr-data-table-2\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"promotion-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'marketing.search-by-name-or-coupon-code' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-promotion=\"item\">{{ promotion.id }}</ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\"\r\n        id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\"\r\n        id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.name' | translate\"\r\n        id=\"name\"\r\n        [optional]=\"false\"\r\n        [sort]=\"sorts.get('name')\"\r\n    >\r\n        <ng-template let-promotion=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', promotion.id]\"\r\n                ><span> {{ promotion.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.enabled' | translate\" id=\"enabled\">\r\n        <ng-template let-promotion=\"item\">\r\n            <vdr-chip *ngIf=\"promotion.enabled\" colorType=\"success\">{{\r\n                'common.enabled' | translate\r\n            }}</vdr-chip>\r\n            <vdr-chip *ngIf=\"!promotion.enabled\" colorType=\"warning\">{{\r\n                'common.disabled' | translate\r\n            }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'marketing.coupon-code' | translate\"\r\n        id=\"coupon-code\"\r\n        [sort]=\"sorts.get('couponCode')\"\r\n    >\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.couponCode }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'marketing.starts-at' | translate\"\r\n        id=\"starts-at\"\r\n        [sort]=\"sorts.get('startsAt')\"\r\n    >\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.startsAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'marketing.ends-at' | translate\" id=\"ends-at\" [sort]=\"sorts.get('endsAt')\">\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.endsAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'marketing.per-customer-limit' | translate\"\r\n        id=\"per-customer-limit\"\r\n        [sort]=\"sorts.get('perCustomerUsageLimit')\"\r\n        [hiddenByDefault]=\"true\"\r\n    >\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.perCustomerUsageLimit }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'marketing.usage-limit' | translate\"\r\n        id=\"usage-limit\"\r\n        [sort]=\"sorts.get('usageLimit')\"\r\n        [hiddenByDefault]=\"true\"\r\n    >\r\n        <ng-template let-promotion=\"item\">\r\n            {{ promotion.usageLimit }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column\r\n        *ngFor=\"let customField of customFields\"\r\n        [customField]=\"customField\"\r\n        [sorts]=\"sorts\"\r\n    />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    GetPromotionListDocument,\n    LogicalOperator,\n    PROMOTION_FRAGMENT,\n    PromotionListOptions,\n    PromotionSortParameter,\n    TypedBaseListComponent,\n} from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\n\nexport const GET_PROMOTION_LIST = gql`\n    query GetPromotionList($options: PromotionListOptions) {\n        promotions(options: $options) {\n            items {\n                ...Promotion\n            }\n            totalItems\n        }\n    }\n    ${PROMOTION_FRAGMENT}\n`;\n\n@Component({\n    selector: 'vdr-promotion-list',\n    templateUrl: './promotion-list.component.html',\n    styleUrls: ['./promotion-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PromotionListComponent\n    extends TypedBaseListComponent<typeof GetPromotionListDocument, 'promotions'>\n    implements OnInit\n{\n    dataTableListId = 'promotion-list';\n    readonly customFields = this.getCustomFieldConfig('Promotion');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilters([\n            {\n                name: 'startsAt',\n                type: { kind: 'dateRange' },\n                label: _('marketing.starts-at'),\n                filterField: 'startsAt',\n            },\n            {\n                name: 'endsAt',\n                type: { kind: 'dateRange' },\n                label: _('marketing.ends-at'),\n                filterField: 'endsAt',\n            },\n            {\n                name: 'enabled',\n                type: { kind: 'boolean' },\n                label: _('common.enabled'),\n                filterField: 'enabled',\n            },\n            {\n                name: 'name',\n                type: { kind: 'text' },\n                label: _('common.name'),\n                filterField: 'name',\n            },\n            {\n                name: 'couponCode',\n                type: { kind: 'text' },\n                label: _('marketing.coupon-code'),\n                filterField: 'couponCode',\n            },\n            {\n                name: 'desc',\n                type: { kind: 'text' },\n                label: _('common.description'),\n                filterField: 'description',\n            },\n            {\n                name: 'perCustomerUsageLimit',\n                type: { kind: 'number' },\n                label: _('marketing.per-customer-limit'),\n                filterField: 'perCustomerUsageLimit',\n            },\n            {\n                name: 'usageLimit',\n                type: { kind: 'number' },\n                label: _('marketing.usage-limit'),\n                filterField: 'usageLimit',\n            },\n        ])\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('createdAt', 'DESC')\n        .addSorts([\n            { name: 'createdAt' },\n            { name: 'updatedAt' },\n            { name: 'startsAt' },\n            { name: 'endsAt' },\n            { name: 'name' },\n            { name: 'couponCode' },\n            { name: 'perCustomerUsageLimit' },\n            { name: 'usageLimit' },\n        ])\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        super.configure({\n            document: GetPromotionListDocument,\n            getItems: data => data.promotions,\n            setVariables: (skip, take) => this.createQueryOptions(skip, take, this.searchTermControl.value),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n\n    private createQueryOptions(\n        skip: number,\n        take: number,\n        searchTerm: string | null,\n    ): { options: PromotionListOptions } {\n        const filter = this.filters.createFilterInput();\n        const sort = this.sorts.createSortInput();\n        let filterOperator = LogicalOperator.AND;\n        if (searchTerm) {\n            filter.couponCode = { contains: searchTerm };\n            filter.name = { contains: searchTerm };\n            filterOperator = LogicalOperator.OR;\n        }\n\n        return {\n            options: {\n                skip,\n                take,\n                filter,\n                filterOperator,\n                sort,\n            },\n        };\n    }\n}\n","import { Route } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { detailBreadcrumb, PageComponent, PageService, PromotionFragment } from '@vendure/admin-ui/core';\r\n\r\nexport const createRoutes = (pageService: PageService): Route[] => [\r\n    {\r\n        path: 'promotions',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'promotion-list',\r\n            breadcrumb: _('breadcrumb.promotions'),\r\n        },\r\n        children: pageService.getPageTabRoutes('promotion-list'),\r\n    },\r\n    {\r\n        path: 'promotions/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'promotion-detail',\r\n            breadcrumb: { label: _('breadcrumb.promotions'), link: ['../', 'promotions'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('promotion-detail'),\r\n    },\r\n];\r\n\r\nexport function promotionBreadcrumb(data: any, params: any) {\r\n    return detailBreadcrumb<PromotionFragment>({\r\n        entity: data.entity,\r\n        id: params.id,\r\n        breadcrumbKey: 'breadcrumb.promotions',\r\n        getName: promotion => promotion.name,\r\n        route: 'promotions',\r\n    });\r\n}\r\n","import { AsyncPipe } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, ROUTES } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BulkActionRegistryService,\r\n    detailComponentWithResolver,\r\n    GetPromotionDetailDocument,\r\n    PageService,\r\n    SharedModule,\r\n} from '@vendure/admin-ui/core';\r\n\r\nimport { PromotionDetailComponent } from './components/promotion-detail/promotion-detail.component';\r\nimport {\r\n    assignPromotionsToChannelBulkAction,\r\n    deletePromotionsBulkAction,\r\n    duplicatePromotionsBulkAction,\r\n    removePromotionsFromChannelBulkAction,\r\n} from './components/promotion-list/promotion-list-bulk-actions';\r\nimport { PromotionListComponent } from './components/promotion-list/promotion-list.component';\r\nimport { createRoutes } from './marketing.routes';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RouterModule.forChild([]), SharedModule, AsyncPipe, SharedModule],\r\n    providers: [\r\n        {\r\n            provide: ROUTES,\r\n            useFactory: (pageService: PageService) => createRoutes(pageService),\r\n            multi: true,\r\n            deps: [PageService],\r\n        },\r\n    ],\r\n    declarations: [PromotionListComponent, PromotionDetailComponent],\r\n})\r\nexport class MarketingModule {\r\n    private static hasRegisteredTabsAndBulkActions = false;\r\n\r\n    constructor(bulkActionRegistryService: BulkActionRegistryService, pageService: PageService) {\r\n        if (MarketingModule.hasRegisteredTabsAndBulkActions) {\r\n            return;\r\n        }\r\n        bulkActionRegistryService.registerBulkAction(assignPromotionsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(duplicatePromotionsBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removePromotionsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deletePromotionsBulkAction);\r\n\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'promotion-list',\r\n            tab: _('breadcrumb.promotions'),\r\n            route: '',\r\n            component: PromotionListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'promotion-detail',\r\n            tab: _('marketing.promotion'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: PromotionDetailComponent,\r\n                query: GetPromotionDetailDocument,\r\n                entityKey: 'promotion',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('marketing.create-new-promotion'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        MarketingModule.hasRegisteredTabsAndBulkActions = true;\r\n    }\r\n}\r\n"],"x_google_ignoreList":[]}