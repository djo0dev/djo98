{"version":3,"file":"668.8db9b709eec8b32f.js","mappings":"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","names":["i0","DashboardWidgetComponent","ngAfterViewInit","this","loadWidget","_this","_asyncToGenerator","loadComponentResult","widgetConfig","loadComponent","componentType","Promise","componentRef","portal","createComponent","changeDetectorRef","detectChanges","ngOnDestroy","destroy","static","t","core","VBU","selectors","viewQuery","rf","ctx","ViewContainerRef","DashboardWidgetComponent_ng_template_2_Template","DashboardWidgetComponent_ng_template_3_Template","tmp_1_0","title","undefined","widget_r2","_r1","$implicit","ctx_r2","addWidget","id","tmp_2_0","config","width_r7","_r6","widget_r8","setWidgetWidth","width","_c1","DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_button_11_Template","_r5","removeWidget","getSupportedWidths","DashboardComponent_div_12_div_1_vdr_dashboard_widget_1_Template","getClassForWidth","requiresPermissions","$event","_r4","drop","DashboardComponent_div_12_div_1_Template","_c0","rowIndex_r10","row_r9","trackRowItem","DashboardComponent","constructor","dashboardWidgetService","localStorageService","changedDetectorRef","dataService","deletionMarker","setTitle","titleSetter","ngOnInit","availableWidgets$","client","userStatus","stream$","pipe","map","permissions","getAvailableWidgets","tap","widgets","widgetLayout","initLayout","w","assertNever","supportedWidths","widget","recalculateLayout","trackRow","index","row","item","join","getWidgetById","targetRow","length","push","event","currentIndex","previousIndex","previousContainer","container","data","previousLayoutRow","newLayoutRow","splice","availableIds","savedLayoutDef","get","layoutDef","filter","includes","getWidgetLayout","newLayoutDef","reduce","flat","set","setTimeout","markForCheck","i1","decls","vars","consts","template","DashboardComponent_button_9_Template","DashboardComponent_div_12_Template","dashboardRoutes","path","component","pathMatch","order_r1","code","order_r2","state","order_r3","customer","order_r4","totalWithTax","currencyCode","order_r5","orderPlacedAt","gql","LatestOrdersWidgetComponent","latestOrders$","query","GetLatestOrdersDocument","options","take","active","eq","notIn","sort","SortOrder","DESC","refetchOnChannelChange","mapStream","orders","items","LatestOrdersWidgetComponent_ng_template_4_Template","LatestOrdersWidgetComponent_ng_template_7_Template","LatestOrdersWidgetComponent_ng_template_10_Template","LatestOrdersWidgetComponent_ng_template_13_Template","LatestOrdersWidgetComponent_ng_template_16_Template","LatestOrdersWidgetModule","$C","G2t","CoreModule","SharedModule","ctx_r1","metricType$","next","MetricType","OrderTotal","OrderCount","AverageOrderValue","refresh","activeMetricType_r3","GET_ORDER_CHART_DATA","OrderChartWidgetComponent","refresh$","Subject","BehaviorSubject","currencyCode$","settings","getActiveChannel","activeChannel","defaultCurrencyCode","uiState$","uiState","distinctUntilChanged","metrics$","combineLatest","switchMap","metricType","startWith","GetOrderChartDataDocument","types","mapSingle","metricSummary","metrics","formatValueAs","locale","language","formatOptions","find","m","type","entries","entry","OrderChartWidgetComponent_div_2_Template","selection$","timeframe","date","today","yesterday","selection_r3","range_r4","start","end","GET_ORDER_SUMMARY","OrderSummaryWidgetComponent","Date","setDate","getDate","dateRange$","selection","dayjs","startOf","toDate","endOf","shareReplay","orderSummary$","GetOrderSummaryDocument","toISOString","totalOrderCount$","res","totalItems","totalOrderValue$","total","order","OrderSummaryWidgetComponent_div_18_Template","OrderSummaryWidgetComponent_div_20_Template","OrderSummaryWidgetModule","DEFAULT_DASHBOARD_WIDGET_LAYOUT","DEFAULT_WIDGETS","_","Permission","ReadOrder","orderSummary","latestOrders","DashboardModule","Object","registerWidget","getDefaultLayout","setDefaultLayout","RouterModule","forChild","TestWidgetComponent","TestWidgetModule","ctx_r0","hideVendureBranding","hideVersion","version","WelcomeWidgetComponent_div_0_p_7_Template","administrator_r2","firstName","lastName","user","lastLogin","WelcomeWidgetComponent","ADMIN_UI_VERSION","brand","getAppConfig","administrator$","administrator","getActiveAdministrator","activeAdministrator","WelcomeWidgetComponent_div_0_Template","WelcomeWidgetModule"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["./src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.html","./src/lib/dashboard/src/components/dashboard-widget/dashboard-widget.component.ts","./src/lib/dashboard/src/components/dashboard/dashboard.component.html","./src/lib/dashboard/src/components/dashboard/dashboard.component.ts","./src/lib/dashboard/src/dashboard.routes.ts","./src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.html","./src/lib/dashboard/src/widgets/latest-orders-widget/latest-orders-widget.component.ts","./src/lib/dashboard/src/widgets/order-chart-widget/order-chart-widget.component.html","./src/lib/dashboard/src/widgets/order-chart-widget/order-chart-widget.component.ts","./src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.html","./src/lib/dashboard/src/widgets/order-summary-widget/order-summary-widget.component.ts","./src/lib/dashboard/src/default-widgets.ts","./src/lib/dashboard/src/dashboard.module.ts","./src/lib/dashboard/src/widgets/test-widget/test-widget.component.ts","./src/lib/dashboard/src/widgets/test-widget/test-widget.component.html","./src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.html","./src/lib/dashboard/src/widgets/welcome-widget/welcome-widget.component.ts"],"sourcesContent":["<vdr-card [title]=\"widgetConfig.title ?? '' | translate\">\r\n    <ng-template vdrCardControls>\r\n        <ng-content></ng-content>\r\n    </ng-template>\r\n    <ng-template #portal></ng-template>\r\n</vdr-card>\r\n","import {\r\n    AfterViewInit,\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ComponentRef,\r\n    Input,\r\n    OnDestroy,\r\n    ViewChild,\r\n    ViewContainerRef,\r\n} from '@angular/core';\r\nimport { DashboardWidgetConfig } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-dashboard-widget',\r\n    templateUrl: './dashboard-widget.component.html',\r\n    styleUrls: ['./dashboard-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DashboardWidgetComponent implements AfterViewInit, OnDestroy {\r\n    @Input() widgetConfig: DashboardWidgetConfig;\r\n\r\n    @ViewChild('portal', { read: ViewContainerRef })\r\n    private portal: ViewContainerRef;\r\n\r\n    private componentRef: ComponentRef<any>;\r\n\r\n    ngAfterViewInit(): void {\r\n        this.loadWidget();\r\n    }\r\n\r\n    private async loadWidget() {\r\n        const loadComponentResult = this.widgetConfig.loadComponent();\r\n        const componentType =\r\n            loadComponentResult instanceof Promise ? await loadComponentResult : loadComponentResult;\r\n        this.componentRef = this.portal.createComponent(componentType);\r\n        this.componentRef.changeDetectorRef.detectChanges();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.componentRef) {\r\n            this.componentRef.destroy();\r\n        }\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <div class=\"widget-header mb-1\">\r\n        <vdr-dropdown>\r\n            <button class=\"btn btn-secondary btn-sm\" vdrDropdownTrigger>\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'dashboard.add-widget' | translate }}\r\n                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n            </button>\r\n            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                <button\r\n                    vdrDropdownItem\r\n                    *ngFor=\"let widget of availableWidgets$ | async\"\r\n                    (click)=\"addWidget(widget.id)\"\r\n                >\r\n                    {{ (widget.config.title ?? widget.id) | translate }}\r\n                </button>\r\n            </vdr-dropdown-menu>\r\n        </vdr-dropdown>\r\n    </div>\r\n    <div cdkDropListGroup>\r\n        <div\r\n            class=\"clr-row dashboard-row\"\r\n            *ngFor=\"let row of widgetLayout; index as rowIndex; trackBy: trackRow\"\r\n            cdkDropList\r\n            (cdkDropListDropped)=\"drop($event)\"\r\n            cdkDropListOrientation=\"horizontal\"\r\n            [cdkDropListData]=\"{ index: rowIndex }\"\r\n        >\r\n            <div\r\n                *ngFor=\"let widget of row; trackBy: trackRowItem\"\r\n                class=\"dashboard-item\"\r\n                [ngClass]=\"getClassForWidth(widget.width)\"\r\n                cdkDrag\r\n                [cdkDragData]=\"widget\"\r\n            >\r\n                <vdr-dashboard-widget\r\n                    *vdrIfPermissions=\"widget.config.requiresPermissions || null\"\r\n                    [widgetConfig]=\"widget.config\"\r\n                >\r\n                    <div class=\"flex\">\r\n                        <div class=\"drag-handle\" cdkDragHandle>\r\n                            <clr-icon shape=\"drag-handle\" size=\"24\"></clr-icon>\r\n                        </div>\r\n                        <vdr-dropdown>\r\n                            <button class=\"icon-button\" vdrDropdownTrigger>\r\n                                <clr-icon shape=\"ellipsis-vertical\"></clr-icon>\r\n                            </button>\r\n                            <vdr-dropdown-menu vdrPosition=\"bottom-right\">\r\n                                <h4 class=\"dropdown-header\">{{ 'dashboard.widget-resize' | translate }}</h4>\r\n                                <button\r\n                                    vdrDropdownItem\r\n                                    [disabled]=\"width === widget.width\"\r\n                                    *ngFor=\"let width of getSupportedWidths(widget.config)\"\r\n                                    (click)=\"setWidgetWidth(widget, width)\"\r\n                                >\r\n                                    {{ 'dashboard.widget-width' | translate : { width: width } }}\r\n                                </button>\r\n                                <div class=\"dropdown-divider\" role=\"separator\"></div>\r\n                                <button vdrDropdownItem (click)=\"removeWidget(widget)\">\r\n                                    <clr-icon shape=\"trash\" class=\"is-danger\"></clr-icon>\r\n                                    {{ 'dashboard.remove-widget' | translate }}\r\n                                </button>\r\n                            </vdr-dropdown-menu>\r\n                        </vdr-dropdown>\r\n                    </div>\r\n                </vdr-dashboard-widget>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</vdr-page-block>\r\n","import { CdkDragDrop } from '@angular/cdk/drag-drop';\r\nimport { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnInit } from '@angular/core';\r\nimport {\r\n    DashboardWidgetConfig,\r\n    DashboardWidgetService,\r\n    DashboardWidgetWidth,\r\n    DataService,\r\n    LocalStorageService,\r\n    titleSetter,\r\n    WidgetLayout,\r\n    WidgetLayoutDefinition,\r\n} from '@vendure/admin-ui/core';\r\nimport { assertNever } from '@vendure/common/lib/shared-utils';\r\nimport { Observable } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'vdr-dashboard',\r\n    templateUrl: './dashboard.component.html',\r\n    styleUrls: ['./dashboard.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n    widgetLayout: WidgetLayout | undefined;\r\n    availableWidgets$: Observable<Array<{ id: string; config: DashboardWidgetConfig }>>;\r\n    private readonly deletionMarker = '__delete__';\r\n    private setTitle = titleSetter();\r\n    constructor(\r\n        private dashboardWidgetService: DashboardWidgetService,\r\n        private localStorageService: LocalStorageService,\r\n        private changedDetectorRef: ChangeDetectorRef,\r\n        private dataService: DataService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.availableWidgets$ = this.dataService.client.userStatus().stream$.pipe(\r\n            map(({ userStatus }) => userStatus.permissions),\r\n            map(permissions => this.dashboardWidgetService.getAvailableWidgets(permissions)),\r\n            tap(widgets => (this.widgetLayout = this.initLayout(widgets.map(w => w.id)))),\r\n        );\r\n        this.setTitle('breadcrumb.dashboard');\r\n    }\r\n\r\n    getClassForWidth(width: DashboardWidgetWidth): string {\r\n        switch (width) {\r\n            case 3:\r\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-3`;\r\n            case 4:\r\n                return `clr-col-12 clr-col-sm-6 clr-col-lg-4`;\r\n            case 6:\r\n                return `clr-col-12 clr-col-lg-6`;\r\n            case 8:\r\n                return `clr-col-12 clr-col-lg-8`;\r\n            case 12:\r\n                return `clr-col-12`;\r\n            default:\r\n                assertNever(width);\r\n        }\r\n    }\r\n\r\n    getSupportedWidths(config: DashboardWidgetConfig): DashboardWidgetWidth[] {\r\n        return config.supportedWidths || [3, 4, 6, 8, 12];\r\n    }\r\n\r\n    setWidgetWidth(widget: WidgetLayout[number][number], width: DashboardWidgetWidth) {\r\n        widget.width = width;\r\n        this.recalculateLayout();\r\n    }\r\n\r\n    trackRow(index: number, row: WidgetLayout[number]) {\r\n        const id = row.map(item => `${item.id}:${item.width}`).join('|');\r\n        return id;\r\n    }\r\n\r\n    trackRowItem(index: number, item: WidgetLayout[number][number]) {\r\n        return item.config;\r\n    }\r\n\r\n    addWidget(id: string) {\r\n        const config = this.dashboardWidgetService.getWidgetById(id);\r\n        if (config) {\r\n            const width = this.getSupportedWidths(config)[0];\r\n            const widget: WidgetLayout[number][number] = {\r\n                id,\r\n                config,\r\n                width,\r\n            };\r\n            let targetRow: WidgetLayout[number];\r\n            if (this.widgetLayout && this.widgetLayout.length) {\r\n                targetRow = this.widgetLayout[this.widgetLayout.length - 1];\r\n            } else {\r\n                targetRow = [];\r\n                this.widgetLayout?.push(targetRow);\r\n            }\r\n            targetRow.push(widget);\r\n            this.recalculateLayout();\r\n        }\r\n    }\r\n\r\n    removeWidget(widget: WidgetLayout[number][number]) {\r\n        widget.id = this.deletionMarker;\r\n        this.recalculateLayout();\r\n    }\r\n\r\n    drop(event: CdkDragDrop<{ index: number }>) {\r\n        const { currentIndex, previousIndex, previousContainer, container } = event;\r\n        if (previousIndex === currentIndex && previousContainer.data.index === container.data.index) {\r\n            // Nothing changed\r\n            return;\r\n        }\r\n        if (this.widgetLayout) {\r\n            const previousLayoutRow = this.widgetLayout[previousContainer.data.index];\r\n            const newLayoutRow = this.widgetLayout[container.data.index];\r\n\r\n            previousLayoutRow.splice(previousIndex, 1);\r\n            newLayoutRow.splice(currentIndex, 0, event.item.data);\r\n            this.recalculateLayout();\r\n        }\r\n    }\r\n\r\n    private initLayout(availableIds: string[]): WidgetLayout {\r\n        const savedLayoutDef = this.localStorageService.get('dashboardWidgetLayout');\r\n        let layoutDef: WidgetLayoutDefinition | undefined;\r\n        if (savedLayoutDef) {\r\n            // validate all the IDs from the saved layout are still available\r\n            layoutDef = savedLayoutDef.filter(item => availableIds.includes(item.id));\r\n        }\r\n        return this.dashboardWidgetService.getWidgetLayout(layoutDef);\r\n    }\r\n\r\n    private recalculateLayout() {\r\n        if (this.widgetLayout) {\r\n            const flattened = this.widgetLayout\r\n                .reduce((flat, row) => [...flat, ...row], [])\r\n                .filter(item => item.id !== this.deletionMarker);\r\n            const newLayoutDef: WidgetLayoutDefinition = flattened.map(item => ({\r\n                id: item.id,\r\n                width: item.width,\r\n            }));\r\n            this.widgetLayout = this.dashboardWidgetService.getWidgetLayout(newLayoutDef);\r\n            this.localStorageService.set('dashboardWidgetLayout', newLayoutDef);\r\n            setTimeout(() => this.changedDetectorRef.markForCheck());\r\n        }\r\n    }\r\n}\r\n","import { Routes } from '@angular/router';\r\n\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\n\r\nexport const dashboardRoutes: Routes = [\r\n    {\r\n        path: '',\r\n        component: DashboardComponent,\r\n        pathMatch: 'full',\r\n    },\r\n];\r\n","<vdr-data-table-2 [items]=\"latestOrders$ | async\" id=\"latest-orders-widget-list\">\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\">\r\n        <ng-template let-order=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['/orders/', order.id]\"\r\n                ><span>{{ order.code }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'order.state' | translate\" id=\"state\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-order=\"item\">\r\n            <vdr-order-state-label [state]=\"order.state\"></vdr-order-state-label>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'customer.customer' | translate\" id=\"customer\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-order=\"item\">\r\n            <vdr-customer-label [customer]=\"order.customer\"></vdr-customer-label>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'order.total' | translate\" id=\"total\">\r\n        <ng-template let-order=\"item\">\r\n            {{ order.totalWithTax | localeCurrency : order.currencyCode }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'order.placed-at' | translate\" id=\"placed-at\">\r\n        <ng-template let-order=\"item\">\r\n            {{ order.orderPlacedAt | timeAgo }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport {\r\n    CoreModule,\r\n    DataService,\r\n    GetLatestOrdersDocument,\r\n    GetLatestOrdersQuery,\r\n    GetOrderListQuery,\r\n    ItemOf,\r\n    SharedModule,\r\n    SortOrder,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { Observable } from 'rxjs';\r\n\r\nconst GET_LATEST_ORDERS = gql`\r\n    query GetLatestOrders($options: OrderListOptions) {\r\n        orders(options: $options) {\r\n            items {\r\n                id\r\n                createdAt\r\n                updatedAt\r\n                type\r\n                orderPlacedAt\r\n                code\r\n                state\r\n                total\r\n                totalWithTax\r\n                currencyCode\r\n                customer {\r\n                    id\r\n                    firstName\r\n                    lastName\r\n                }\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-latest-orders-widget',\r\n    templateUrl: './latest-orders-widget.component.html',\r\n    styleUrls: ['./latest-orders-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class LatestOrdersWidgetComponent implements OnInit {\r\n    latestOrders$: Observable<Array<ItemOf<GetLatestOrdersQuery, 'orders'>>>;\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.latestOrders$ = this.dataService\r\n            .query(GetLatestOrdersDocument, {\r\n                options: {\r\n                    take: 10,\r\n                    filter: {\r\n                        active: { eq: false },\r\n                        state: { notIn: ['Cancelled', 'Draft'] },\r\n                    },\r\n                    sort: {\r\n                        orderPlacedAt: SortOrder.DESC,\r\n                    },\r\n                },\r\n            })\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.orders.items);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule, SharedModule],\r\n    declarations: [LatestOrdersWidgetComponent],\r\n})\r\nexport class LatestOrdersWidgetModule {}\r\n","<vdr-chart [entries]=\"metrics$ | async\" />\r\n<div class=\"flex\" *ngIf=\"metricType$ | async as activeMetricType\">\r\n    <button\r\n        class=\"button-small\"\r\n        (click)=\"metricType$.next(MetricType.OrderTotal)\"\r\n        [class.active]=\"activeMetricType === MetricType.OrderTotal\"\r\n    >\r\n        {{ 'dashboard.metric-order-total-value' | translate }}\r\n    </button>\r\n    <button\r\n        class=\"ml-1 button-small\"\r\n        (click)=\"metricType$.next(MetricType.OrderCount)\"\r\n        [class.active]=\"activeMetricType === MetricType.OrderCount\"\r\n    >\r\n        {{ 'dashboard.metric-number-of-orders' | translate }}\r\n    </button>\r\n    <button\r\n        class=\"ml-1 button-small\"\r\n        (click)=\"metricType$.next(MetricType.AverageOrderValue)\"\r\n        [class.active]=\"activeMetricType === MetricType.AverageOrderValue\"\r\n    >\r\n        {{ 'dashboard.metric-average-order-value' | translate }}\r\n    </button>\r\n    <div class=\"flex-spacer\"></div>\r\n    <button class=\"button-small\" (click)=\"refresh()\">\r\n        <clr-icon shape=\"refresh\"></clr-icon>\r\n    </button>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n    ChartEntry,\r\n    ChartFormatOptions,\r\n    DataService,\r\n    GetOrderChartDataDocument,\r\n    MetricType,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { BehaviorSubject, combineLatest, Observable, Subject, switchMap } from 'rxjs';\r\nimport { distinctUntilChanged, map, startWith } from 'rxjs/operators';\r\n\r\nexport const GET_ORDER_CHART_DATA = gql`\r\n    query GetOrderChartData($refresh: Boolean, $types: [MetricType!]!) {\r\n        metricSummary(input: { interval: Daily, types: $types, refresh: $refresh }) {\r\n            interval\r\n            type\r\n            entries {\r\n                label\r\n                value\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-order-chart-widget',\r\n    templateUrl: './order-chart-widget.component.html',\r\n    styleUrls: ['./order-chart-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderChartWidgetComponent implements OnInit {\r\n    constructor(private dataService: DataService) {}\r\n    metrics$: Observable<ChartEntry[]>;\r\n    refresh$ = new Subject<boolean>();\r\n    metricType$ = new BehaviorSubject(MetricType.OrderTotal);\r\n    MetricType = MetricType;\r\n\r\n    ngOnInit() {\r\n        const currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\r\n        const uiState$ = this.dataService.client.uiState().mapStream(data => data.uiState);\r\n        const metricType$ = this.metricType$.pipe(distinctUntilChanged());\r\n        this.metrics$ = combineLatest(metricType$, currencyCode$, uiState$).pipe(\r\n            switchMap(([metricType, currencyCode, uiState]) =>\r\n                this.refresh$.pipe(\r\n                    startWith(false),\r\n                    switchMap(refresh =>\r\n                        this.dataService\r\n                            .query(GetOrderChartDataDocument, {\r\n                                types: [metricType],\r\n                                refresh,\r\n                            })\r\n                            .mapSingle(data => data.metricSummary)\r\n                            .pipe(\r\n                                map(metrics => {\r\n                                    const formatValueAs: 'currency' | 'number' =\r\n                                        metricType === MetricType.OrderCount ? 'number' : 'currency';\r\n                                    const locale = `${uiState.language}-${uiState.locale}`;\r\n\r\n                                    const formatOptions: ChartFormatOptions = {\r\n                                        formatValueAs,\r\n                                        currencyCode,\r\n                                        locale,\r\n                                    };\r\n                                    return (\r\n                                        metrics\r\n                                            .find(m => m.type === metricType)\r\n                                            ?.entries.map(entry => ({ ...entry, formatOptions })) ?? []\r\n                                    );\r\n                                }),\r\n                            ),\r\n                    ),\r\n                ),\r\n            ),\r\n        );\r\n    }\r\n\r\n    refresh() {\r\n        this.refresh$.next(true);\r\n    }\r\n}\r\n","<div class=\"stats\">\r\n    <div class=\"stat\">\r\n        <div class=\"stat-figure\">{{ totalOrderCount$ | async }}</div>\r\n        <div class=\"stat-label\">{{ 'dashboard.total-orders' | translate }}</div>\r\n    </div>\r\n    <div class=\"stat\">\r\n        <div class=\"stat-figure\">\r\n            {{ totalOrderValue$ | async | localeCurrency: (currencyCode$ | async) || undefined }}\r\n        </div>\r\n        <div class=\"stat-label\">{{ 'dashboard.total-order-value' | translate }}</div>\r\n    </div>\r\n</div>\r\n<div class=\"footer\">\r\n    <div class=\"flex\" *ngIf=\"selection$ | async as selection\">\r\n        <button class=\"button-small\" [class.active]=\"selection.date === today\" (click)=\"selection$.next({timeframe: 'day', date: today})\">\r\n            {{ 'dashboard.today' | translate }}\r\n        </button>\r\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.date === yesterday\" (click)=\"selection$.next({timeframe: 'day', date: yesterday})\">\r\n            {{ 'dashboard.yesterday' | translate }}\r\n        </button>\r\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.timeframe === 'week'\" (click)=\"selection$.next({timeframe: 'week'})\">\r\n            {{ 'dashboard.thisWeek' | translate }}\r\n        </button>\r\n        <button class=\"ml-1 button-small\" [class.active]=\"selection.timeframe === 'month'\" (click)=\"selection$.next({timeframe: 'month'})\">\r\n            {{ 'dashboard.thisMonth' | translate }}\r\n        </button>\r\n    </div>\r\n\r\n    <div class=\"date-range\" *ngIf=\"dateRange$ | async as range\">\r\n        {{ range.start | localeDate }} - {{ range.end | localeDate }}\r\n    </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport { CoreModule, DataService, GetOrderSummaryDocument } from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport dayjs from 'dayjs';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { distinctUntilChanged, map, shareReplay, switchMap } from 'rxjs/operators';\r\n\r\nexport type Timeframe = 'day' | 'week' | 'month';\r\n\r\nexport const GET_ORDER_SUMMARY = gql`\r\n    query GetOrderSummary($start: DateTime!, $end: DateTime!) {\r\n        orders(options: { filter: { orderPlacedAt: { between: { start: $start, end: $end } } } }) {\r\n            totalItems\r\n            items {\r\n                id\r\n                totalWithTax\r\n                currencyCode\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-order-summary-widget',\r\n    templateUrl: './order-summary-widget.component.html',\r\n    styleUrls: ['./order-summary-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class OrderSummaryWidgetComponent implements OnInit {\r\n    today = new Date();\r\n    yesterday = new Date(new Date().setDate(this.today.getDate() - 1));\r\n    totalOrderCount$: Observable<number>;\r\n    totalOrderValue$: Observable<number>;\r\n    currencyCode$: Observable<string | undefined>;\r\n    selection$ = new BehaviorSubject<{ timeframe: Timeframe; date?: Date }>({\r\n        timeframe: 'day',\r\n        date: this.today,\r\n    });\r\n    dateRange$: Observable<{ start: Date; end: Date }>;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.dateRange$ = this.selection$.pipe(\r\n            distinctUntilChanged(),\r\n            map(selection => ({\r\n                start: dayjs(selection.date).startOf(selection.timeframe).toDate(),\r\n                end: dayjs(selection.date).endOf(selection.timeframe).toDate(),\r\n            })),\r\n            shareReplay(1),\r\n        );\r\n        const orderSummary$ = this.dateRange$.pipe(\r\n            switchMap(({ start, end }) =>\r\n                this.dataService\r\n                    .query(GetOrderSummaryDocument, { start: start.toISOString(), end: end.toISOString() })\r\n                    .refetchOnChannelChange()\r\n                    .mapStream(data => data.orders),\r\n            ),\r\n            shareReplay(1),\r\n        );\r\n        this.totalOrderCount$ = orderSummary$.pipe(map(res => res.totalItems));\r\n        this.totalOrderValue$ = orderSummary$.pipe(\r\n            map(res => res.items.reduce((total, order) => total + order.totalWithTax, 0)),\r\n        );\r\n        this.currencyCode$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .refetchOnChannelChange()\r\n            .mapStream(data => data.activeChannel.defaultCurrencyCode || undefined);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule],\r\n    declarations: [OrderSummaryWidgetComponent],\r\n})\r\nexport class OrderSummaryWidgetModule {}\r\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { DashboardWidgetConfig, Permission, WidgetLayoutDefinition } from '@vendure/admin-ui/core';\r\n\r\nimport { LatestOrdersWidgetComponent } from './widgets/latest-orders-widget/latest-orders-widget.component';\r\nimport { OrderChartWidgetComponent } from './widgets/order-chart-widget/order-chart-widget.component';\r\nimport { OrderSummaryWidgetComponent } from './widgets/order-summary-widget/order-summary-widget.component';\r\n\r\nexport const DEFAULT_DASHBOARD_WIDGET_LAYOUT: WidgetLayoutDefinition = [\r\n    { id: 'metrics', width: 12 },\r\n    { id: 'orderSummary', width: 6 },\r\n    { id: 'latestOrders', width: 6 },\r\n];\r\n\r\nexport const DEFAULT_WIDGETS: { [id: string]: DashboardWidgetConfig } = {\r\n    metrics: {\r\n        title: _('dashboard.metrics'),\r\n        supportedWidths: [6, 8, 12],\r\n        loadComponent: () => OrderChartWidgetComponent,\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n    orderSummary: {\r\n        title: _('dashboard.orders-summary'),\r\n        loadComponent: () => OrderSummaryWidgetComponent,\r\n        supportedWidths: [4, 6, 8, 12],\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n    latestOrders: {\r\n        title: _('dashboard.latest-orders'),\r\n        loadComponent: () => LatestOrdersWidgetComponent,\r\n        supportedWidths: [6, 8, 12],\r\n        requiresPermissions: [Permission.ReadOrder],\r\n    },\r\n};\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule } from '@angular/router';\r\nimport { DashboardWidgetService, SharedModule } from '@vendure/admin-ui/core';\r\n\r\nimport { DashboardWidgetComponent } from './components/dashboard-widget/dashboard-widget.component';\r\nimport { DashboardComponent } from './components/dashboard/dashboard.component';\r\nimport { dashboardRoutes } from './dashboard.routes';\r\nimport { DEFAULT_DASHBOARD_WIDGET_LAYOUT, DEFAULT_WIDGETS } from './default-widgets';\r\nimport { OrderChartWidgetComponent } from './widgets/order-chart-widget/order-chart-widget.component';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RouterModule.forChild(dashboardRoutes)],\r\n    declarations: [DashboardComponent, DashboardWidgetComponent, OrderChartWidgetComponent],\r\n})\r\nexport class DashboardModule {\r\n    constructor(dashboardWidgetService: DashboardWidgetService) {\r\n        Object.entries(DEFAULT_WIDGETS).map(([id, config]) => {\r\n            if (!dashboardWidgetService.getWidgetById(id)) {\r\n                dashboardWidgetService.registerWidget(id, config);\r\n            }\r\n        });\r\n        if (dashboardWidgetService.getDefaultLayout().length === 0) {\r\n            dashboardWidgetService.setDefaultLayout(DEFAULT_DASHBOARD_WIDGET_LAYOUT);\r\n        }\r\n    }\r\n}\r\n","import { ChangeDetectionStrategy, Component, NgModule } from '@angular/core';\n\n@Component({\n    selector: 'vdr-test-widget',\n    templateUrl: './test-widget.component.html',\n    styleUrls: ['./test-widget.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TestWidgetComponent {}\n\n@NgModule({\n    declarations: [TestWidgetComponent],\n})\nexport class TestWidgetModule {}\n","<p>This is a test widget!</p>\r\n","<div *ngIf=\"administrator$ | async as administrator\">\r\n    <h4 class=\"\">\r\n        Welcome, {{ administrator.firstName }} {{ administrator.lastName }}<br />\r\n        <small class=\"p5\">Last login: {{ administrator.user.lastLogin | timeAgo }}</small>\r\n    </h4>\r\n\r\n    <p class=\"p5\" *ngIf=\"!hideVendureBranding || !hideVersion\">\r\n        {{ hideVendureBranding ? '' : 'Vendure' }} {{ hideVersion ? '' : ('Admin UI v' + version) }}\r\n    </p>\r\n</div>\r\n<div class=\"placeholder\">\r\n    <clr-icon shape=\"line-chart\" size=\"128\"></clr-icon>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, NgModule, OnInit } from '@angular/core';\r\nimport {\r\n    ADMIN_UI_VERSION,\r\n    CoreModule,\r\n    DataService,\r\n    GetActiveAdministratorQuery,\r\n    getAppConfig,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'vdr-welcome-widget',\r\n    templateUrl: './welcome-widget.component.html',\r\n    styleUrls: ['./welcome-widget.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class WelcomeWidgetComponent implements OnInit {\r\n    version = ADMIN_UI_VERSION;\r\n    administrator$: Observable<GetActiveAdministratorQuery['activeAdministrator']>;\r\n    brand = getAppConfig().brand;\r\n    hideVendureBranding = getAppConfig().hideVendureBranding;\r\n    hideVersion = getAppConfig().hideVersion;\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.administrator$ = this.dataService.administrator\r\n            .getActiveAdministrator()\r\n            .mapStream(data => data.activeAdministrator || null);\r\n    }\r\n}\r\n\r\n@NgModule({\r\n    imports: [CoreModule],\r\n    declarations: [WelcomeWidgetComponent],\r\n})\r\nexport class WelcomeWidgetModule {}\r\n"],"x_google_ignoreList":[]}