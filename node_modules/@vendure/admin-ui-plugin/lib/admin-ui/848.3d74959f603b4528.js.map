{"version":3,"file":"848.3d74959f603b4528.js","mappings":"yuFAMO,SAASA,MAAkBC,GAC9B,MAAMC,KAAUC,OAAkBF,GAClC,SAAOG,MAAQ,CAACC,EAAQC,KACpB,MAAMC,EAAMN,EAAOO,OACbC,EAAc,IAAIC,MAAMH,GAC9B,IAAII,EAAWV,EAAOW,IAAI,KAAM,GAC5BC,GAAQ,EACZ,QAASC,EAAI,EAAGA,EAAIP,EAAKO,KACrBC,SAAUd,EAAOa,IAAIE,aAAUC,MAAyBX,EAAaY,IACjET,EAAYK,GAAKI,GACZL,IAAUF,EAASG,KACpBH,EAASG,IAAK,GACbD,EAAQF,EAASQ,MAAMC,SAAeT,EAAW,QAEvDU,OAEPhB,EAAOW,aAAUC,MAAyBX,EAAaY,IACnD,GAAIL,EAAO,CACP,MAAMS,EAAS,CAACJ,KAAUT,GAC1BH,EAAWiB,KAAKrB,EAAUA,KAAWoB,GAAUA,EACnD,IACF,EAEV,wJCxBM,MAAOE,GACTC,YAAmBC,GAAAC,KAAAD,aAAgC,CAACE,SAAAD,KAAA,mBAAAE,iBAD3CL,IAA2BM,aAAA,EAAAF,SAAAD,KAAA,UAAAI,EAAAC,IAAA,MAA3BR,GAA2BS,UAAA,oCCAlC,MAAOC,GACTT,YAAmBC,GAAAC,KAAAD,aAAgC,CAACE,SAAAD,KAAA,mBAAAE,iBAD3CK,IAA6BJ,aAAA,EAAAF,SAAAD,KAAA,UAAAI,EAAAC,IAAA,MAA7BE,GAA6BD,UAAA,4MCe9BH,MAAA,uBAAAA,MAAA,IAAAK,EAAAC,GAAA,gCAKAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAO,EAAAC,UAAA,yCAKAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAS,EAAAD,UAAA,yCAMKR,MADL,QACKA,CAAA,UAAOA,MAAA,GAAiBA,QACzBA,MAAA,iBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAAU,GAAAC,EAAAL,KACZN,MAAA,GAAAA,MAAA,IAAAW,EAAAC,KAAA,8BAOZZ,MAAA,uBAAAA,MAAA,IAAAa,EAAAC,KAAA,6BAKAd,MAAA,iBAAsDA,MAAA,wBAAkCA,eAAlCA,oBAAA,+CACtDA,MAAA,iBAAuDA,MAAA,wBAAmCA,eAAnCA,oBAAA,kDAAvDA,MADA,EAAAe,GAAA,kBACAf,CADsD,EAAAgB,GAAA,uCAA1ChB,MAAA,OAAAiB,EAAAC,SACAlB,cAAA,QAAAiB,EAAAC,UCblB,MAAOC,EAwBTxB,YAAoByB,GAAAvB,KAAAuB,cArBXvB,KAAAwB,kBAA8B,GAE7BxB,KAAAyB,gBAAkB,IAAIC,MAIhC1B,KAAA2B,kBAAoB,IAAIC,KAAY,IAGpC5B,KAAA6B,YAAc,EACd7B,KAAA8B,aAAe,GACf9B,KAAA+B,iBAAmB,IAAIC,MAA6B,CAChDC,aAAa,EACbC,cAAeA,CAACC,EAAGC,IAAMD,EAAE1B,KAAO2B,EAAE3B,GACpC4B,cAAc,IAEVrC,KAAAsC,cAAgB,IAAIC,KACpBvC,KAAAwC,iBAAmB,IAAIC,UAA+DC,GACtF1C,KAAA2C,SAAW,IAAIJ,KACfvC,KAAA4C,SAAW,IAAIL,IAEwB,CAE/CM,WACI,MAAMC,KAAqBC,MAAM/C,KAAKwC,iBAAkBxC,KAAK4C,UAAUI,QACnEC,MAAUC,GACNlD,KAAKkD,WACClD,KAAKuB,YACA4B,MAAMC,MAAwB,CAAEC,OAAQrD,KAAKkD,WAAWzC,KACxD6C,UAAU,EAAGC,UAAWA,GAAMC,SAAW,KAAE,EAChDC,OAAG,MAGjBzD,KAAK0D,YAAWX,MAAMD,EAAoB9C,KAAKsC,eAE/CtC,KAAK0D,SAASV,QAAKW,KAAK,IAAItE,UAAUmE,IAClCxD,KAAK+B,iBAAiB6B,gBAClBJ,GAASK,OAAOC,GAAK9D,KAAKwB,kBAAkBuC,SAASD,EAAErD,MAAQ,GAAE,GAGzET,KAAK+B,iBAAiBiC,kBAAkBhB,QAAKiB,MAAUjE,KAAK2C,WAAWtD,UAAU6E,IAC7ElE,KAAKyB,gBAAgB0C,KAAKD,EAAUjF,IAAImF,GAAKA,EAAE3D,IAAG,GAEtDT,KAAKqE,oBAAmBC,KACpBtE,KAAK0D,SACL1D,KAAK2B,kBAAkB4C,aAAavB,QAAKwB,MAAU,MACrDxB,QACE/D,KAAI,EAAEuE,EAASiB,MACX,GAAIA,EAAY,CACZ,MAAMC,EAAOD,GAAYE,qBAAuB,GAChD,OAAOnB,EAAQK,OACXC,GACIA,EAAE/C,KAAK4D,oBAAoBZ,SAASW,IACpCZ,EAAE7C,KAAK0D,oBAAoBZ,SAASW,GAEhD,CACI,OAAOlB,KAInBxD,KAAK4E,YAAc5E,KAAKqE,iBAAiBrB,QAAK/D,KAAIuE,GAAWA,EAAQ3E,QACzE,CAEAgG,YAAYC,GACJ,YAAaA,GACb9E,KAAKsC,cAAc1C,KAAKI,KAAKwD,SAAW,IAExC,eAAgBsB,GAChB9E,KAAKwC,iBAAiB5C,KAAKI,KAAKkD,WAExC,CAEA6B,cACI/E,KAAK2C,SAAS/C,OACdI,KAAK2C,SAASqC,UAClB,CAEAC,UACIjF,KAAK4C,SAAShD,MAClB,CAACK,SAAAD,KAAA,mBAAAE,iBAlFQoB,GAAuBnB,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAvB7D,EAAuBhB,UAAA,2BAAA8E,eAAA,SAAAC,EAAAC,EAAAC,MAAA,EAAAF,YAMlB9E,GAA6B,WAC7BV,GAA2B,y6BD3C7CM,MAAA,0DAOIA,MADA,8BAAAqF,GAAA,OAAAF,EAAAxD,aAAA0D,CAAA,EACArF,CAD4C,sBAAAqF,GAAA,OAAAF,EAAAzD,YAAA2D,CAAA,GAQ5CrF,MALA,2BAKAA,CADwB,2CAKxBA,MAAA,2CACIA,MAAA,EAAAsF,GAAA,mBAGJtF,QACAA,MAAA,4CACIA,MAAA,GAAAuF,GAAA,mBAGJvF,QACAA,MAAA,6CACIA,MAAA,GAAAwF,GAAA,mBAGJxF,QACAA,MAAA,6CACIA,MAAA,GAAAyF,GAAA,mBAMJzF,QACAA,MAAA,6CACIA,MAAA,GAAA0F,GAAA,mBAGJ1F,QACAA,MAAA,6CACIA,MAAA,GAAA2F,GAAA,mBAKR3F,iBA/CIA,MAJA,KAAAmF,EAAAS,WAIA5F,CAJiB,QAAAA,MAAA,KAAAmF,EAAAjB,kBAIjBlE,CAHkC,aAAAA,MAAA,KAAAmF,EAAAV,aAGlCzE,CAFkC,eAAAmF,EAAAxD,aAElC3B,CAD6B,cAAAmF,EAAAzD,aAMzB1B,MAAA,GAEAA,MAFA,aAAAmF,EAAAS,WAEA5F,CAFyB,gBAAAmF,EAEzBnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA3D,kBACAxB,CADuC,wBAAAA,MAAA,+BAG3BA,MAAA,GAA4CA,MAA5C,UAAAA,MAAA,kBAA4CA,CAAT,sBAKnCA,MAAA,GAA4DA,MAA5D,UAAAA,MAAA,2BAA4DA,CAAjB,sBAK3CA,MAAA,GAA4DA,MAA5D,UAAAA,MAAA,2BAA4DA,CAAjB,sBAK3CA,MAAA,GAAgDA,MAAhD,UAAAA,MAAA,qBAAgDA,CAAX,eAQrCA,MAAA,GAAAA,MAAA,UAAAA,MAAA,sBAKAA,MAAA,GAAAA,MAAA,UAAAA,MAAA,+jBE9CQA,MAAA,8CAAAA,YAAA,qCAAAA,MAAA,EAAAU,GAAAmF,EAAAC,sDAUxB9F,MAAA,cAAkCA,MAAA,mBAAAA,MAAA+F,GAAA,MAAAF,EAAA7F,QAAA,OAAAA,MAAS6F,EAAAG,SAAQ,GAAEhG,MAAA,wBAAiCA,QACtFA,MAAA,cAAsBA,MAAA,mBAAAA,MAAA+F,GAAA,MAAAF,EAAA7F,QAAA,OAAAA,MAAS6F,EAAAI,MAAK,GAChCjG,MAAA,wBACJA,gCAHqDA,oBAAA,sBACfA,MAAA,GAAAA,MAAA,YAAA6F,EAAAxE,kBAAA3C,QAClCsB,cAAA,IAAAA,MAAA,qCAAAA,MAAA,EAAAU,GAAAmF,EAAAC,WAAA,MCGD,MAAMI,GAAmBC;;;;;;;;;;;;;;;;;EAyB1B,MAAOC,GAQTzG,YAAoByB,GAAAvB,KAAAuB,cAFpBvB,KAAAwB,kBAA8B,EAEiB,CAE/CqB,WACI7C,KAAKwG,gBAAkBxG,KAAKuB,YACvB4B,MAAMC,MAAwB,CAAEC,OAAQrD,KAAKqD,SAC7CC,UAAU,EAAGC,UAAWA,GAAMC,SAAW,IAC9CxD,KAAKyG,oBAAsBzG,KAAKuB,YAC3B4B,MAAMuD,MAAwB,CAC3BC,QAAS,CAAEhD,KAAM,OAEpBiD,UAAUC,GAAQA,EAAKC,UAAUC,OACjC/D,KACG3E,GAAe2B,KAAKwG,kBAAe,EACnCvH,KAAI,EAAE6H,EAAWE,KACbF,EAAUjD,OAAOoD,IAAMD,EAAeE,KAAKC,GAAMA,EAAG1G,KAAOwG,EAAExG,MAG7E,CAEA0F,SACInG,KAAKoH,aACT,CAEAhB,MACIpG,KAAKoH,YAAYpH,KAAKwB,kBAC1B,CAACvB,SAAAD,KAAA,mBAAAE,iBAjCQqG,IAA+BpG,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAA/BoB,GAA+BjG,UAAA,qCAAA+G,MAAA,EAAAC,KAAA,EAAAC,OAAA,qMAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,IDxC5ClF,MAAA,EAAAsH,GAAA,qBAEAtH,MAAA,6CAGIA,MAAA,2BAAAqF,GAAA,OAAAF,EAAA9D,kBAAAgE,CAAA,GAEJrF,QAEAA,MAAA,EAAAuH,GAAA,6BANIvH,QACAA,MADA,UAAAA,MAAA,IAAAmF,EAAAmB,qBACAtG,CADuC,oBAAAmF,EAAA9D,0TEG3BrB,MAAA,cAAiFA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAC,EAAAzH,QAAA0H,UAAAC,EAAA3H,QAAA,OAAAA,MAAS2H,EAAAC,UAAAH,EAAAI,aAA8B,GACpH7H,MAAA,wBACJA,cADIA,cAAA,IAAAA,MAAA,wEAIJA,MADJ,OACIA,CADyG,yBAOrGA,MAAA,0BAAAqF,GAAA,MAAAyC,EAAA9H,MAAA+H,GAAAL,UAAAC,EAAA3H,MAAA,UAAAA,MAAkB2H,EAAAK,cAAAF,EAAAlH,KAAAyE,GAAsC,GAEhErF,kHANQA,QAGAA,MAHA,QAAA8H,EAAAG,YAGAjI,CAHgC,QAAA8H,EAAAlH,KAGhCZ,CAFyB,WAAA2H,EAAAO,SAEzBlI,CADqB,iBAAA2H,EAAAQ,kBAAA,KAAAR,EAAAQ,kBAAAvE,SAAAkE,EAAAlH,kCAXpBZ,MAFb,OAEaA,CAFwB,SAExBA,CADyB,QACzBA,CAAA,YAAQA,MAAA,wBAAwCA,UACrDA,MAAA,WAAOA,MAAA,wBAAqCA,QAAQA,MAAA,QACpDA,MAAA,GAAAoI,GAAA,gBAGJpI,QACAA,MAAA,GAAAqI,GAAA,YAUJrI,4CAhBqBA,MAAA,GAAAA,YAAA,IAAAyH,EAAAa,QACNtI,MAAA,GAAAA,YAAA,IAAAyH,EAAAQ,cACEjI,MAAA,GAAAA,MAAA,SAAAyH,EAAAI,YAAAnJ,SAAAiJ,EAAAO,UAIclI,cAAA,UAAAyH,EAAAI,cCSjC,MAAOU,EANb5I,cASaE,KAAAqI,UAAW,EACVrI,KAAA2I,iBAAmB,IAAIjH,MAGjCmB,WACI7C,KAAK4I,WACT,CAEAT,cAAcU,EAAoBtJ,GACzBS,KAAKqI,UACNrI,KAAK2I,iBAAiBxE,KAAK,CAAE0E,aAAYtJ,SAEjD,CAEAwI,UAAUe,GACN,MAAMvJ,EAAQuJ,EAAKC,KAAKC,IAAMhJ,KAAKsI,kBAAkBvE,SAASiF,EAAEjI,OAChE,UAAWkI,KAAOH,EACd9I,KAAK2I,iBAAiBxE,KAAK,CAAE0E,WAAYI,EAAIlI,KAAMxB,SAE3D,CAEQqJ,YACJ,MAAMM,EAAa,IAAIC,IACjBC,EAAkC,GAClCC,EAAS,2CACf,UAAWJ,KAAOjJ,KAAKsJ,sBAEnB,GADeD,EAAOE,KAAKN,EAAIlI,MACnB,CACR,MAAMyI,EAAYP,EAAIlI,KAAK0I,MAAMJ,KAAU,GAC3C,GAAIG,EAAW,CACX,MAAME,EAAWR,EAAWS,IAAIH,GAC5BE,EACAA,EAASE,KAAKX,GAEdC,EAAWW,IAAIL,EAAW,CAACP,GAEnC,CACJ,MAAWA,EAAIa,YACXV,EAAQQ,KAAKX,GAGrBjJ,KAAK+J,SAAW,IACTX,EAAQnK,IAAI+J,KACXP,MAAOO,EAAEjI,KACTqH,YAAaY,EAAEZ,YACfJ,YAAa,CAACgB,SAEfjK,MAAMiL,KAAKd,EAAWe,WAAWhL,IAAI,EAAEwJ,EAAOK,MAAI,CAC7CL,QACAL,YAAapI,KAAKkK,uBAAuBpB,EAAK,IAC9Cd,YAAac,KAG7B,CAEQoB,uBAAuBjB,GAC3B,OAAOA,EAAIb,YAAY+B,QAAQ,6BAA8B,wBACjE,CAAClK,SAAAD,KAAA,mBAAAE,iBA5DQwI,EAAuB,EAAAzI,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAvBuD,EAAuBpI,UAAA,0BAAAhC,OAAA,CAAAgL,sBAAA,wBAAAhB,kBAAA,oBAAAD,SAAA,YAAA+B,QAAA,CAAAzB,iBAAA,oBAAAtB,MAAA,EAAAC,KAAA,EAAAC,OAAA,qNAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,IDlBhClF,MADJ,YACIA,CADiB,WAEbA,MAAA,EAAAkK,GAAA,aAoBRlK,iBApBgCA,MAAA,GAAAA,MAAA,UAAAmF,EAAAyE,iVEGpB5J,MAAA,eAGIA,MAAA,mBAAAA,MAAA+F,GAAA,MAAA4B,EAAA3H,QAAA,OAAAA,MAAS2H,EAAAwC,SAAQ,GAGjBnK,MAAA,wBACJA,gCAHIA,MAAA,WAAA2H,EAAAyC,WAAAC,SAAA1C,EAAAyC,WAAAE,UAEAtK,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAEIA,MAAA,mBAAAA,MAAA+H,GAAA,MAAAJ,EAAA3H,MAAA,UAAAA,MAAS2H,EAAA4C,OAAM,GAIfvK,MAAA,wBACJA,iCAHIA,MAAA,WAAA2H,EAAAyC,WAAAC,SAAA1C,EAAAyC,WAAAE,UAEAtK,cAAA,IAAAA,MAAA,iDANJA,MAAA,EAAAwK,GAAA,sBAGKxK,MAAA,oEAcTA,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAAyK,2BAkClBzK,MAAA,4CAKIA,MAAA,cACJA,cAJIA,MAAA,QAAAA,MAAA,iDAKJA,MAAA,4CASIA,MAAA,cACJA,cAHIA,MAFA,QAAAA,MAAA,yBAEAA,CAFyC,+CASrDA,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2H,EAAA+C,aACA1K,CAD6B,wBAAA2H,EAAAyC,WAAAZ,IAAA,2DAwB7BxJ,MADJ,UACIA,CADoF,eAGhFA,MAAA,yBAAA2K,EAAA3K,MAAA4K,GAAAlD,UAAAC,EAAA3H,QAAA,OAAAA,MAAA2H,EAAAkD,kBAAAF,EAAAG,UAAA,GAMA9K,MAAA,sDAERA,gDANQA,cAAA,SAAA2H,EAAAkD,oBAAAF,EAAAG,WAHA9K,MAAA,KAAA2K,EAAAG,oEAOA9K,cAAA,IAAAA,MAAA,IAAAA,MAAA,IAAA2K,EAAAI,cAAA,MChGjB,MAAMC,GAA2B7E;;;;;;MAMlC8E;EASA,MAAOC,WACDC,MAsBRC,uBACI,OAAOC,OAAO7L,OAAOK,KAAKyL,wBAC9B,CAEA3L,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBA3BZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,iBACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChCC,aAAc,CAAC,GAAIC,KAAWC,UAC9BC,UAAW,CAAC,GAAIF,KAAWC,UAC3BE,SAAU,CAAC,GAAIH,KAAWC,UAC1BG,SAAU,CAAC,IACXC,MAAO,CACH,IAIJzB,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,iBAItE7K,KAAAwM,cAAgC,GAChCxM,KAAAyL,wBAAyE,GACzEzL,KAAAgL,kBAAmC,IAanC,CAEAnI,WACI7C,KAAKyM,OACLzM,KAAK0M,UAAY1M,KAAKuB,YAAYoL,cAC7BC,SAAS,KACThG,UAAUiG,GAAQA,EAAKP,MAAMvF,MAAMlD,OAAO1E,GAAKA,EAAE8B,OAAS6L,OAC/D9M,KAAKuB,YAAYwL,OAAOC,aAAaC,QAAQ5N,UAAU,EAAG2N,iBACtD,IACKA,EAAWhF,YAAYjE,SAASmJ,MAAWC,uBAC3CH,EAAWhF,YAAYjE,SAASmJ,MAAWE,qBAC9C,CACE,MAAMC,EAAcrN,KAAKuK,WAAWZ,IAAI,SACpC0D,GACAA,EAAYC,SAEpB,IAEJtN,KAAKsJ,sBAAwBtJ,KAAKuN,oBAAoBC,0BAC1D,CAEAzI,cACI/E,KAAKyN,SACT,CAEAC,aAAapB,GACTtM,KAAK2N,qBACT,CAEAC,mCACI,SAASC,EAAqBC,GAC1B,OAAOtC,OAAOvB,QAAQ6D,GACjBjK,OAAO,EAAEgF,EAAYkF,KAAYA,GACjC9O,IAAI,EAAE4J,EAAYkF,KAAYlF,EACvC,CACA,GAAI7I,KAAKgL,mBACmBhL,KAAKyL,wBAAwBzL,KAAKgL,mBACrC,CAEjB,OAAO6C,EADe7N,KAAKyL,wBAAwBzL,KAAKgL,mBAAmBhD,YAE/E,CAEJ,MAAMgG,EAAWxC,OAAO7L,OAAOK,KAAKyL,yBACpC,OAAI,EAAIuC,EAASnP,QACbmB,KAAKgL,kBAAoBgD,EAAS,GAAG/C,UAC9B4C,EAAqBG,EAAS,GAAGhG,cAErC,EACX,CAEAsC,SACI,MAAQ0B,eAAcG,YAAWC,WAAUC,WAAUxB,eAAcyB,SAAUtM,KAAKuK,WAAWhL,MAC7F,KAAKyM,GAAiBG,GAAcC,GAAaC,GAC7C,OAEJ,MAAMM,EAA0C,CAC5CX,eACAG,YACAC,WACAC,WACAxB,eACAoD,QAAS3B,GAAOrN,IAAIiP,GAAQA,EAAKzN,IAAIoD,OAAOsK,wBAAuB,IAEvEnO,KAAKuB,YAAYoL,cAAcyB,oBAAoBzB,GAAetN,UAC9DwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,kBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,EAAKuH,oBAAoB3N,IAAK,CAAEmO,WAAY5O,KAAK6O,OAAO,EAEzFC,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,iBACX,EAGb,CAEA7D,OACI1K,KAAKgP,QACAhM,QACGW,KAAK,IAAC,EACNsL,KAAS,EAAGxO,SACR,MAAMyO,EAAYlP,KAAKuK,WAAWhL,MAC5BoN,EAA0C,CAC5ClM,KACAuL,aAAckD,EAAUlD,aACxBG,UAAW+C,EAAU/C,UACrBC,SAAU8C,EAAU9C,SACpBC,SAAU6C,EAAU7C,SACpBxB,aAAcqE,EAAUrE,aACxBoD,QAASiB,EAAU5C,OAAOrN,IAAIiP,GAAQA,EAAKzN,KAE/C,OAAOT,KAAKuB,YAAYoL,cAAcwC,oBAAoBxC,EAAa,IAG9EtN,UACGwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,kBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAAY,EAEpCK,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,iBACX,EAGjB,CAEUa,cACNb,EACAc,GAEArP,KAAKuK,WAAW+E,WAAW,CACvBtD,aAAcuC,EAAOvC,aACrBG,UAAWoC,EAAOpC,UAClBC,SAAUmC,EAAOnC,SACjBE,MAAOiC,EAAOgB,KAAKjD,QAEnBtM,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBAAyBxP,KAAK6K,aAAc7K,KAAKuK,WAAWZ,IAAI,CAAC,iBAAkB4E,GAE5F,MAAMkB,EAAkBzP,KAAKuK,WAAWZ,IAAI,YACxC8F,IACKlB,EAAO9N,GAGRgP,EAAgBC,cAAc,IAF9BD,EAAgBC,cAAc,CAACzD,KAAWC,YAKlDlM,KAAK2N,qBACT,CAEQA,sBACJ,MAAMgC,EAAqB3P,KAAKuK,WAAWZ,IAAI,SAC/C,GAAIgG,EAAoB,CACpB,MAAMrD,EAAQqD,EAAmBpQ,MAC3BqQ,EAA0B,IAAIzG,IAC9B0G,EAAmB,IAAI1G,IAE7B,UAAW+E,KAAQ5B,GAAS,GACxB,UAAWwD,KAAW5B,EAAKF,SAAU,CAEjC,MAAM+B,EADqBH,EAAwBjG,IAAImG,EAAQrP,KACnB,IAAIuP,IAEhD9B,EAAKlG,YAAYiI,QAAQC,GAAKH,EAAc3J,IAAI8J,IAChDN,EAAwB/F,IAAIiG,EAAQrP,GAAIsP,GACxCF,EAAiBhG,IAAIiG,EAAQrP,GAAIqP,EAAQ7O,KAC7C,CAGJjB,KAAKyL,wBAA0B,GAC/B,UAAWR,KAAalM,MAAMiL,KAAK4F,EAAwBO,QAAS,CAEhE,MAAMJ,EAAgBH,EAAwBjG,IAAIsB,GAC5CmF,EAAkD,GACxD,UAAWnH,KAAOjJ,KAAKuN,oBAAoBC,2BACvC4C,EAAgBnH,EAAIlI,MAAQgP,EAAcM,IAAIpH,EAAIlI,MAEtDf,KAAKyL,wBAAwBR,GAAa,CAEtCA,YACAC,YAAa2E,EAAiBlG,IAAIsB,GAClCjD,YAAaoI,EAGrB,CACJ,CACJ,CAACnQ,SAAAD,KAAA,mBAAAE,iBA/MQmL,IAAoBlL,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAApBkG,GAAoB/K,UAAA,uBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,08CAAAC,SAAA,SAAAnC,EAAAC,GAAA,KAAAD,EAAA,iBD5C7BlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAAqQ,GAAA,iCAQArQ,MAAA,EAAAsQ,GAAA,yBAAAtQ,OAUAA,MAAA,oCAGZA,YAIQA,MAFR,YAEQA,CAFoC,4BAEpCA,CADoB,8BAEhBA,MAAA,GAAAuQ,GAAA,oCAGJvQ,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAMfA,MAAA,wCAMJA,QACAA,MAAA,6CACIA,MAAA,wCAMJA,QACAA,MAAA,8CACIA,MAAA,yCAMJA,QACAA,MAAA,GAAAwQ,GAAA,2CAOAxQ,MAAA,GAAAyQ,GAAA,qEAYRzQ,UAEAA,MAAA,GAAA0Q,GAAA,mBAWA1Q,MAAA,0CAMRA,UAEIA,MADJ,oBACIA,CADY,wCAERA,MAAA,qCAKIA,MAAA,kBAAAqF,GAAArF,aAAAwH,GAAAxH,MAAUmF,EAAAoI,aAAAlI,GAAoB,GAEjCrF,QAEDA,MAAA,YACIA,MAAA,GAAA2Q,GAAA,aAYJ3Q,QACAA,MAAA,6BAOZA,qCAlIiBA,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,KAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAA6Q,GAqBpB7Q,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAGIpK,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAQC7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,+CAQIA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAA,MAAA,GAAAU,MAGQV,MAAA,GAAAA,MAAA,QAAAA,MAAA,8BAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAA,MAAA,GAAAU,MAGQV,MAAA,GAAAA,MAAA,QAAAA,MAAA,6BAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAA,MAAA,GAAAU,MAIHV,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAAyL,SAOA5Q,MAAA,GAAAA,MAAA,QAAAA,MAAA,MAAAmF,EAAAyL,SAAA5Q,MAAA,MAAAA,MAAA,GAAAU,MAeRV,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAWDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,YAMjBpK,MAAA,GAAAA,MAAA,QAAAA,MAAA,yBAEFA,MAAA,GAEAA,MAFA,QAAAA,MAAA,MAAAmF,EAAAoH,WAEAvM,CAF2B,cAE3BA,CADiB,mBAQ4CA,MAAA,GAAAA,MAAA,UAAAmF,EAAAiG,wBAc7DpL,QAEAA,MAFA,oBAAAmF,EAAAsI,mCAEAzN,CAFwD,wBAAAmF,EAAAgE,sBAExDnJ,CAD+C,mQE5HxD,MAAM8Q,MAAiCC,OAE5C,CACEC,SAAU,qBACVC,mBAAoBC,GAAmBA,EAAgBtN,SAASmJ,MAAWoE,qBAC3EC,YAAa1E,GAAQA,EAAKV,UAAY,IAAMU,EAAKT,SACjDoF,WAAYA,CAACjQ,EAAakQ,IACtBlQ,EAAYoL,cAAc+E,qBAAqBD,GAAKzO,QAAK/D,KAAI0S,GAAOA,EAAID,yICVpEvR,MAAA,UAKIA,MAAA,iBACAA,MAAA,wBACJA,eAJIA,MAAA,aAAAA,MAAA,EAAAyR,KAGAzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,qEA6BJA,MAAA,uBAAAA,MAAA,IAAA0R,EAAApR,GAAA,gCASAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAA2R,EAAAnR,UAAA,yCASAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAA4R,EAAAC,UAAA,yCAMK7R,MADL,SACKA,CAAA,UAAMA,MAAA,GAA0DA,QACjEA,MAAA,iBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAA8R,GAAAC,EAAAzR,KACbN,MAAA,GAAAA,MAAA,GAAA+R,EAAA/F,UAAA,IAAA+F,EAAA9F,SAAA,8BAOXjM,MAAA,uBAAAA,MAAA,IAAAgS,EAAAnG,aAAA,gCAKA7L,MAAA,cAAwDA,MAAA,GAAsBA,kCAAtBA,cAAAiS,EAAAhK,uCAAxDjI,MAAA,EAAAkS,GAAA,uCAA2BlS,MAAA,UAAAmS,EAAA/C,KAAAjD,iCAGnCnM,MAAA,uEAGIA,MADA,cAAAoS,EACApS,CAD2B,QAAAqS,EAAAC,QCvE5B,MAAMC,GAAyBpM;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAoChC,MAAOqM,WAAmCC,MAuC5C9S,cACI+L,QApCJ7L,KAAA6S,gBAAkB,qBACT7S,KAAA6K,aAAe7K,KAAK8L,qBAAqB,iBACzC9L,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAC,iBACAC,UAAU,CACPnS,KAAM,YACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,uBACT+E,YAAa,cAEhBH,UAAU,CACPnS,KAAM,WACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,sBACT+E,YAAa,aAEhBH,UAAU,CACPnS,KAAM,eACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,0BACT+E,YAAa,iBAEhBC,sBAAsBtT,KAAK6K,cAC3B0I,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBC,YAAY,YAAa,QACzBC,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,aAChB2S,QAAQ,CAAE3S,KAAM,iBAChB4S,oBAAoB3T,KAAK6K,cACzB0I,eAAevT,KAAK6O,OAIrBhD,MAAM+H,UAAU,CACZC,SAAUC,MACVC,SAAUlN,GAAQA,EAAKmN,eACvBC,aAAcA,CAACC,EAAMvQ,IAAS3D,KAAKmU,kBAAkBD,EAAMvQ,EAAM3D,KAAKoU,kBAAkB7U,OACxF8U,qBAAsB,CAACrU,KAAK8S,QAAQvO,aAAcvE,KAAKyS,MAAMlO,eAErE,CAEA4P,kBAAkBD,EAAcvQ,EAAc2Q,GAC1C,IAAIC,EAAU,GACVC,EAAkCC,MAAgBC,IAEtD,OAAIJ,IACAC,EAAU,CACNvI,aAAc,CACV2I,SAAUL,GAEdnI,UAAW,CACPwI,SAAUL,GAEdlI,SAAU,CACNuI,SAAUL,IAGlBE,EAAiBC,MAAgBG,IAE9B,CACHjO,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,IACA0Q,GAAW,MACZvU,KAAK8S,QAAQ+B,qBAEpBC,KAAM9U,KAAKyS,MAAMsC,kBACjBP,kBAGZ,CAACvU,SAAAD,KAAA,mBAAAE,iBA/EQyS,GAA0B,EAAA1S,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAA1BwN,GAA0BrS,UAAA,6BAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,m0BAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,ID7CnClF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA6U,GAAA,WAQA7U,MAAA,oCAGZA,YACAA,MAAA,8FAUIA,MAFA,sBAAAqF,GAAA,OAAcF,EAAA2P,cAAAzP,EAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAA,OACdF,EAAA4P,gBAAA1P,EAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAA,OACtBF,EAAA6P,kBAAA3P,EAAyB,GAOjDrF,MALA,4BAKAA,CADE,6CAKFA,MAAA,6CACIA,MAAA,GAAAiV,GAAA,mBAGJjV,QACAA,MAAA,6CAKIA,MAAA,GAAAkV,GAAA,mBAGJlV,QACAA,MAAA,6CAKIA,MAAA,GAAAmV,GAAA,mBAGJnV,QACAA,MAAA,6CACIA,MAAA,GAAAoV,GAAA,mBAMJpV,QACAA,MAAA,6CACIA,MAAA,GAAAqV,GAAA,mBAGJrV,QACAA,MAAA,8CACIA,MAAA,GAAAsV,GAAA,mBAGJtV,QACAA,MAAA,GAAAuV,GAAA,sCAKJvV,eA7EiBA,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KAYbV,MAAA,GAKAA,MALA,KAAAmF,EAAAuN,gBAKA1S,CALsB,QAAAA,MAAA,KAAAmF,EAAAqQ,QAKtBxV,CAJwB,eAAAA,MAAA,KAAAmF,EAAAsQ,eAIxBzV,CAHsC,aAAAA,MAAA,MAAAmF,EAAAV,aAGtCzE,CAFkC,cAAAA,MAAA,MAAAmF,EAAAuQ,cAElC1V,CADoC,UAAAmF,EAAAwN,SAQhC3S,MAAA,GACAA,MADA,gBAAAmF,EACAnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA8O,kBACAjU,CADuC,wBAAAA,MAAA,iCAG3BA,MAAA,GAA4CA,MAA5C,UAAAA,MAAA,mBAA4CA,CAAT,sBAM/CA,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAOZxJ,MAAA,GAAmEA,MAAnE,UAAAA,MAAA,qBAAmEA,CAA9B,cAA8BA,CAAD,OAAAmF,EAAAmN,MAAA9I,IAAA,aAQlExJ,MAAA,GAAoEA,MAApE,UAAAA,MAAA,gCAAoEA,CAApB,OAAAmF,EAAAmN,MAAA9I,IAAA,iBAKhDxJ,MAAA,GAAAA,MAAA,UAAAA,MAAA,yBAMYA,MAAA,GAAAA,MAAA,UAAAmF,EAAAuF,qVE1EpB1K,MAAA,eAGIA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAmO,EAAA3V,QAAA,OAAAA,MAAS2V,EAAAxL,SAAQ,GAGjBnK,MAAA,wBACJA,gCAHIA,MAAA,YAAA2V,EAAAC,qBAEA5V,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAEIA,MAAA,mBAAAA,MAAA6V,GAAA,MAAAF,EAAA3V,MAAA,UAAAA,MAAS2V,EAAApL,OAAM,GAIfvK,MAAA,wBACJA,iCAHIA,MAAA,YAAA2V,EAAAC,qBAEA5V,cAAA,IAAAA,MAAA,iDANJA,MAAA,EAAA8V,GAAA,sBAGK9V,MAAA,mBAAAA,MAAA,EAAAU,+BAcTV,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAA+V,8BAMlB/V,MAAA,4CAMIA,MAAA,uCAMJA,8BATIA,MAAA,QAAAA,MAAA,oBAMIA,MAAA,GAAAA,MAAA,YAAAA,MAAA,IAAA2V,EAAAK,8CAIRhW,MAAA,2CAKIA,MAAA,sDACJA,8BAHIA,MAAA,QAAAA,MAAA,oBAEAA,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAAA,MAAA,UAAA2V,EAAAvH,OAAA,KAAAuH,EAAAvH,OAAAtN,OAAA,gCAkBId,MAAA,eACIA,MAAA,GACJA,kCAFgDA,MAAA,QAAAiW,EAAA3V,IAC5CN,cAAA,IAAAiW,EAAArV,KAAA,gCA+BJZ,MAAA,eAIIA,MAAA,sDACJA,kCAHIA,MAAA,QAAAkW,GAEAlW,cAAA,IAAAA,MAAA,IAAAkW,GAAA,KAAAlW,MAAA,IAAAkW,GAAA,iCAUJlW,MAAA,eAIIA,MAAA,iCACJA,kCAHIA,MAAA,QAAAmW,GAEAnW,cAAA,IAAAA,MAAA,IAAAmW,GAAA,6BAoBAnW,MANR,iBAMQA,CAFP,mBAEOA,CADY,aAERA,MAAA,wBAGZA,mBAPIA,MAAA,uBAIQA,MAAA,GAAAA,MAAA,IAAAA,MAAA,kEAuBJA,MANR,iBAMQA,CAFP,mBAEOA,CADY,aAERA,MAAA,wBAGZA,mBAPIA,MAAA,uBAIQA,MAAA,GAAAA,MAAA,IAAAA,MAAA,0EAqBxBA,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2V,EAAAjL,aACA1K,CAD6B,wBAAA2V,EAAAvL,WAAAZ,IAAA,kBC9K1C,MAAM4M,GAAqBjQ;;;;;;MAM5BkQ;EASA,MAAOC,WACDnL,MAwBRxL,YACcyN,EACF7B,EACEnK,EACFoK,EACAC,GAERC,QANU7L,KAAAuN,sBACFvN,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBA1BZ5L,KAAA0W,qBAAuBA,KACvB1W,KAAA6K,aAAe7K,KAAK8L,qBAAqB,WAGzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChC9K,KAAM,CAAC,GAAIgL,KAAWC,UACtByK,MAAO,CAAC,GAAI1K,KAAWC,UACvB0K,iBAAkB,EAAC,GACnBC,uBAAwB,CAAC,IACzBC,uBAAwB,CAAC,IACzBC,oBAAqB,CAAC,GAAoB9K,KAAWC,UACrD8K,sBAAuB,CAAC,GAAI/K,KAAWC,UACvC+K,oBAAqB,MAACvU,EAAuCuJ,KAAWC,UACxEgL,iBAAkB,CAAC,GAAIjL,KAAWC,UAClCiL,SAAU,CAAC,GAAIlL,KAAWC,UAC1BrB,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,iBAI7D7K,KAAAmW,iBAAmB,CAACjJ,MAAWkK,WAAYlK,MAAWmK,cAAenK,MAAWoK,cAUzF,CAEAzU,WACI7C,KAAKyM,OAELzM,KAAKuX,SAAWvX,KAAKuB,YAAYiW,SAASC,gBAAgBnU,UAAUuD,GAAQA,EAAK6Q,QAAQ3Q,OACzF/G,KAAK2X,wBAA0B3X,KAAKuN,oBAAoBqK,wBACxD5X,KAAKuK,WAAWsN,SAASf,uBAAuBvS,aAC3CvB,QAAKiB,MAAUjE,KAAK2C,WACpBtD,UAAUE,IACP,GAAIA,EAAO,CACP,MAAMwX,EAAsB/W,KAAKuK,WAAWsN,SAASd,oBAAoBxX,MACrEwX,IAAwBxX,EAAMwE,SAASgT,IACvC/W,KAAKuK,WAAWsN,SAASd,oBAAoBe,SAASvY,EAAM,GAEpE,IAERS,KAAKuK,WAAWsN,SAAShB,uBAAuBtS,aAC3CvB,QAAKiB,MAAUjE,KAAK2C,WACpBtD,UAAUE,IACP,GAAIA,EAAO,CACP,MAAM0X,EAAsBjX,KAAKuK,WAAWsN,SAASZ,oBAAoB1X,MACrE0X,IAAwB1X,EAAMwE,SAASkT,IACvCjX,KAAKuK,WAAWsN,SAASZ,oBAAoBa,SAASvY,EAAM,GAEpE,GAEZ,CAEAwF,cACI/E,KAAKyN,SACT,CAEAsI,oBACI,OAAO/V,KAAKuK,WAAWwN,OAAS/X,KAAKuK,WAAWyN,KACpD,CAEA1N,SACI,IAAKtK,KAAKuK,WAAWwN,MACjB,OAEJ,MACI9W,OACA0V,QACAM,sBACAL,mBACAG,sBACAC,wBACAE,mBACArM,eACAsM,YACAnX,KAAKuK,WAAWhL,MACpB,KACK0B,GACA0V,GACAM,GACAF,GACAC,GACAE,GAED,OAEJ,MAAMpJ,GAA4B,CAC9B7M,OACA0V,QACAM,sBACAL,mBAAoBA,EACpBG,sBACAC,wBACAE,mBACArM,eACAsM,YAEJnX,KAAKuB,YAAYiW,SACZS,cAAcnK,IACd9K,QACGiM,KAAS,EAAGgJ,mBACRjY,KAAKuB,YAAY2W,KAAKC,cAAclL,QAAQjK,QACxC/D,KAAI,EAAGmZ,UAAE,CACLA,MACAH,sBAEP,EAELhJ,KAAS,EAAGmJ,KAAIH,oBAEZjY,KAAKuB,YAAYwL,OAAOsL,mBAAmBD,EAAIpK,UAAUhL,QAAK/D,KAAI,IAAMgZ,OAG/E5Y,UAAUwH,IACP,OAAQA,EAAKyR,YACT,IAAK,UACDtY,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,YAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,EAAKpG,IAAK,CAAEmO,WAAY5O,KAAK6O,QAC1D,MACJ,IAAK,4BACD7O,KAAK4L,oBAAoBmD,MAAMlI,EAAK0R,SAE5C,EAEZ,CAEA7N,OACI,IAAK1K,KAAKuK,WAAWwN,MACjB,OAEJ,MAAM7I,EAAYlP,KAAKuK,WAAWhL,MAClCS,KAAKgP,QACAhM,QACGW,KAAK,IAAC,EACNsL,KAASa,IACL,MAAMhC,EAAQ,CACVrN,GAAIqP,EAAQrP,GACZQ,KAAMiO,EAAUjO,KAChB0V,MAAOzH,EAAUyH,MACjBC,iBAAkB1H,EAAU0H,iBAC5BC,uBAAwB3H,EAAU2H,uBAClCC,uBAAwB5H,EAAU4H,uBAClCC,oBAAqB7H,EAAU6H,oBAC/BC,sBAAuB9H,EAAU8H,sBACjCC,oBAAqB/H,EAAU+H,oBAC/BC,iBAAkBhI,EAAUgI,iBAC5BrM,aAAcqE,EAAUrE,aACxBsM,SAAUjI,EAAUiI,UAExB,OAAOnX,KAAKuB,YAAYiW,SAASgB,cAAc1K,EAAK,IAG3DzO,UAAU,EAAGmZ,oBACV,OAAQA,EAAcF,YAClB,IAAK,UACDtY,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,YAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpB,MACJ,IAAK,4BACDzO,KAAK4L,oBAAoBmD,MAAMyJ,EAAcD,SACrD,EAEZ,CAKUnJ,cAAcb,EAAyBc,GAgB7C,GAfArP,KAAKuK,WAAW+E,WAAW,CACvBrO,KAAMsN,EAAOtN,KACb0V,MAAOpI,EAAOoI,OAAS3W,KAAKyY,gBAC5B7B,iBAAkBrI,EAAOqI,iBACzBC,uBAAwBtI,EAAOsI,uBAC/BC,uBAAwBvI,EAAOuI,uBAC/BC,oBAAqBxI,EAAOwI,oBAC5BC,sBAAuBzI,EAAOmK,qBAAqBjY,IAAM,GACzDwW,oBAAqB1I,EAAO0I,oBAC5BC,iBAAkB3I,EAAOoK,gBAAgBlY,IAAM,GAC/C0W,SAAU5I,EAAOqK,QAAQnY,IAAM,KAE/BT,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBAAyBxP,KAAK6K,aAAc7K,KAAKuK,WAAWZ,IAAI,CAAC,iBAAkB4E,GAExFA,EAAOtN,OAASyV,KAAsB,CACtC,MAAMmC,EAAc7Y,KAAKuK,WAAWZ,IAAI,QACpCkP,GACAA,EAAYvL,SAEpB,CACJ,CAEQmL,gBACJ,OAAO1Z,MAAMiL,KAAK8O,OAAOC,gBAAgB,IAAIC,WAAW,MACnD/Z,IAAImD,GAAKA,EAAE6W,SAAS,IAAIC,SAAS,EAAG,MACpCC,KAAK,GACd,CAAClZ,SAAAD,KAAA,mBAAAE,iBAnNQuW,IAAsBtW,MAAA+E,OAAA/E,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAtBsR,GAAsBnW,UAAA,yBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,u8DAAAC,SAAA,SAAAnC,EAAAC,MAAA,EAAAD,IDtC/BlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBAEAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAAiZ,GAAA,iCAQAjZ,MAAA,EAAAkZ,GAAA,yBAAAlZ,OAUAA,MAAA,oCAGZA,YAIQA,MAFR,YAEQA,CAFoC,4BAEpCA,CADoB,8BAEhBA,MAAA,GAAAmZ,GAAA,oCAGJnZ,QAGQA,MAFR,oBAEQA,CAFQ,cAERA,CADM,YAeFA,MAbA,GAAAoZ,GAAA,uBAaApZ,CARC,GAAAqZ,GAAA,uBAeDrZ,MAAA,6CACIA,MAAA,wCAMJA,QAEAA,MAAA,8CACIA,MAAA,0CAKIA,MAAA,gBACAA,MAAA,GAAAsZ,GAAA,mCAIRtZ,UACAA,MAAA,8CAIIA,MAAA,sDAIJA,QACAA,MAAA,8CAIIA,MAAA,oCAKZA,YACAA,MAAA,wCAEQA,MADJ,WACIA,CADmB,8CAEfA,MAAA,0CAKIA,MAAA,GAAAuZ,GAAA,iBAORvZ,UACAA,MAAA,8CACIA,MAAA,0CAKIA,MAAA,GAAAwZ,GAAA,iBAORxZ,UAEIA,MADJ,SACIA,CADC,8CAKGA,MAAA,qDAIJA,QACAA,MAAA,GAAAyZ,GAAA,oBAWJzZ,QAGIA,MADJ,SACIA,CADC,8CAKGA,MAAA,qDAKJA,QACAA,MAAA,GAAA0Z,GAAA,oBAWJ1Z,QACAA,MAAA,8CAIIA,MAAA,yBACIA,MAAA,yCAUhBA,cACAA,MAAA,GAAA2Z,GAAA,mBAWA3Z,MAAA,0CAOZA,mCAzMiBA,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,KAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAA6Q,GAqBpB7Q,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAGIpK,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UASE7O,MAAA,GAAAA,MAAA,cAAAmF,EAAAiJ,OAAA,KAAAjJ,EAAAiJ,OAAAtN,QAAAqE,EAAAoR,sBAaAvW,cAAA,cAAAmF,EAAAiJ,OAAA,KAAAjJ,EAAAiJ,OAAAtN,QAAAqE,EAAAoR,sBAKWvW,cAAA,QAAAA,MAAA,iCAIRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAKQhW,MAAA,GAAAA,MAAA,QAAAA,MAAA,wBAIRA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAG2BhW,MAAA,GAAAA,MAAA,UAAAA,MAAA,MAAAmF,EAAAiS,WAM/BpX,MAAA,GAAAA,MAAA,QAAAA,MAAA,qCAKIA,MAAA,GAAAA,MAAA,gBAAAA,MAAA,MAAAmF,EAAAqS,0BAIJxX,MAAA,GAAAA,MAAA,QAAAA,MAAA,sCASFA,MAAA,GAAAA,MAAA,QAAAA,MAAA,4BAEcA,MAAA,GAAAA,MAAA,QAAAA,MAAA,kCAIRA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAG6BhW,MAAA,GAAAA,MAAA,UAAAmF,EAAAiF,WAAAhL,MAAAsX,wBAOrB1W,cAAA,QAAAA,MAAA,oCAIRA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAGqBhW,MAAA,GAAAA,MAAA,UAAAmF,EAAAiF,WAAAhL,MAAAuX,wBASrB3W,MAAA,GAAAA,MAAA,QAAAA,MAAA,oCAKIA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAIHhW,MAAA,GAAAA,MAAA,OAAAmF,EAAAiF,WAAAhL,MAAA0B,OAAAqE,EAAAiF,WAAAhL,MAAA2X,kBAcD/W,MAAA,GAAAA,MAAA,QAAAA,MAAA,yCAMIA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAIHhW,MAAA,GAAAA,MAAA,OAAAmF,EAAAiF,WAAAhL,MAAA0B,OAAAqE,EAAAiF,WAAAhL,MAAAyX,uBAYL7W,cAAA,QAAAA,MAAA,sCASQA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAQfhW,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAWDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,qVEzM5B,MAAMwP,MAA2B7I,OAA6D,CACjGC,SAAU,eACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAWkK,aAAe/F,EAAgBtN,SAASmJ,MAAW8M,eAC3FzI,YAAa1E,GAAQA,EAAK5L,KAC1BuQ,WAAYA,CAACjQ,EAAakQ,IACflQ,EAAYiW,SAASyC,eAAexI,GAAKzO,QAC5CiM,KAAS,EAAGgL,oBACR1Y,EAAY2W,KAAKC,cAAclL,QAAQjK,QACnC/D,KAAI,EAAGmZ,SAAE,CACLA,KACA6B,uBAEP,EAELhL,KAAS,EAAGmJ,KAAI6B,oBAEZ1Y,EAAYwL,OAAOsL,mBAAmBD,EAAIpK,UAAUhL,QAAK/D,KAAI,IAAMgb,2GCfvE9Z,MAAA,UACIA,MAAA,iBACAA,MAAA,wBACJA,eAH+EA,MAAA,aAAAA,MAAA,EAAAyR,KAE3EzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,kEA6BJA,MAAA,uBAAAA,MAAA,IAAA+Z,EAAAzZ,GAAA,gCASAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAga,EAAAxZ,UAAA,yCASAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAia,EAAApI,UAAA,yCAMK7R,MADL,SACKA,CAAA,UAAMA,MAAA,sDAAmDA,QAC1DA,MAAA,iBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAA8R,GAAAoI,EAAA5Z,KACbN,MAAA,GAAAA,YAAA,IAAAA,MAAA,IAAAka,EAAApZ,kCAOXd,MAAA,uBAAAA,MAAA,IAAAma,EAAA3D,MAAA,+BAGRxW,MAAA,uEAAkGA,MAA5B,cAAAoa,EAA4Bpa,CAAD,QAAAqa,EAAA/H,QChE9F,MAAMgI,GAAmBnU;;;;;;;;;MAS1BkQ;EASA,MAAOkE,WACD9H,MAgCR9S,cACI+L,QA9BJ7L,KAAA6S,gBAAkB,eACT7S,KAAA6K,aAAe7K,KAAK8L,qBAAqB,WACzC9L,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAC,iBACAC,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBH,UAAU,CACPnS,KAAM,QACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,0BACT+E,YAAa,UAEhBC,sBAAsBtT,KAAK6K,cAC3B0I,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBC,YAAY,YAAa,QACzBC,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,SAChB2S,QAAQ,CAAE3S,KAAM,UAChB4S,oBAAoB3T,KAAK6K,cACzB0I,eAAevT,KAAK6O,OAIrBhD,MAAM+H,UAAU,CACZC,SAAU8G,MACV5G,SAAUlN,GAAQA,EAAKmH,SACvBiG,aAAcA,CAACC,EAAMvQ,MACjBgD,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,CACJ5C,KAAM,CACF0T,SAAU3U,KAAKoU,kBAAkB7U,UAElCS,KAAK8S,QAAQ+B,qBAEpBC,KAAM9U,KAAKyS,MAAMsC,qBAGzBV,qBAAsB,CAACrU,KAAK8S,QAAQvO,aAAcvE,KAAKyS,MAAMlO,eAErE,CAEAqW,iBAAiB1P,GACb,OAAOA,IAAgBwL,IAC3B,CAACzW,SAAAD,KAAA,mBAAAE,iBAzDQwa,GAAoB,EAAAza,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAApBuV,GAAoBpa,UAAA,uBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,swBAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,IDvB7BlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA0a,GAAA,WAIA1a,MAAA,oCAGZA,YACAA,MAAA,8FAUIA,MAFA,sBAAAqF,GAAA,OAAcF,EAAA2P,cAAAzP,EAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAA,OACdF,EAAA4P,gBAAA1P,EAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAA,OACtBF,EAAA6P,kBAAA3P,EAAyB,GAOjDrF,MALA,4BAKAA,CADE,6CAKFA,MAAA,6CACIA,MAAA,GAAA2a,GAAA,mBAGJ3a,QACAA,MAAA,6CAKIA,MAAA,GAAA4a,GAAA,mBAGJ5a,QACAA,MAAA,6CAKIA,MAAA,GAAA6a,GAAA,mBAGJ7a,QACAA,MAAA,6CACIA,MAAA,GAAA8a,GAAA,mBAMJ9a,QACAA,MAAA,6CACIA,MAAA,GAAA+a,GAAA,mBAGJ/a,QACAA,MAAA,GAAAgb,GAAA,sCACJhb,eAlEwCA,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KAUpCV,MAAA,GAKAA,MALA,KAAAmF,EAAAuN,gBAKA1S,CALsB,QAAAA,MAAA,KAAAmF,EAAAqQ,QAKtBxV,CAJwB,eAAAA,MAAA,KAAAmF,EAAAsQ,eAIxBzV,CAHsC,aAAAA,MAAA,MAAAmF,EAAAV,aAGtCzE,CAFkC,cAAAA,MAAA,MAAAmF,EAAAuQ,cAElC1V,CADoC,UAAAmF,EAAAwN,SAQhC3S,MAAA,GACAA,MADA,gBAAAmF,EACAnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA8O,kBACAjU,CADuC,wBAAAA,MAAA,iCAG3BA,MAAA,GAA4CA,MAA5C,UAAAA,MAAA,mBAA4CA,CAAT,sBAM/CA,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAOZxJ,MAAA,GAAmEA,MAAnE,UAAAA,MAAA,qBAAmEA,CAA9B,cAA8BA,CAAD,OAAAmF,EAAAmN,MAAA9I,IAAA,SAQlExJ,MAAA,GAAoEA,MAApE,UAAAA,MAAA,gCAAoEA,CAApB,OAAAmF,EAAAmN,MAAA9I,IAAA,UAKXxJ,MAAA,GAAAA,MAAA,UAAAmF,EAAAuF,gME1D7C1K,MAAA,eAGIA,MAAA,mBAAAA,MAAA+F,GAAA,MAAA4B,EAAA3H,QAAA,OAAAA,MAAS2H,EAAAwC,SAAQ,GAGjBnK,MAAA,wBACJA,gCAHIA,MAAA,WAAA2H,EAAAyC,WAAAC,SAAA1C,EAAAyC,WAAAE,UAEAtK,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAGIA,MAAA,mBAAAA,MAAA+H,GAAA,MAAAJ,EAAA3H,MAAA,UAAAA,MAAS2H,EAAA4C,OAAM,GAGfvK,MAAA,wBACJA,iCAHIA,MAAA,WAAA2H,EAAAyC,WAAAC,SAAA1C,EAAAyC,WAAAE,UAEAtK,cAAA,IAAAA,MAAA,oDANJA,MAAA,EAAAib,GAAA,sCAEKjb,MAAA,mBAAA2H,EAAAqO,6CA4BThW,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAAyK,8BAwB1BzK,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2H,EAAA+C,aACA1K,CAD6B,wBAAA2H,EAAAyC,WAAAZ,IAAA,kBC9D1C,MAAM0R,GAAqB/U;;;;;;MAM5BgV;EASA,MAAOC,WACDjQ,MAYRxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBAbZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,UACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChC9K,KAAM,CAAC,GAAIgL,KAAWC,UACtBnL,KAAM,CAAC,GAAIkL,KAAWC,UACtB7K,QAAS,EAAC,GACVwJ,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,iBAE7D7K,KAAAmW,iBAAmB,CAACjJ,MAAWsO,eAAgBtO,MAAWuO,cASnE,CAEA5Y,WACI7C,KAAKyM,MACT,CAEA1H,cACI/E,KAAKyN,SACT,CAEAnD,SACI,IAAKtK,KAAKuK,WAAWwN,MACjB,OAGJ,MAAM7I,EAAYlP,KAAKuK,WAAWhL,MAC5BuO,KAAQ4N,OAA0B,CACpCC,aAAc,CACVlb,GAAI,GACJE,UAAW,GACXqR,UAAW,GACX/Q,KAAM,GACNF,KAAM,GACNM,SAAS,EACTua,aAAc,IAElBC,cAAe3M,EACfG,aAAcrP,KAAKqP,aACnByM,kBAAmB9b,KAAK6K,aACxBkR,mBAAoB,CAChBhb,KAAMmO,EAAUnO,MAAQ,GACxBsO,aAAcrP,KAAKqP,gBAG3BrP,KAAKuB,YAAYiW,SAASwE,cAAclO,GAAOzO,UAC3CwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,YAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,EAAKmV,cAAcvb,IAAK,CAAEmO,WAAY5O,KAAK6O,OAAO,EAEnFC,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,WACX,EAGb,CAEA7D,QACIpG,OAActE,KAAKgP,QAAShP,KAAKic,eAC5BjZ,QACGW,KAAK,IAAC,EACNsL,KAAS,EAAEiN,EAAS7M,MAChB,MAAMH,EAAYlP,KAAKuK,WAAWhL,MAC5BuO,KAA4B4N,OAA0B,CACxDC,aAAcO,EACdL,cAAe3M,EACf4M,kBAAmB9b,KAAK6K,aACxBwE,eACA0M,mBAAoB,CAChBhb,KAAMmO,EAAUnO,MAAQ,GACxBsO,kBAGR,OAAOrP,KAAKuB,YAAYiW,SAAS2E,cAAcrO,EAAK,IAG3DzO,UACGwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,YAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAAY,EAEpCK,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,WACX,EAGjB,CAEUa,cAAc8M,EAA0B7M,GAC9C,MAAM+M,KAAqBC,OAAgBH,EAAS7M,GAEpDrP,KAAKuK,WAAW+E,WAAW,CACvBrO,KAAMib,EAAQjb,KACdF,KAAMqb,EAAqBA,EAAmBrb,KAAO,GACrDM,QAAS6a,EAAQ7a,UAGjBrB,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBACDxP,KAAK6K,aACL7K,KAAKuK,WAAWZ,IAAI,CAAC,iBACrBuS,EACAE,EAGZ,CAACnc,SAAAD,KAAA,mBAAAE,iBA3HQqb,IAAsBpb,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAtBoW,GAAsBjb,UAAA,yBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,24BAAAC,SAAA,SAAAnC,EAAAC,GAAA,KAAAD,EAAA,iBDjCvBlF,MAHZ,mBAGYA,CAFP,mBAEOA,CAFS,gBAETA,CADS,gFAKLA,MAAA,8BAAAqF,GAAArF,aAAAwH,GAAAxH,MAAsBmF,EAAAgX,YAAA9W,GAAmB,GAEjDrF,UACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAAoc,GAAA,kCAQApc,MAAA,GAAAqc,GAAA,yBAAArc,OAUAA,MAAA,qCAGZA,YAMgBA,MAJhB,YAIgBA,CAJ4B,4BAI5BA,CAHY,6BAGZA,CAFiB,cAEjBA,CADM,6CAEFA,MAAA,yBACIA,MAAA,wCASZA,YACAA,MAAA,GAAAsc,GAAA,oCAGJtc,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAEfA,MAAA,yCAMJA,QACAA,MAAA,8CACIA,MAAA,yCAQZA,YACAA,MAAA,GAAAuc,GAAA,mBAWAvc,MAAA,0CAOZA,sCA1FgBA,MAAA,GAEAA,MAFA,WAAAA,MAAA,KAAAmF,EAAAyL,QAEA5Q,CAF2B,yBAAAA,MAAA,KAAAmF,EAAAqX,qBAE3Bxc,CADsD,sBAAAA,MAAA,KAAAmF,EAAA2W,gBASrD9b,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,MAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAAyc,GAqBpBzc,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAIapK,MAAA,GAAAA,MAAA,QAAAA,MAAA,yBAOJA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAKLhW,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAOa7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,sBAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAGQhW,MAAA,GAAAA,MAAA,QAAAA,MAAA,sBAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAOXhW,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAWDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,+LEtF5B,MAAMsS,MAA4B3L,OAAiE,CACtGC,SAAU,eACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAW4P,iBACpCzL,EAAgBtN,SAASmJ,MAAW6P,eACxCxL,YAAa1E,GAAQA,EAAK9L,KAC1ByQ,WAAYA,CAACjQ,EAAakQ,IACtBlQ,EAAYiW,SAASwF,gBAAgBvL,GAAKzO,QAAK/D,KAAI0S,GAAOA,EAAIqL,2HCC1D7c,MAAA,UAKIA,MAAA,iBACAA,MAAA,wBACJA,eAJIA,MAAA,aAAAA,MAAA,EAAAyR,KAGAzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,kEA6BJA,MAAA,uBAAAA,MAAA,IAAA8c,EAAAxc,GAAA,gCAUAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAA+c,EAAAvc,UAAA,yCAUAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAgd,EAAAnL,UAAA,yCAWK7R,MADL,SACKA,CAAA,UAAMA,MAAA,GAAkBA,QACzBA,MAAA,iBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAA8R,GAAAmL,EAAA3c,KACbN,MAAA,GAAAA,MAAAid,EAAArc,gCAOXZ,MAAA,uBAAAA,MAAA,IAAAkd,EAAApc,KAAA,6BAKAd,MAAA,iBAAsDA,MAAA,wBAEpDA,eAFoDA,oBAAA,+CAGtDA,MAAA,iBAAuDA,MAAA,wBAErDA,eAFqDA,oBAAA,kDAAvDA,MAHA,EAAAmd,GAAA,kBAGAnd,CAHsD,EAAAod,GAAA,uCAA3Cpd,MAAA,OAAAqd,EAAAnc,SAGAlB,cAAA,QAAAqd,EAAAnc,mCAKnBlB,MAAA,uEAGIA,MADA,cAAAsd,EACAtd,CAD2B,QAAAud,EAAAjL,QC9F5B,MAAMkL,GAAmBrX;;;;;;;;;;;;;;;;;;EA0B1B,MAAOsX,WAA6BhL,MAoCtC9S,cACI+L,QApCJ7L,KAAA6S,gBAAkB,eACT7S,KAAA6K,aAAe7K,KAAK8L,qBAAqB,UACzC9L,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAC,iBACAC,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBH,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBH,UAAU,CACPnS,KAAM,UACNoS,KAAM,CAAEC,KAAM,WACd3K,SAAO6F,KAAE,kBACT+E,YAAa,YAEhBC,sBAAsBtT,KAAK6K,cAC3B0I,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBC,YAAY,OAAQ,OACpBC,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,SAChB2S,QAAQ,CAAE3S,KAAM,SAChB4S,oBAAoB3T,KAAK6K,cACzB0I,eAAevT,KAAK6O,OAIrBhD,MAAM+H,UAAU,CACZC,SAAUnN,MACVqN,SAAUlN,GAAQA,EAAKC,UACvBmN,aAAcA,CAACC,EAAMvQ,MACjBgD,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,CACJ9C,KAAM,CACF4T,SAAU3U,KAAKoU,kBAAkB7U,UAElCS,KAAK8S,QAAQ+B,qBAEpBC,KAAM9U,KAAKyS,MAAMsC,qBAGzBV,qBAAsB,CAACrU,KAAK8S,QAAQvO,aAAcvE,KAAKyS,MAAMlO,eAErE,CAACtE,SAAAD,KAAA,mBAAAE,iBAxDQ0d,GAAoB,EAAA3d,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAApByY,GAAoBtd,UAAA,uBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,o9BAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,ID5BrBlF,MAHZ,mBAGYA,CAHI,mBAGJA,CAFQ,gBAERA,CADS,+DAILA,MAAA,8BAAAqF,GAAA,OAAsBF,EAAAgX,YAAA9W,EAAmB,GAEjDrF,UACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA0d,GAAA,WAQA1d,MAAA,oCAGZA,YACAA,MAAA,iGAUIA,MAFA,sBAAAqF,GAAA,OAAcF,EAAA2P,cAAAzP,EAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAA,OACdF,EAAA4P,gBAAA1P,EAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAA,OACtBF,EAAA6P,kBAAA3P,EAAyB,GAOjDrF,MALA,4BAKAA,CADE,6CAKFA,MAAA,6CACIA,MAAA,GAAA2d,GAAA,mBAGJ3d,QACAA,MAAA,6CAMIA,MAAA,GAAA4d,GAAA,mBAGJ5d,QACAA,MAAA,6CAMIA,MAAA,GAAA6d,GAAA,mBAGJ7d,QACAA,MAAA,6CAMIA,MAAA,GAAA8d,GAAA,mBAMJ9d,QACAA,MAAA,8CACIA,MAAA,GAAA+d,GAAA,mBAGJ/d,QACAA,MAAA,8CACIA,MAAA,GAAAge,GAAA,mBAQJhe,QACAA,MAAA,GAAAie,GAAA,sCAKJje,eAlGgBA,MAAA,GACAA,MADA,yBAAAA,MAAA,KAAAmF,EAAAqX,qBACAxc,CADsD,sBAAAA,MAAA,KAAAmF,EAAA+Y,mBASrDle,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KAYbV,MAAA,GAKAA,MALA,KAAAmF,EAAAuN,gBAKA1S,CALsB,QAAAA,MAAA,MAAAmF,EAAAqQ,QAKtBxV,CAJwB,eAAAA,MAAA,MAAAmF,EAAAsQ,eAIxBzV,CAHsC,aAAAA,MAAA,MAAAmF,EAAAV,aAGtCzE,CAFkC,cAAAA,MAAA,MAAAmF,EAAAuQ,cAElC1V,CADoC,UAAAmF,EAAAwN,SAQhC3S,MAAA,GACAA,MADA,gBAAAmF,EACAnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA8O,kBACAjU,CADuC,wBAAAA,MAAA,iCAG3BA,MAAA,GAA4CA,MAA5C,UAAAA,MAAA,mBAA4CA,CAAT,sBAM/CA,MAAA,GAGAA,MAHA,UAAAA,MAAA,2BAGAA,CAH2C,qBAG3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAGAA,MAHA,UAAAA,MAAA,2BAGAA,CAH2C,qBAG3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAGAA,MAHA,UAAAA,MAAA,qBAGAA,CAHqC,cAGrCA,CADkB,OAAAmF,EAAAmN,MAAA9I,IAAA,SAUNxJ,MAAA,GAAgDA,MAAhD,UAAAA,MAAA,qBAAgDA,CAAX,OAAAmF,EAAAmN,MAAA9I,IAAA,SAKrCxJ,MAAA,GAAAA,MAAA,UAAAA,MAAA,yBAWYA,MAAA,GAAAA,MAAA,UAAAmF,EAAAuF,qRE9FpB1K,MAAA,eAEIA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAmO,EAAA3V,QAAA,OAAAA,MAAS2V,EAAApL,OAAM,GAIfvK,MAAA,wBACJA,gCAHIA,MAAA,WAAA2V,EAAAvL,WAAAC,SAAAsL,EAAAvL,WAAAE,UAEAtK,cAAA,IAAAA,MAAA,qDAkDRA,MAAA,sCAKIA,MAAA,0DAMJA,8BARIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GAEAA,MAFA,eAAA2V,EAAAjL,aAEA1K,CAF6B,wBAAA2V,EAAAvL,WAAAZ,IAAA,gBAE7BxJ,CADwD,YAAAA,MAAA,IAAA2V,EAAAK,oBCpDjE,MAAMmI,GAA6BhY;;;;;;;;;;;;;;EAsBpC,MAAOiY,WACDjT,MAaRxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBAdZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,kBACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChCyS,mBAAoB,CAAC,IACrBC,gBAAgB,EAChBC,oBAAqB,CAAC,EAAGzS,KAAWC,UACpCrB,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,iBAEtE7K,KAAA2e,cAAgBnT,OAAO7L,OAAOif,OACrB5e,KAAAmW,iBAAmB,CAACjJ,MAAWsO,eAAgBtO,MAAW2R,qBASnE,CAEAhc,WACI7C,KAAKyM,OACLzM,KAAKuB,YAAYwL,OAAOC,aAAaC,QAAQ5N,UAAU,EAAG2N,iBACtD,IAAKA,EAAWhF,YAAYjE,SAASmJ,MAAWsO,gBAAiB,CAC7D,MAAMsD,EAAkB9e,KAAKuK,WAAWZ,IAAI,sBACxCmV,GACAA,EAAgBxR,SAExB,GAER,CAEAvI,cACI/E,KAAKyN,SACT,CAEA/C,OACS1K,KAAKuK,WAAWwN,OAIrB/X,KAAKuB,YAAYiW,SACZuH,qBAAqB/e,KAAKuK,WAAWhL,OACrCyD,QACGgc,MAAI,EAAGD,2BACH,OAAQA,EAAqBzG,YACzB,IAAK,iBACDtY,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,aAEZ,MACJ,IAAK,8BACDvO,KAAK4L,oBAAoBmD,MAAMgQ,EAAqBxG,SAC5D,IACH,EACDtV,MAAU,IAAMjD,KAAKuN,oBAAoB0R,yBACzC5gB,GAAe2B,KAAKuB,YAAYwL,OAAOmS,UAAUjS,UAEpD5N,UAAU,GAAI8f,mBAAoBD,eAC/B,MAAME,EAAiBD,EAAeX,mBAClCY,EAAevgB,SAAWugB,EAAerb,SAASmb,EAAQG,kBAC1Drf,KAAKuB,YAAYwL,OAAOuS,mBAAmBF,EAAe,IAAI/f,WAAS,EAGvF,CAEU+P,cAAcb,EAAwBc,GAC5CrP,KAAKuK,WAAW+E,WAAW,CACvBkP,mBAAoBjQ,EAAOiQ,mBAC3BC,eAAgBlQ,EAAOkQ,eACvBC,oBAAqBnQ,EAAOmQ,sBAE5B1e,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBAAyBxP,KAAK6K,aAAc7K,KAAKuK,WAAWZ,IAAI,gBAAiB4E,EAE9F,CAACtO,SAAAD,KAAA,mBAAAE,iBAhFQqe,IAAuBpe,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAvBoZ,GAAuBje,UAAA,0BAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,s0BAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,IDpC5BlF,MAFR,mBAEQA,CAFQ,mBAERA,CADY,kBAERA,MAAA,4BACAA,MAAA,EAAAof,GAAA,gBAQApf,MAAA,oCAGZA,YAMgBA,MAJhB,WAIgBA,CAJ4B,mBAI5BA,CAHI,aAGJA,CAFE,UAEFA,CADmB,mEAMfA,MAAA,mCAIJA,QACAA,MAAA,mEAKIA,MAAA,wCAMJA,QACAA,MAAA,mEAKIA,MAAA,yBACIA,MAAA,wCAUhBA,cACAA,MAAA,GAAAqf,GAAA,mBAaArf,MAAA,0CAMRA,iBAxEiBA,MAAA,GAAAA,MAAA,mBAAAmF,EAAA6Q,kBAUEhW,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAKCpK,MAAA,GAEAA,MAFA,QAAAA,MAAA,oCAEAA,CAFkD,UAAAA,MAAA,sDAM9CA,MAAA,GAAAA,MAAA,gBAAAmF,EAAAqZ,eAIJxe,QAEAA,MAFA,QAAAA,MAAA,gDAEAA,CAF8D,UAAAA,MAAA,yDAQ1DA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAIJhW,MAAA,GAEAA,MAFA,QAAAA,MAAA,0CAEAA,CAFwD,UAAAA,MAAA,0CAUhDA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAQfhW,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAaDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,kdE9DnBpK,MAAA,eAIIA,MAAA,mBAAAA,MAAA+F,GAAA,MAAA4B,EAAA3H,QAAA,OAAAA,MAAS2H,EAAAwC,SAAQ,GAEjBnK,MAAA,wBACJA,gCAJIA,MAAA,WAAA2H,EAAAyC,WAAAE,UAAA3C,EAAAyC,WAAAC,UAAA1C,EAAA2X,iBAGAtf,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAGIA,MAAA,mBAAAA,MAAA+H,GAAA,MAAAJ,EAAA3H,MAAA,UAAAA,MAAS2H,EAAA4C,OAAM,GAGfvK,MAAA,wBACJA,iCAHIA,MAAA,WAAA2H,EAAAyC,WAAAE,UAAA3C,EAAAyC,WAAAC,UAAA1C,EAAA2X,iBAEAtf,cAAA,IAAAA,MAAA,oDANJA,MAAA,EAAAuf,GAAA,sCACKvf,MAAA,mBAAA2H,EAAAqO,6CA6BThW,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAAyK,8BAoC1BzK,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2H,EAAA+C,aACA1K,CAD6B,wBAAA2H,EAAAyC,WAAAZ,IAAA,2DAYjCxJ,MAAA,wDAKIA,MAAA,oBAAAA,MAAA4K,GAAA,MAAAjD,EAAA3H,QAAA,OAAAA,MAAU2H,EAAA6X,gBAAe,GAE5Bxf,gCAHGA,MAFA,YAAA2H,EAAA8X,gBAEAzf,CAF6B,sBAAA2H,EAAA+X,0BAE7B1f,CADiD,YAAAA,MAAA,IAAA2H,EAAAqO,6DAYzChW,MAAA,eAIIA,MAAA,yBAAA2f,EAAA3f,MAAA4f,GAAAlY,UAAAC,EAAA3H,MAAA,UAAAA,MAAS2H,EAAAkY,cAAAF,GAAsB,GAE/B3f,MAAA,GACJA,oCADIA,cAAA,IAAA2f,EAAA1X,YAAA,gCAXRjI,MAFR,QAEQA,CAFoD,iBAEpDA,CADU,eAENA,MAAA,iBACAA,MAAA,wBACJA,QACAA,MAAA,0BACIA,MAAA,EAAA8f,GAAA,iBAUZ9f,kCAbYA,MAAA,GAAAA,MAAA,IAAAA,MAAA,0BAIwBA,MAAA,GAAAA,MAAA,UAAA2H,EAAAoY,oDAYpC/f,MAAA,wDAKIA,MAAA,oBAAAA,MAAAggB,GAAA,MAAArY,EAAA3H,QAAA,OAAAA,MAAU2H,EAAAsY,gBAAe,GAE5BjgB,gCAHGA,MAFA,YAAA2H,EAAA2X,gBAEAtf,CAF6B,sBAAA2H,EAAAuY,0BAE7BlgB,CADiD,YAAAA,MAAA,IAAA2H,EAAAqO,6DAYzChW,MAAA,eAIIA,MAAA,yBAAAmgB,EAAAngB,MAAAogB,GAAA1Y,UAAAC,EAAA3H,MAAA,UAAAA,MAAS2H,EAAA0Y,cAAAF,GAAsB,GAE/BngB,MAAA,GACJA,oCADIA,cAAA,IAAAmgB,EAAAlY,YAAA,gCAXRjI,MAFR,QAEQA,CAFoD,iBAEpDA,CADU,eAENA,MAAA,iBACAA,MAAA,wBACJA,QACAA,MAAA,0BACIA,MAAA,EAAAsgB,GAAA,iBAUZtgB,kCAbYA,MAAA,GAAAA,MAAA,IAAAA,MAAA,0BAIwBA,MAAA,GAAAA,MAAA,UAAA2H,EAAA4Y,WC3H7C,MAAMC,GAA4Bra;;;;;;MAMnCsa;EASA,MAAOC,WACDvV,MAqBRxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBAtBZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,iBACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChC9K,KAAM,CAAC,GAAIgL,KAAWC,UACtBnL,KAAM,CAAC,GAAIkL,KAAWC,UACtB9D,YAAa,GACb/G,QAAS,EAAC,EAAM4K,KAAWC,UAC3B4U,QAAS,GACTC,QAAS,GACTlW,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,iBAEtE7K,KAAAkgB,SAA8C,GAC9ClgB,KAAA0gB,SAA8C,GAKrC1gB,KAAAmW,iBAAmB,CAACjJ,MAAWsO,eAAgBtO,MAAW8T,oBASnE,CAEAne,WACI7C,KAAKyM,OACLzM,KAAKuB,YAAYiW,SAASyJ,6BAA6BhU,QAAQ5N,UAAUwH,IACrE7G,KAAKkgB,SAAWrZ,EAAKqa,iCACrBlhB,KAAK0gB,SAAW7Z,EAAKsa,sBACrBnhB,KAAK0L,eAAe+C,eACpBzO,KAAK6f,0BAA4BhZ,EAAKqa,iCAAiCha,KACnED,GAAKA,EAAEhG,OAASjB,KAAKuO,QAAQuS,SAAS7f,MAE1CjB,KAAKqgB,0BAA4BxZ,EAAKsa,sBAAsBja,KACxDD,GAAKA,EAAEhG,OAASjB,KAAKuO,QAAQwS,SAAS9f,KAAI,EAGtD,CAEA8D,cACI/E,KAAKyN,SACT,CAEA2T,WAAWC,EAAiCC,GACxC,IAAKD,EAAa,CACd,MAAMxI,EAAc7Y,KAAKuK,WAAWZ,IAAI,QACpCkP,GAAeA,EAAYpO,UAC3BoO,EAAYf,YAASyJ,MAAgBD,EAAW,KAExD,CACJ,CAEAtB,cAAcc,GACV9gB,KAAK6f,0BAA4BiB,EACjC9gB,KAAK4f,mBAAkB4B,OAAiCV,GACxD,MAAMW,EAAczhB,KAAKuK,WAAWZ,IAAI,WACpC8X,IACAA,EAAYC,kBACZD,EAAYE,uBAAuB,CAAEC,UAAU,IAC/CH,EAAYnS,WAAWtP,KAAK4f,kBAEhC5f,KAAKuK,WAAWsX,aACpB,CAEArB,cAAcO,GACV/gB,KAAKqgB,0BAA4BU,EACjC/gB,KAAKyf,mBAAkB+B,OAAiCT,GACxD,MAAMU,EAAczhB,KAAKuK,WAAWZ,IAAI,WACpC8X,IACAA,EAAYC,kBACZD,EAAYE,uBAAuB,CAAEC,UAAU,IAC/CH,EAAYnS,WAAWtP,KAAKyf,kBAEhCzf,KAAKuK,WAAWsX,aACpB,CAEAlC,gBACI3f,KAAK4f,gBAAkB,KACvB5f,KAAKuK,WAAWsX,aACpB,CAEAzB,gBACIpgB,KAAKyf,gBAAkB,KACvBzf,KAAKuK,WAAWsX,aACpB,CAEAvX,SACI,MAAMsV,EAAkB5f,KAAK4f,gBACvBH,EAAkBzf,KAAKyf,gBAC7B,IAAKA,EACD,OAEJ,MAAM3R,EAAQ9N,KAAK8hB,wBACf,CACIrhB,GAAI,GACJE,UAAW,GACXqR,UAAW,GACXjR,KAAM,GACNE,KAAM,GACNmH,YAAa,GACb/G,SAAS,EACTyf,aAASpe,EACTqe,aAASre,EACTkZ,aAAc,IAElB5b,KAAKuK,WACLvK,KAAKqP,aACLoQ,EACAG,GAEJ5f,KAAKuB,YAAYiW,SAASuK,oBAAoBjU,GAAOzO,UACjDwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,kBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,EAAKkb,oBAAoBthB,IAAK,CAAEmO,WAAY5O,KAAK6O,OAAO,EAEzFC,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,iBACX,EAGb,CAEA7D,OACI,MAAMkV,EAAkB5f,KAAK4f,gBACvBH,EAAkBzf,KAAKyf,gBACxBA,MAGLnb,KAActE,KAAKgP,QAAShP,KAAKic,eAC5BjZ,QACGW,KAAK,IAAC,EACNsL,KAAS,EAAE+S,EAAe3S,MACtB,MAAMvB,EAAQ9N,KAAK8hB,wBACfE,EACAhiB,KAAKuK,WACL8E,EACAoQ,EACAG,GAEJ,OAAO5f,KAAKuB,YAAYiW,SAASyK,oBAAoBnU,EAAK,IAGjEzO,UACGwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,kBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAAY,EAEpCK,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,iBACX,EAGjB,CAMQuT,wBACJE,EACAE,EACA7S,EACAoQ,EACAG,GAaA,MAAO,KACH,EAZUlE,OAA0B,CACpCC,aAAcqG,EACdnG,cAAeqG,EAAU3iB,MACzBuc,kBAAmB9b,KAAK6K,aACxBwE,eACA0M,mBAAoB,CAChB1M,eACAtO,KAAMihB,EAAcjhB,MAAQ,GAC5BqH,YAAa4Z,EAAc5Z,aAAe,MAK9C0Y,QAASlB,KACHuC,OAA6BvC,EAAiBsC,EAAU3iB,MAAMuhB,SAC9D,KACNC,WAASoB,OAA6B1C,EAAiByC,EAAU3iB,MAAMwhB,SAE/E,CAEU3R,cACN4S,EACA3S,GAEA,MAAM+M,KAAqBC,OAAgB2F,EAAe3S,GAC1DrP,KAAKuK,WAAW+E,WAAW,CACvBvO,KAAMqb,GAAoBrb,KAC1BE,KAAM+gB,EAAc/gB,KACpBmH,YAAagU,GAAoBhU,YACjC/G,QAAS2gB,EAAc3gB,QACvByf,QAASkB,EAAclB,SAAY,GACnCC,QAASiB,EAAcjB,SAAY,KAElC/gB,KAAK4f,kBACN5f,KAAK4f,gBAAkBoC,EAAclB,SAAW,CAC5C7f,KAAM+gB,EAAclB,QAAQ7f,KAC5BmhB,KAAMJ,EAAclB,QAAQsB,KAAKnjB,IAAIkD,QAAWA,EAAG5C,SAAO8iB,OAAkBlgB,EAAE5C,YAGjFS,KAAKyf,kBACNzf,KAAKyf,gBAAkBuC,EAAcjB,SAAW,CAC5C9f,KAAM+gB,EAAcjB,QAAQ9f,KAC5BmhB,KAAMJ,EAAcjB,QAAQqB,KAAKnjB,IAAIkD,QAAWA,EAAG5C,SAAO8iB,OAAkBlgB,EAAE5C,YAGlFS,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBACDxP,KAAK6K,aACL7K,KAAKuK,WAAWZ,IAAI,gBACpBqY,EACA5F,EAGZ,CAACnc,SAAAD,KAAA,mBAAAE,iBA1OQ2gB,IAA4B1gB,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAA5B0b,GAA4BvgB,UAAA,gCAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,klDAAAC,SAAA,SAAAnC,EAAAC,GAAA,KAAAD,EAAA,iBDzC7BlF,MAHZ,mBAGYA,CAFP,mBAEOA,CAFS,gBAETA,CADS,gFAKLA,MAAA,8BAAAqF,GAAArF,aAAAwH,GAAAxH,MAAsBmF,EAAAgX,YAAA9W,GAAmB,GAEjDrF,UAEAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAAmiB,GAAA,kCAQAniB,MAAA,GAAAoiB,GAAA,yBAAApiB,OAUAA,MAAA,qCAGZA,YAMgBA,MAJhB,YAIgBA,CAJ4B,4BAI5BA,CAHY,6BAGZA,CAFiB,cAEjBA,CADM,6CAEFA,MAAA,yBACIA,MAAA,wCASZA,YACAA,MAAA,GAAAqiB,GAAA,oCAGJriB,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAEfA,MAAA,yCAKIA,MAAA,iBAAAqF,GAAArF,aAAAwH,GAAAxH,MAASmF,EAAA8b,WAAA,MAAA9b,EAAAiJ,OAAA,KAAAjJ,EAAAiJ,OAAAtN,KAAAuE,EAAAid,OAAAljB,OAA6C,GAE9DY,UACAA,MAAA,wEAKIA,MAAA,yCAMJA,QACAA,MAAA,8EAORA,UAEAA,MAAA,GAAAuiB,GAAA,mBAYAviB,MAAA,0CAMAA,MAAA,wCASIA,MARA,GAAAwiB,GAAA,gCAQAxiB,CADC,GAAAyiB,GAAA,aAmBLziB,QACAA,MAAA,wCASIA,MARA,GAAA0iB,GAAA,gCAQA1iB,CADC,GAAA2iB,GAAA,aAsBjB3iB,wCAjKgBA,MAAA,GAEAA,MAFA,WAAAA,MAAA,KAAAmF,EAAAyL,QAEA5Q,CAF2B,yBAAAA,MAAA,KAAAmF,EAAAqX,qBAE3Bxc,CADsD,sBAAAA,MAAA,KAAAmF,EAAA2W,gBAUrD9b,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,MAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAA4iB,GAqBpB5iB,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAIapK,MAAA,GAAAA,MAAA,QAAAA,MAAA,yBAMJA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAMLhW,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAOa7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,sBAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAKJhW,MAAA,GAEAA,MAFA,QAAAA,MAAA,qBAEAA,CAFmC,iBAAAA,MAAA,MAAAmF,EAAA6Q,mBAQ/BhW,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAMJhW,MAAA,GACAA,MADA,YAAAA,MAAA,MAAAmF,EAAA6Q,kBACAhW,CADgD,QAAAA,MAAA,6BAQvDA,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAYDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,YAIbpK,cAAA,QAAAA,MAAA,+CAEDA,MAAA,GAAAA,MAAA,OAAAmF,EAAAsa,iBAAAta,EAAAua,2BAOC1f,cAAA,QAAAmF,EAAAsa,kBAAAta,EAAAua,2BAmBA1f,cAAA,QAAAA,MAAA,mCAEDA,MAAA,GAAAA,MAAA,OAAAmF,EAAAma,iBAAAna,EAAA+a,2BAOClgB,cAAA,QAAAmF,EAAAma,kBAAAna,EAAA+a,uPEnIf,MAAM2C,MAAiC9R,OAE5C,CACEC,SAAU,sBACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAW+V,sBACpC5R,EAAgBtN,SAASmJ,MAAW4P,gBACxCvL,YAAa1E,GAAQA,EAAK9L,KAC1BmiB,gBAAiBA,CAACC,EAAUtW,MAAWsW,EAAS5K,QAChD/G,WAAYA,CAACjQ,EAAakQ,EAAK2R,IAC3B7hB,EAAYiW,SAAS6L,qBAAqB5R,EAAK2R,GAAUpgB,QAAK/D,KAAI0S,GAAOA,EAAI0R,yBAoBxEC,IAjB6Bhd;;;;;;;EASEA;;;;;;;GAQ/Bgd,EAA0CC,OAErD,CACEpS,SAAU,sBACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAW8T,sBACpC3P,EAAgBtN,SAASmJ,MAAWsO,gBACxCjK,YAAa1E,GAAQA,EAAK9L,KAC1ByiB,oBAAqBA,CAACjiB,EAAakiB,EAAkBC,IACjDA,EAAWzkB,IAAIgM,GACX1J,EACKoiB,OAAOC,MAAuC,CAC3C9V,MAAO,CACH7C,YACAwY,sBAGPzgB,QAAK/D,KAAI0S,GAAOA,EAAIkS,oCAIxBC,MAA4CC,OAEvD,CACE5S,SAAU,sBACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAW+V,sBACpC5R,EAAgBtN,SAASmJ,MAAW4P,gBACxCvL,YAAa1E,GAAQA,EAAK9L,KAC1BijB,sBAAuBA,CAACziB,EAAakiB,EAAkBxY,IACnD1J,EACKoiB,OAAOM,MAAyC,CAC7CnW,MAAO,CACH7C,YACAwY,sBAGPzgB,QAAK/D,KAAI0S,GAAOA,EAAIuS,iJCrErB/jB,MAAA,UAKIA,MAAA,iBACAA,MAAA,wBACJA,eAJIA,MAAA,aAAAA,MAAA,EAAAyR,KAGAzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,yEAiCJA,MAAA,uBAAAA,MAAA,IAAAgkB,EAAA1jB,GAAA,gCAUAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAikB,EAAAzjB,UAAA,yCAUAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAkkB,EAAArS,UAAA,yCAWK7R,MADL,SACKA,CAAA,UAAMA,MAAA,GAAwBA,QAC/BA,MAAA,iBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAA8R,GAAAqS,EAAA7jB,KACbN,MAAA,GAAAA,MAAAmkB,EAAAvjB,gCAOXZ,MAAA,uBAAAA,MAAA,IAAAokB,EAAAtjB,KAAA,6BAKAd,MAAA,iBAA4DA,MAAA,wBAE1DA,eAF0DA,oBAAA,+CAG5DA,MAAA,iBAA6DA,MAAA,wBAE3DA,eAF2DA,oBAAA,kDAA7DA,MAHA,EAAAqkB,GAAA,kBAGArkB,CAH4D,EAAAskB,GAAA,uCAAjDtkB,MAAA,OAAAukB,EAAArjB,SAGAlB,cAAA,QAAAukB,EAAArjB,mCAKnBlB,MAAA,uEAGIA,MADA,cAAAsd,EACAtd,CAD2B,QAAAud,EAAAjL,QClG5B,MAAMkS,GAA0Bre;;;;;;;;;;;;;;;;;;EA0BjC,MAAOse,WAAmChS,MA+C5C9S,cACI+L,QA5CJ7L,KAAA6S,gBAAkB,sBACT7S,KAAA6K,aAAe7K,KAAK8L,qBAAqB,iBACzC9L,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAC,iBACAC,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBH,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBH,UAAU,CACPnS,KAAM,UACNoS,KAAM,CAAEC,KAAM,WACd3K,SAAO6F,KAAE,kBACT+E,YAAa,YAEhBH,UAAU,CACPnS,KAAM,cACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,sBACT+E,YAAa,gBAEhBC,sBAAsBtT,KAAK6K,cAC3B0I,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBC,YAAY,YAAa,QACzBC,QAAQ,CAAE3S,KAAM,OAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,SAChB2S,QAAQ,CAAE3S,KAAM,SAChB2S,QAAQ,CAAE3S,KAAM,gBAChB4S,oBAAoB3T,KAAK6K,cACzB0I,eAAevT,KAAK6O,OAIrBhD,MAAM+H,UAAU,CACZC,SAAUgR,MACV9Q,SAAUlN,GAAQA,EAAKie,eACvB7Q,aAAcA,CAACC,EAAMvQ,MACjBgD,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,CACJ9C,KAAM,CACF4T,SAAU3U,KAAKoU,kBAAkB7U,UAElCS,KAAK8S,QAAQ+B,qBAEpBC,KAAM9U,KAAKyS,MAAMsC,qBAGzBV,qBAAsB,CAACrU,KAAK8S,QAAQvO,aAAcvE,KAAKyS,MAAMlO,eAErE,CAACtE,SAAAD,KAAA,mBAAAE,iBAnEQ0kB,GAA0B,EAAA3kB,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAA1Byf,GAA0BtkB,UAAA,8BAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,g+BAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,ID5B3BlF,MAHZ,mBAGYA,CAHI,mBAGJA,CAFQ,gBAERA,CADS,+DAILA,MAAA,8BAAAqF,GAAA,OAAsBF,EAAAgX,YAAA9W,EAAmB,GAEjDrF,UACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA4kB,GAAA,WAQA5kB,MAAA,oCAGZA,YACAA,MAAA,iGASIA,MAFA,sBAAAqF,GAAA,OAAcF,EAAA2P,cAAAzP,EAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAA,OACdF,EAAA4P,gBAAA1P,EAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAA,OACtBF,EAAA6P,kBAAA3P,EAAyB,GAOjDrF,MALA,4BAKAA,CADwB,6CAKxBA,MAAA,6CAMIA,MAAA,GAAA6kB,GAAA,mBAGJ7kB,QACAA,MAAA,6CAMIA,MAAA,GAAA8kB,GAAA,mBAGJ9kB,QACAA,MAAA,6CAMIA,MAAA,GAAA+kB,GAAA,mBAGJ/kB,QACAA,MAAA,6CAMIA,MAAA,GAAAglB,GAAA,mBAMJhlB,QACAA,MAAA,8CACIA,MAAA,GAAAilB,GAAA,mBAGJjlB,QACAA,MAAA,8CACIA,MAAA,GAAAklB,GAAA,mBAQJllB,QACAA,MAAA,GAAAmlB,GAAA,sCAKJnlB,eAtGgBA,MAAA,GACAA,MADA,yBAAAA,MAAA,KAAAmF,EAAAqX,qBACAxc,CADsD,sBAAAA,MAAA,KAAAmF,EAAA+Y,mBASrDle,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KAWbV,MAAA,GAKAA,MALA,KAAAmF,EAAAuN,gBAKA1S,CALsB,QAAAA,MAAA,MAAAmF,EAAAqQ,QAKtBxV,CAJwB,eAAAA,MAAA,MAAAmF,EAAAsQ,eAIxBzV,CAHsC,aAAAA,MAAA,MAAAmF,EAAAV,aAGtCzE,CAFkC,cAAAA,MAAA,MAAAmF,EAAAuQ,cAElC1V,CADoC,UAAAmF,EAAAwN,SAQhC3S,MAAA,GACAA,MADA,gBAAAmF,EACAnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA8O,kBACAjU,CADuC,wBAAAA,MAAA,iCAIvCA,MAAA,GAGAA,MAHA,UAAAA,MAAA,mBAGAA,CAHmC,qBAGnCA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,OAQxBxJ,MAAA,GAGAA,MAHA,UAAAA,MAAA,2BAGAA,CAH2C,qBAG3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAGAA,MAHA,UAAAA,MAAA,2BAGAA,CAH2C,qBAG3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAGAA,MAHA,UAAAA,MAAA,qBAGAA,CAHqC,cAGrCA,CADkB,OAAAmF,EAAAmN,MAAA9I,IAAA,SAUNxJ,MAAA,GAAgDA,MAAhD,UAAAA,MAAA,qBAAgDA,CAAX,OAAAmF,EAAAmN,MAAA9I,IAAA,SAKrCxJ,MAAA,GAAAA,MAAA,UAAAA,MAAA,yBAWYA,MAAA,GAAAA,MAAA,UAAAmF,EAAAuF,2KEnFpB1K,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAAolB,2BAelBplB,MAAA,4CAKIA,MAAA,cACJA,cAJIA,MAAA,QAAAA,MAAA,oDAcZA,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2V,EAAAjL,aACA1K,CAD6B,wBAAA2V,EAAAvL,WAAAZ,IAAA,kBC1C1C,MAAM6b,GAAqBlf;;;;;;;;;;;;;;;;;;;EA2B5B,MAAOmf,WACDna,MAYRxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBAbZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,iBACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChCC,aAAc,CAAC,GAAIC,KAAWC,UAC9BC,UAAW,CAAC,GAAIF,KAAWC,UAC3BE,SAAU,CAAC,GAAIH,KAAWC,UAC1BG,SAAU,CAAC,IACXxB,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,gBAUtE,CAEAhI,WACI7C,KAAKyM,MACT,CAEA1H,cACI/E,KAAKyN,SACT,CAEA/C,OACI1K,KAAKgP,QACAhM,QACGW,KAAK,IAAC,EACNsL,KAAS,EAAGxO,SACR,MAAMyO,EAAYlP,KAAKuK,WAAWhL,MAC5BoN,EAAgD,CAClDX,aAAckD,EAAUlD,aACxBG,UAAW+C,EAAU/C,UACrBC,SAAU8C,EAAU9C,SACpBC,SAAU6C,EAAU7C,SACpBxB,aAAcqE,EAAUrE,cAE5B,OAAO7K,KAAKuB,YAAYoL,cAAc+Y,0BAA0B/Y,EAAa,IAGpFtN,UACGwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,kBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAAY,EAEpCK,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,iBACX,EAGjB,CAEUa,cAAczC,EAA8B0C,GAClDrP,KAAKuK,WAAW+E,WAAW,CACvBtD,aAAcW,EAAcX,aAC5BG,UAAWQ,EAAcR,UACzBC,SAAUO,EAAcP,WAExBpM,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBACDxP,KAAK6K,aACL7K,KAAKuK,WAAWZ,IAAI,gBACpBgD,EAGZ,CAAC1M,SAAAD,KAAA,mBAAAE,iBA3EQulB,IAAgBtlB,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAhBsgB,GAAgBnlB,UAAA,kBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,+zBAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,ID1CzBlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,cAEIA,MAAA,0BAASmF,EAAAoF,MAAM,GAGfvK,MAAA,wBAIhBA,cAIQA,MAFR,WAEQA,CAFoC,2BAEpCA,CADoB,8BAEhBA,MAAA,GAAAwlB,GAAA,oCAGJxlB,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAEfA,MAAA,cACJA,QACAA,MAAA,6CACIA,MAAA,cACJA,QACAA,MAAA,6CACIA,MAAA,eACJA,QACAA,MAAA,GAAAylB,GAAA,2CAOAzlB,MAAA,8CAKIA,MAAA,eAGZA,YACAA,MAAA,GAAA0lB,GAAA,mBAWA1lB,MAAA,0CAOZA,mBA7DgBA,MAAA,GAAAA,MAAA,WAAAmF,EAAAiF,WAAAC,SAAAlF,EAAAiF,WAAAE,UAEAtK,cAAA,IAAAA,MAAA,2BAMGA,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAGIpK,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAOa7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,iCAGAA,MAAA,GAAAA,MAAA,QAAAA,MAAA,8BAGAA,MAAA,GAAAA,MAAA,QAAAA,MAAA,6BAIXA,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAAyL,SAOD5Q,MAAA,GAEAA,MAFA,QAAAA,MAAA,2BAEAA,CAFyC,qBAUhDA,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAWDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,6NE3DvBpK,MAAA,eAGIA,MAAA,mBAAAA,MAAA+F,GAAA,MAAA4B,EAAA3H,QAAA,OAAAA,MAAS2H,EAAAwC,SAAQ,GAGjBnK,MAAA,wBACJA,gCAHIA,MAAA,WAAA2H,EAAAyC,WAAAC,SAAA1C,EAAAyC,WAAAE,UAEAtK,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAEIA,MAAA,mBAAAA,MAAA+H,GAAA,MAAAJ,EAAA3H,MAAA,UAAAA,MAAS2H,EAAA4C,OAAM,GAIfvK,MAAA,wBACJA,iCAHIA,MAAA,WAAA2H,EAAAyC,WAAAC,SAAA1C,EAAAyC,WAAAE,UAEAtK,cAAA,IAAAA,MAAA,iDANJA,MAAA,EAAA2lB,GAAA,sBAGK3lB,MAAA,oEAcTA,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAAyK,ICZ/B,MAAMmb,GAAkBzf;;;;;;MAMzB0f;EASA,MAAOC,WACD3a,MAURxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBAXZ5L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChC9K,KAAM,CAAC,GAAIgL,KAAWC,UACtB9D,YAAa,CAAC,GAAI6D,KAAWC,UAC7BwX,WAAY,CAAC,IACb1b,YAAa,CAAC,MAElBhI,KAAAsJ,sBAAwBtJ,KAAKuN,oBAAoBC,0BAQjD,CAEA3K,WACI7C,KAAKyM,MACT,CAEA1H,cACI/E,KAAKyN,SACT,CAEA2T,WAAWE,GACP,MAAMzI,EAAc7Y,KAAKuK,WAAWZ,IAAI,CAAC,SACrCkP,GAAeA,EAAYpO,UAC3BoO,EAAYf,YAASyJ,MAAgBD,EAAW,KAExD,CAEAnZ,cAAc+d,GACV,MAAMvW,EAAqB3P,KAAKuK,WAAWZ,IAAI,eAC/C,GAAIgG,EAAoB,CACpB,MAAMwW,EAAqBxW,EAAmBpQ,MACxC6mB,GACe,IAAjBF,EAAO3mB,OAAU,EACX8mB,MAAO,IAAIF,EAAoBD,EAAOrd,aACtCsd,EAAmBtiB,OAAOqM,GAAKA,IAAMgW,EAAOrd,YAEtD8G,EAAmBmI,SAASsO,GAC5BzW,EAAmBkS,aACvB,CACJ,CAEAvX,SACI,MAAQrJ,OAAMmH,cAAaJ,cAAa0b,cAAe1jB,KAAKuK,WAAWhL,MACvE,IAAK0B,IAASmH,EACV,OAEJ,MAAM8F,EAAwB,CAC1BjN,OACAmH,cACAJ,YAAaA,GAAe,GAC5B0b,cAEJ1jB,KAAKuB,YAAYoL,cAAc2Z,WAAWpY,GAAM7O,UAC5CwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAAEC,OAAQ,SAC9EvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,EAAKyf,WAAW7lB,IAAK,CAAEmO,WAAY5O,KAAK6O,OAAO,EAEhFC,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,QACX,EAGb,CAEA7D,OACI1K,KAAKgP,QACAhM,QACGW,KAAK,IAAC,EACNsL,KAAS,EAAGxO,SACR,MACMyN,EAAwB,CAAEzN,QADdT,KAAKuK,WAAWhL,OAElC,OAAOS,KAAKuB,YAAYoL,cAAc4Z,WAAWrY,EAAI,IAG5D7O,UACGwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAAEC,OAAQ,SAC9EvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAAY,EAEpCK,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,QACX,EAGjB,CAEUa,cAAclB,EAAYmB,GAChCrP,KAAKuK,WAAW+E,WAAW,CACvBlH,YAAa8F,EAAK9F,YAClBnH,KAAMiN,EAAKjN,KACXyiB,WAAYxV,EAAKF,SAAS/O,IAAIgI,GAAKA,EAAExG,IACrCuH,YAAakG,EAAKlG,cAKtBhI,KAAK0L,eAAe8a,eACxB,CAACvmB,SAAAD,KAAA,mBAAAE,iBA9GQ+lB,IAAmB9lB,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAnB8gB,GAAmB3lB,UAAA,sBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,2rBAAAC,SAAA,SAAAnC,EAAAC,GAAA,KAAAD,EAAA,iBDlC5BlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAAsmB,GAAA,iCAQAtmB,MAAA,EAAAumB,GAAA,yBAAAvmB,OAUAA,MAAA,oCAGZA,YAIQA,MAFR,YAEQA,CAFoC,4BAEpCA,CADoB,8BAEhBA,MAAA,GAAAwmB,GAAA,oCAGJxmB,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAEfA,MAAA,wCAKIA,MAAA,iBAAAqF,GAAArF,aAAAwH,GAAAxH,MAASmF,EAAA8b,WAAA5b,EAAAid,OAAAljB,OAA+B,GAEhDY,UACAA,MAAA,uEAKIA,MAAA,wCAUpBA,gBAEIA,MADJ,uBACIA,CADyB,wCAErBA,MAAA,8CACIA,MAAA,kEAIJA,QACAA,MAAA,uDAIIA,MAAA,4BAAAqF,GAAArF,aAAAwH,GAAAxH,MAAoBmF,EAAA6C,cAAA3C,GAAqB,GAKzDrF,6CAzEiBA,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,KAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAAyc,GAqBpBzc,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAGIpK,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAOa7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,6BAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,8BAKJA,MAAA,GAEAA,MAFA,QAAAA,MAAA,qBAEAA,CAFmC,iBAAAA,MAAA,8BAQ/BA,MAAA,GAAAA,MAAA,YAAAA,MAAA,8BAQVA,MAAA,GAAAA,MAAA,QAAAA,MAAA,+BACUA,MAAA,GAAAA,MAAA,QAAAA,MAAA,2BAGRA,MAAA,GAAAA,MAAA,eAAAA,MAAA,8BAKJA,MAAA,GAGAA,MAHA,wBAAAmF,EAAAgE,sBAGAnJ,CAH+C,2BAAAymB,EAAAthB,EAAAiF,WAAAZ,IAAA,qBAAAid,EAAArnB,MAG/CY,CAF0D,YAAAA,MAAA,sLEvEnE,MAAM0mB,MAAwB3V,OAAuD,CACxFC,SAAU,YACVC,mBAAoBC,GAAmBA,EAAgBtN,SAASmJ,MAAWoE,qBAC3EC,YAAa1E,GAAQA,EAAKzE,YAC1BoJ,WAAYA,CAACjQ,EAAakQ,IACtBlQ,EAAYoL,cAAcma,YAAYrV,GAAKzO,QAAK/D,KAAI0S,GAAOA,EAAImV,iICH3D3mB,MAAA,UAKIA,MAAA,iBACAA,MAAA,wBACJA,eAJIA,MAAA,aAAAA,MAAA,EAAAyR,KAGAzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,+DA4BJA,MAAA,uBAAAA,MAAA,IAAA4mB,EAAAtmB,GAAA,gCASAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAA6mB,EAAArmB,UAAA,yCASAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAA8mB,EAAAjV,UAAA,yCAaK7R,MAJL,SAIKA,CAAA,UAAMA,MAAA,GAAsBA,QAC7BA,MAAA,iBACJA,mCAHIA,MAAA,aAAAA,MAAA,EAAA8R,GAAAiV,EAAAzmB,KACON,MAAA,GAAAA,MAAA+mB,EAAA9e,uCAIPjI,MAAA,6BAAAA,MAAA,IAAA+mB,EAAA9e,YAAA,+BADJjI,MAPA,EAAAgnB,GAAA,WAOAhnB,CAHK,EAAAinB,GAAA,yBAAAjnB,gDAH4BA,MAA5B,QAAAknB,EAAAC,cAAAJ,GAA4B/mB,CAAA,WAAAonB,8BAajCpnB,MAAA,UAAmCA,MAAA,GAAeA,mCAAfA,cAAAqnB,EAAAvmB,gCAAnCd,MAAA,EAAAsnB,GAAA,6CAAOtnB,MAAA,QAAAknB,EAAAC,cAAAE,+BAMHrnB,MAAA,cACIA,MAAA,0BACAA,MAAA,YAAkBA,MAAA,sDACtBA,oCAFuBA,cAAA,cAAAunB,EAAAzmB,MACDd,MAAA,GAAAA,YAAA,IAAAA,MAAA,IAAAunB,EAAAzmB,mCAH1Bd,MAAA,GACIA,MAAA,EAAAwnB,GAAA,sDAA8BxnB,cAAA,UAAAynB,EAAA5Z,oCADlC7N,MAAA,EAAA0nB,GAAA,qDAAe1nB,MAAA,QAAAknB,EAAAC,cAAAM,+BAYPznB,MAAA,cAEKA,MAAA,GAAgBA,kCAAhBA,cAAA2nB,8BAOD3nB,MAAA,GAGIA,MAAA,iBACAA,MAAA,iDAAAA,MAAA,GAAAA,MAAA,IAAA4nB,EAAA/f,YAAAnJ,OAAAwoB,EAAAW,aAAA,4BAGA7nB,MAAA,0DAZRA,MAAA,eAGIA,MAAA,mBAAAA,MAAA8nB,GAAA,MAAAF,EAAA5nB,MAAA,GAAA0M,KAAAwa,EAAAlnB,QAAA,OAAAA,MAASknB,EAAAa,mBAAAH,GAAwB,GAQjC5nB,MANA,EAAAgoB,GAAA,sBAMAhoB,CAJC,EAAAioB,GAAA,yBAAAjoB,OAOLA,2DARSA,QAA8DA,MAA9D,QAAAknB,EAAAgB,aAAAN,EAAAtnB,KAAA,GAAAsnB,EAAA/f,YAAAnJ,OAA8DsB,CAAA,WAAAmoB,8BAZ/EnoB,MAAA,GACIA,MAAA,YACIA,MAAA,EAAAooB,GAAA,oCAIApoB,MAAA,EAAAqoB,GAAA,iBAeJroB,qDAlB+BA,MAAA,GAAAA,MAAA,UAAAA,MAAA,IAAA4nB,EAAA/f,YAAA,EAAAqf,EAAAgB,aAAAN,EAAAtnB,KAAA,IAKtBN,MAAA,GAAAA,MAAA,OAAA4nB,EAAA/f,YAAAnJ,OAAAwoB,EAAAW,sCAgBT7nB,MAAA,aAAiCA,MAAA,wBAA+CA,eAA/CA,oBAAA,8DADrCA,MAvBA,EAAAsoB,GAAA,sBAuBAtoB,CAvB6D,EAAAuoB,GAAA,yBAAAvoB,gDAAlBA,MAA5B,QAAAknB,EAAAC,cAAAS,GAA4B5nB,CAAA,WAAAwoB,IClFhD,MAAMC,GAAgBtiB;;;;;;;;;MASvB0f;EASA,MAAO6C,WACDjW,MAyBR9S,cACI+L,QAvBJ7L,KAAA6S,gBAAkB,YACT7S,KAAAgoB,aAAe,EACxBhoB,KAAAqoB,aAAyC,GAChCroB,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAC,iBACAC,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBE,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBC,YAAY,YAAa,QACzBC,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,SAChB2S,QAAQ,CAAE3S,KAAM,gBAChBwS,eAAevT,KAAK6O,OAIrBhD,MAAM+H,UAAU,CACZC,SAAUiV,MACV/U,SAAUlN,GAAQA,EAAKyF,MACvB2H,aAAcA,CAACC,EAAMvQ,MACjBgD,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,CACJ5C,KAAM,CACF0T,SAAU3U,KAAKoU,kBAAkB7U,UAElCS,KAAK8S,QAAQ+B,qBAEpBC,KAAM9U,KAAKyS,MAAMsC,qBAGzBV,qBAAsB,CAACrU,KAAK8S,QAAQvO,aAAcvE,KAAKyS,MAAMlO,eAErE,CAEA2jB,mBAAmBha,GACXlO,KAAKqoB,aAAana,EAAKzN,MAAQyN,EAAKlG,YAAYnJ,OAChDmB,KAAKqoB,aAAana,EAAKzN,IAAMT,KAAKgoB,aAElChoB,KAAKqoB,aAAana,EAAKzN,IAAMyN,EAAKlG,YAAYnJ,MAEtD,CAEAyoB,cAAcpZ,GACV,OAAOA,EAAKjN,OAAS8nB,MAAyB7a,EAAKjN,OAAS6L,IAChE,CAAC7M,SAAAD,KAAA,mBAAAE,iBA1DQ2oB,GAAiB,EAAA5oB,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAjB0jB,GAAiBvoB,UAAA,oBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,yiCAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,ID9B1BlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA6oB,GAAA,WAQA7oB,MAAA,oCAGZA,YACAA,MAAA,8FASIA,MAFA,sBAAAqF,GAAA,OAAcF,EAAA2P,cAAAzP,EAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAA,OACdF,EAAA4P,gBAAA1P,EAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAA,OACtBF,EAAA6P,kBAAA3P,EAAyB,GAOjDrF,MALA,4BAKAA,CADE,6CAKFA,MAAA,6CACIA,MAAA,GAAA8oB,GAAA,mBAGJ9oB,QACAA,MAAA,6CAKIA,MAAA,GAAA+oB,GAAA,mBAGJ/oB,QACAA,MAAA,6CAKIA,MAAA,GAAAgpB,GAAA,mBAGJhpB,QACAA,MAAA,8CAKIA,MAAA,GAAAipB,GAAA,mBAYJjpB,QACAA,MAAA,8CACIA,MAAA,GAAAkpB,GAAA,mBAGJlpB,QACAA,MAAA,8CACIA,MAAA,GAAAmpB,GAAA,mBAQJnpB,QACAA,MAAA,8CACIA,MAAA,GAAAopB,GAAA,mBA6BRppB,iBApHiBA,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KAWbV,MAAA,GAKAA,MALA,KAAAmF,EAAAuN,gBAKA1S,CALsB,QAAAA,MAAA,KAAAmF,EAAAqQ,QAKtBxV,CAJwB,eAAAA,MAAA,KAAAmF,EAAAsQ,eAIxBzV,CAHsC,aAAAA,MAAA,MAAAmF,EAAAV,aAGtCzE,CAFkC,cAAAA,MAAA,MAAAmF,EAAAuQ,cAElC1V,CADoC,UAAAmF,EAAAwN,SAQhC3S,MAAA,GACAA,MADA,gBAAAmF,EACAnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA8O,kBACAjU,CADuC,wBAAAA,MAAA,iCAG3BA,MAAA,GAA4CA,MAA5C,UAAAA,MAAA,mBAA4CA,CAAT,sBAM/CA,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,4BAEAA,CAF4C,cAE5CA,CADkB,OAAAmF,EAAAmN,MAAA9I,IAAA,gBAgBNxJ,MAAA,GAAgDA,MAAhD,UAAAA,MAAA,qBAAgDA,CAAX,OAAAmF,EAAAmN,MAAA9I,IAAA,SAKrCxJ,MAAA,GAAAA,MAAA,UAAAA,MAAA,2BAUAA,MAAA,GAAAA,MAAA,UAAAA,MAAA,wbEvFRA,MAAA,eAGIA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAmO,EAAA3V,QAAA,OAAAA,MAAS2V,EAAAxL,SAAQ,GAGjBnK,MAAA,wBACJA,gCAHIA,MAAA,YAAA2V,EAAAC,qBAEA5V,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAEIA,MAAA,mBAAAA,MAAA6V,GAAA,MAAAF,EAAA3V,MAAA,UAAAA,MAAS2V,EAAApL,OAAM,GAIfvK,MAAA,wBACJA,iCAHIA,MAAA,YAAA2V,EAAAC,qBAEA5V,cAAA,IAAAA,MAAA,iDANJA,MAAA,EAAAqpB,GAAA,sBAGKrpB,MAAA,mBAAAA,MAAA,EAAAU,+BAcTV,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAA+V,8BAgB1B/V,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2V,EAAAjL,aACA1K,CAD6B,wBAAA2V,EAAAvL,WAAAZ,IAAA,kBCtC1C,MAAM8f,GAAoBnjB;;;;;;;;;;;;EAoB3B,MAAOojB,WACDpe,MAURxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBAXZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,UACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChChL,KAAM,CAAC,GAAIkL,KAAWC,UACtBrB,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,iBAE7D7K,KAAAmW,iBAAmB,CAACjJ,MAAWkK,WAAYlK,MAAWyc,aAAczc,MAAW0c,aASxF,CAEA/mB,WACI7C,KAAKyM,MACT,CAEA1H,cACI/E,KAAKyN,SACT,CAEAsI,oBACI,OAAO/V,KAAKuK,WAAWwN,OAAS/X,KAAKuK,WAAWyN,KACpD,CAEA1N,SACI,IAAKtK,KAAKuK,WAAWwN,MACjB,OAEJ,MAAM7I,EAAYlP,KAAKuK,WAAWhL,MAClC,IAAK2P,EAAUnO,KACX,OAEJ,MAAM+M,EAA2B,CAC7B/M,KAAMmO,EAAUnO,KAChB8J,aAAcqE,EAAUrE,cAE5B7K,KAAKuB,YAAYiW,SAASqS,aAAa/b,GAAOzO,UAAUwH,IACpD,GACS,WADDA,EAAKgjB,aAAavR,WAElBtY,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,WAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,EAAKgjB,aAAappB,IAAK,CAAEmO,WAAY5O,KAAK6O,OAE/E,EAER,CAEAnE,OACI,IAAK1K,KAAKuK,WAAWwN,MACjB,OAEJ,MAAM7I,EAAYlP,KAAKuK,WAAWhL,MAClCS,KAAKgP,QACAhM,QACGW,KAAK,IAAC,EACNsL,KAAS2J,IACL,MAAM9K,EAAQ,CACVrN,GAAImY,EAAOnY,GACXM,KAAMmO,EAAUnO,KAChB8J,aAAcqE,EAAUrE,cAE5B,OAAO7K,KAAKuB,YAAYiW,SAASsS,aAAahc,EAAK,IAG1DzO,UAAU,EAAGyqB,mBACV,GACS,WADDA,EAAaxR,WAEbtY,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,WAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAI5B,EAEZ,CAKUW,cAAcb,EAAwBc,GAC5CrP,KAAKuK,WAAW+E,WAAW,CACvBvO,KAAMwN,EAAOxN,OAEbf,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBAAyBxP,KAAK6K,aAAc7K,KAAKuK,WAAWZ,IAAI,CAAC,iBAAkB4E,EAEhG,CAACtO,SAAAD,KAAA,mBAAAE,iBApGQwpB,IAAqBvpB,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAArBukB,GAAqBppB,UAAA,wBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,imBAAAC,SAAA,SAAAnC,EAAAC,MAAA,EAAAD,IDrC9BlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBAEAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA4pB,GAAA,iCAQA5pB,MAAA,EAAA6pB,GAAA,yBAAA7pB,OAUAA,MAAA,oCAGZA,YAIQA,MAFR,YAEQA,CAFoC,4BAEpCA,CADoB,8BAEhBA,MAAA,GAAA8pB,GAAA,oCAGJ9pB,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAEfA,MAAA,wCAQZA,YACAA,MAAA,GAAA+pB,GAAA,kBAWA/pB,MAAA,yCAOZA,mCA3DiBA,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,IAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAAgqB,GAqBpBhqB,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAGIpK,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAOa7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,sBAIRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAQXhW,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAWDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,kPE3D5B,MAAM6f,MAA0BlZ,OAA2D,CAC9FC,SAAU,cACVC,mBAAoBC,GAAmBA,EAAgBtN,SAASmJ,MAAWmd,cAC3E9Y,YAAa1E,GAAQA,EAAK9L,KAC1ByQ,WAAYA,CAACjQ,EAAakQ,IACtBlQ,EAAYiW,SAAS8S,cAAc7Y,GAAKzO,QAAK/D,KAAI0S,GAAOA,EAAI2Y,oHCHxDnqB,MAAA,UACIA,MAAA,iBACAA,MAAA,wBACJA,eAH8EA,MAAA,aAAAA,MAAA,EAAAyR,KAE1EzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,iEA2BuBA,MAAA,uBAAAA,MAAAoqB,EAAA9pB,+BAQ3BN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAqqB,EAAA7pB,UAAA,yCASAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAsqB,EAAAzY,UAAA,yCAMK7R,MADL,SACKA,CAAA,UAAMA,MAAA,GAAiBA,QACxBA,MAAA,iBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAA8R,GAAAyY,EAAAjqB,KACbN,MAAA,GAAAA,MAAAuqB,EAAA3pB,gCAKnBZ,MAAA,uEAAkGA,MAA5B,cAAAwqB,EAA4BxqB,CAAD,QAAAknB,EAAA5U,QCzD7EnM;;;;;;;;;;;;;;;EAuBlB,MAAOskB,WACDhY,MAyBR9S,cACI+L,QAvBJ7L,KAAA6S,gBAAkB,cACT7S,KAAA6K,aAAe7K,KAAK8L,qBAAqB,UACzC9L,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAC,iBACAC,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBC,sBAAsBtT,KAAK6K,cAC3B0I,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBC,YAAY,YAAa,QACzBC,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,SAChB4S,oBAAoB3T,KAAK6K,cACzB0I,eAAevT,KAAK6O,OAIrBhD,MAAM+H,UAAU,CACZC,SAAUgX,MACV9W,SAAUlN,GAAQA,EAAK6Q,QACvBzD,aAAcA,CAACC,EAAMvQ,MACjBgD,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,CACJ9C,KAAM,CACF4T,SAAU3U,KAAKoU,kBAAkB7U,UAElCS,KAAK8S,QAAQ+B,qBAEpBC,KAAM9U,KAAKyS,MAAMsC,qBAGzBV,qBAAsB,CAACrU,KAAK8S,QAAQvO,aAAcvE,KAAKyS,MAAMlO,eAErE,CAACtE,SAAAD,KAAA,mBAAAE,iBA9CQ0qB,GAAmB,EAAA3qB,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAnBylB,GAAmBtqB,UAAA,sBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,itBAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,ID3B5BlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA2qB,GAAA,WAIA3qB,MAAA,oCAGZA,YACAA,MAAA,8FASIA,MAFA,sBAAAqF,GAAA,OAAcF,EAAA2P,cAAAzP,EAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAA,OACdF,EAAA4P,gBAAA1P,EAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAA,OACtBF,EAAA6P,kBAAA3P,EAAyB,GAOjDrF,MALA,4BAKAA,CADE,6CAKFA,MAAA,6CACIA,MAAA,GAAA4qB,GAAA,mBACJ5qB,QACAA,MAAA,6CAKIA,MAAA,GAAA6qB,GAAA,mBAGJ7qB,QACAA,MAAA,6CAKIA,MAAA,GAAA8qB,GAAA,mBAGJ9qB,QACAA,MAAA,6CACIA,MAAA,GAAA+qB,GAAA,mBAMJ/qB,QACAA,MAAA,GAAAgrB,GAAA,qCACJhrB,eA1DwCA,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KASpCV,MAAA,GAKAA,MALA,KAAAmF,EAAAuN,gBAKA1S,CALsB,QAAAA,MAAA,KAAAmF,EAAAqQ,QAKtBxV,CAJwB,eAAAA,MAAA,KAAAmF,EAAAsQ,eAIxBzV,CAHsC,aAAAA,MAAA,MAAAmF,EAAAV,aAGtCzE,CAFkC,cAAAA,MAAA,MAAAmF,EAAAuQ,cAElC1V,CADoC,UAAAmF,EAAAwN,SAQhC3S,MAAA,GACAA,MADA,gBAAAmF,EACAnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA8O,kBACAjU,CADuC,wBAAAA,MAAA,iCAG3BA,MAAA,GAA4CA,MAA5C,UAAAA,MAAA,mBAA4CA,CAAT,sBAI/CA,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAOZxJ,MAAA,GAAmEA,MAAnE,UAAAA,MAAA,qBAAmEA,CAA9B,cAA8BA,CAAD,OAAAmF,EAAAmN,MAAA9I,IAAA,SAQ7BxJ,MAAA,GAAAA,MAAA,UAAAmF,EAAAuF,iMEhD7C1K,MAAA,uDAAwCA,MAAA,QAAAirB,EAAAC,qCAXxClrB,MAFR,UAEQA,CAFgD,UAEhDA,CADwD,6CAEpDA,MAAA,GACJA,QAEIA,MADJ,UACIA,CADmB,6CAEfA,MAAA,6BACJA,QACAA,MAAA,+CACIA,MAAA,+BAERA,UACAA,MAAA,GAAAmrB,GAAA,yBAERnrB,8CAdgCA,cAAA,QAAA2V,EAAAyV,iBACNprB,cAAA,QAAAA,MAAA,iCACdA,MAAA,GAAAA,MAAA,IAAAirB,EAAArqB,KAAA,KAGkBZ,MAAA,GAAAA,MAAA,QAAAA,MAAA,sBACdA,MAAA,GAAAA,MAAA,IAAAA,MAAA,KAAAirB,EAAAI,MAAA1V,EAAA2V,cAAA,KAEctrB,MAAA,GAAAA,MAAA,QAAAA,MAAA,gCACdA,MAAA,GAAAA,MAAA,IAAAA,MAAA,MAAAirB,EAAAM,aAAA5V,EAAA2V,cAAA,KAGUtrB,MAAA,GAAAA,MAAA,OAAAirB,EAAAC,kCAG1BlrB,MAAA,WACIA,MAAA,iBACAA,MAAA,wBACJA,eADIA,MAAA,GAAAA,MAAA,IAAAA,MAAA,mDCTF,MAAOwrB,GANb7rB,cAQaE,KAAA4rB,SAAU,EACV5rB,KAAAurB,iBAAkB,EAEjBvrB,KAAA6rB,QAAU,IAAInqB,MAC3BzB,SAAAD,KAAA,mBAAAE,iBANYyrB,GAAsC,EAAA1rB,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAtCwmB,GAAsCrrB,UAAA,2CAAAhC,OAAA,CAAAwtB,WAAA,aAAAF,QAAA,UAAAL,gBAAA,kBAAAE,aAAA,gBAAArhB,QAAA,CAAAyhB,QAAA,WAAAxkB,MAAA,EAAAC,KAAA,EAAAC,OAAA,+SAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,IDVnDlF,MAAA,qCAiBIA,MAhBA,EAAA4rB,GAAA,cAgBA5rB,CAhBwD,EAAA6rB,GAAA,aAqBpD7rB,MADJ,UACIA,CADqB,cACaA,MAAA,0BAASmF,EAAAumB,QAAA1nB,MAAc,GACrDhE,MAAA,wBAGZA,mBA1B8BA,MAAA,QAAAA,MAAA,6BACeA,MAAA,GAAAA,MAAA,UAAAmF,EAAAwmB,YAgBjB3rB,cAAA,kBAAAmF,EAAAwmB,WAAA,KAAAxmB,EAAAwmB,WAAAjtB,SAKuCsB,MAAA,GAAAA,MAAA,YAAAmF,EAAAsmB,SACvDzrB,cAAA,IAAAA,MAAA,8hBEXJA,MADJ,SACIA,CAD8C,UAE1CA,MAAA,YACJA,QACAA,MAAA,WAA8BA,MAAA,GAAeA,QAC7CA,MAAA,WAA6BA,MAAA,GAAcA,QAC3CA,MAAA,WACIA,MAAA,6BACJA,QAEIA,MADJ,WACIA,CAD8B,eACvBA,MAAA,yBAAAqF,GAAA,MAAAymB,EAAA9rB,MAAA+F,GAAA2B,UAAA1H,aAAA8rB,EAAAC,SAAA1mB,KAAAymB,EAAAC,SAAA1mB,GAAArF,MAAAqF,EAAA,GAA4BrF,MAAA,oBAAAA,MAAA+F,GAAA,MAAAimB,EAAAhsB,MAAA,UAAAA,MAAUgsB,EAAAC,iBAAgB,GAA7DjsB,QACAA,MAAA,gBAA4BA,MAAA,yBAAA8rB,EAAA9rB,MAAA+F,GAAA2B,UAAAskB,EAAAhsB,MAAA,UAAAA,MAASgsB,EAAAE,WAAAJ,GAAgB,GACjD9rB,MAAA,kBAERA,UACAA,MAAA,YACIA,MAAA,+BAERA,iDAhBaA,MAAA,GAAAA,MAAA,MAAA8rB,EAAAK,QAAA,eAAAnsB,OAEqBA,MAAA,GAAAA,MAAA8rB,EAAAlrB,MACDZ,MAAA,GAAAA,MAAA8rB,EAAAM,KAEzBpsB,MAAA,GAAAA,MAAA,IAAAA,MAAA,IAAA8rB,EAAAO,iBAAAL,EAAAV,cAAA,KAGOtrB,MAAA,GAAAA,MAAA,UAAA8rB,EAAAC,UAMP/rB,MAAA,GAAAA,MAAA,IAAAA,MAAA,KAAA8rB,EAAAO,iBAAAP,EAAAC,SAAAC,EAAAV,cAAA,gCAzBJtrB,MAFR,YAEQA,CAFqE,UAErEA,CADG,QAECA,MAAA,QACAA,MAAA,QAAIA,MAAA,wBAAsCA,QAC1CA,MAAA,QAAIA,MAAA,wBAAqCA,QACzCA,MAAA,SAAIA,MAAA,0BAAoCA,QACxCA,MAAA,SAAIA,MAAA,0BAAkCA,QACtCA,MAAA,SAAIA,MAAA,0BAEZA,YACAA,MAAA,GAAAssB,GAAA,cAoBItsB,MADJ,UACIA,CADkB,WACDA,MAAA,0BAAmCA,QAIpDA,MAHA,QAGAA,CAHS,QAGTA,CAFS,QAETA,CADS,SAETA,MAAA,SAAIA,MAAA,+BAEZA,kCAlCgBA,MAAA,GAAAA,YAAA,2BACAA,MAAA,GAAAA,YAAA,2BACAA,MAAA,GAAAA,YAAA,2BACAA,MAAA,GAAAA,YAAA,yBACAA,MAAA,GAAAA,YAAA,sBAGSA,MAAA,GAAAA,MAAA,UAAAgsB,EAAAO,OAoBAvsB,MAAA,GAAAA,YAAA,0BAKbA,MAAA,GAAAA,YAAA,MAAAgsB,EAAAQ,SAAAR,EAAAV,uCAMJtrB,MADJ,WACIA,CADgD,YACxBA,MAAA,wBAAuDA,QAC/EA,MAAA,iBACJA,eAF4BA,MAAA,GAAAA,YAAA,6CCjB1B,MAAOysB,EAIT,YAAID,GACA,OAAO3sB,KAAK0sB,MAAMG,OAAO,CAACC,EAAKC,IAAMD,EAAMC,EAAEP,iBAAmBO,EAAEb,SAAU,EAChF,CAEApsB,YAAoByB,EAAkCyrB,GAAlChtB,KAAAuB,cAAkCvB,KAAAgtB,sBAP5ChtB,KAAAitB,iBAAmB,IAAIvrB,MACjC1B,KAAA0sB,MAAyB,EAMwE,CAEjG7pB,WACI7C,KAAK0sB,MAAQ1sB,KAAKktB,uBACdltB,KAAK0sB,OACL1sB,KAAKitB,iBAAiB9oB,KAAKnE,KAAK0sB,OAEpC1sB,KAAKuB,YAAYiW,SAAS2V,iBAAiB,eAAelgB,QAAQ5N,UAAU+tB,IACxEptB,KAAKyrB,aAAe2B,EAAOC,cAActW,qBAEjD,CAEAuW,aAAaF,GACLA,GACAptB,KAAKutB,WAAWH,EAExB,CAEQG,WAAWH,GACVptB,KAAK0sB,MAAMxlB,KAAK6lB,GAAKA,EAAEtsB,KAAO2sB,EAAOI,oBACtCxtB,KAAK0sB,MAAM9iB,KAAK,CACZnJ,GAAI2sB,EAAOI,iBACXzsB,KAAMqsB,EAAOK,mBACbnB,QAASc,EAAOM,cAAcpB,SAAW,GACzCJ,SAAU,EACVK,IAAKa,EAAOb,IACZC,iBACwC,gBAAnCY,EAAO1B,aAAapT,YAAgC8U,EAAO1B,aAAansB,OAAU,IAE3FS,KAAK2tB,wBACL3tB,KAAKitB,iBAAiB9oB,KAAKnE,KAAK0sB,OAExC,CAEAN,iBACIpsB,KAAK2tB,wBACL3tB,KAAKitB,iBAAiB9oB,KAAKnE,KAAK0sB,MACpC,CAEAL,WAAWuB,GACP5tB,KAAK0sB,MAAQ1sB,KAAK0sB,MAAM7oB,OAAOkpB,GAAKA,EAAEtsB,KAAOmtB,EAAKntB,IAClDT,KAAK2tB,wBACL3tB,KAAKitB,iBAAiB9oB,KAAKnE,KAAK0sB,MACpC,CAEQiB,wBACJ3tB,KAAKgtB,oBAAoBa,sBAAsB,oBAAqB7tB,KAAK0sB,MAC7E,CAEQQ,uBACJ,OAAOltB,KAAKgtB,oBAAoBc,sBAAsB,sBAAwB,EAClF,CAAC7tB,SAAAD,KAAA,mBAAAE,iBA3DQ0sB,GAAyBzsB,MAAA+E,OAAA/E,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAzBynB,EAAyBtsB,UAAA,6BAAA8J,QAAA,CAAA6iB,iBAAA,oBAAA5lB,MAAA,EAAAC,KAAA,EAAAC,OAAA,8nBAAAC,SAAA,SAAAnC,EAAAC,GAAA,KAAAD,EAAA,iBDetClF,MAxCA,EAAA4tB,GAAA,gBAwCA5tB,CAxC6E,EAAA6tB,GAAA,yBAAA7tB,OA+CzEA,MADJ,UACIA,CADoB,oCACUA,MAAA,2BAAAqF,GAAArF,aAAAwH,GAAAxH,MAAmBmF,EAAAgoB,aAAA9nB,GAAoB,GACzErF,mCAhDsDA,MAApB,OAAAmF,EAAAonB,MAAA7tB,OAAoBsB,CAAA,WAAA8tB,gUEiBlC9tB,MAAA,eACIA,MAAA,GACJA,kCAF4DA,MAAA,QAAA8c,EAAAhc,MACxDd,cAAA,IAAA8c,EAAAlc,KAAA,MCAlB,MAAOmtB,EAMTpuB,YACY6L,EACApK,EACAyrB,GAFAhtB,KAAA2L,cACA3L,KAAAuB,cACAvB,KAAAgtB,sBARFhtB,KAAAmuB,cAAgB,IAAIzsB,KAS3B,CAEHmB,WACI7C,KAAKyG,oBAAsBzG,KAAKuB,YAAYiW,SACvC4W,wBACA9qB,UAAU8pB,GAAUA,EAAOtmB,UAAUC,OAC1C,MACMsnB,EADcruB,KAAKgtB,oBAAoBc,sBAAsB,wBAG7D,CACIQ,KAAM,GACNC,YAAa,GACbC,WAAY,GACZC,SAAU,IAEpBzuB,KAAKmuB,cAAchqB,KAAKkqB,GAExBruB,KAAK0uB,KAAO1uB,KAAK2L,YAAYI,MAAMsiB,GACnCruB,KAAK2uB,aAAe3uB,KAAK0uB,KAAKnqB,aAAalF,UAAUE,IACjDS,KAAKgtB,oBAAoBa,sBAAsB,sBAAuBtuB,GACtES,KAAKmuB,cAAchqB,KAAK5E,EAAK,EAErC,CAEAwF,cACQ/E,KAAK2uB,cACL3uB,KAAK2uB,aAAaC,aAE1B,CAAC3uB,SAAAD,KAAA,mBAAAE,iBAtCQguB,GAAwB/tB,MAAA+E,MAAA/E,MAAAmQ,OAAAnQ,MAAAmQ,OAAA,EAAArQ,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAxB+oB,EAAwB5tB,UAAA,4BAAA8J,QAAA,CAAA+jB,cAAA,iBAAA9mB,MAAA,GAAAC,KAAA,GAAAC,OAAA,kUAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,IDjBjClF,MADJ,UACIA,CADc,WAEVA,MAAA,wBACJA,QAGQA,MAFR,UAEQA,CAFgB,WAEhBA,CADuC,2CAEnCA,MAAA,aACJA,QACAA,MAAA,4CACIA,MAAA,cACJA,QACAA,MAAA,6CACIA,MAAA,cACJA,QACAA,MAAA,6CACIA,MAAA,eACIA,MAAA,GAAA0uB,GAAA,kCAOpB1uB,uBAtBQA,MAAA,GAAAA,MAAA,IAAAA,MAAA,kCAGMA,MAAA,GAAAA,MAAA,YAAAmF,EAAAopB,MACcvuB,cAAA,QAAAA,MAAA,sBAGAA,MAAA,GAAAA,MAAA,QAAAA,MAAA,4BAGAA,MAAA,GAAAA,MAAA,QAAAA,MAAA,+BAGAA,MAAA,GAAAA,MAAA,QAAAA,MAAA,2BAEoBA,MAAA,GAAAA,MAAA,UAAAA,MAAA,MAAAmF,EAAAmB,4SEF5BtG,MAAA,uCAKAA,MAAA,uCAKAA,MAAA,2CAKJA,MAAA,6CAIIA,MAAA,6BACJA,8BAJIA,MAAA,QAAAA,MAAA,qBAGAA,MAAA,GAAAA,MAAA,IAAAA,MAAA,UAAA6F,EAAA8lB,WAAAgD,MAAA,KAAA9oB,EAAA8lB,WAAAgD,MAAAtD,MAAAxlB,EAAAylB,cAAA,gCAEJtrB,MAAA,6CAIIA,MAAA,6BACJA,8BAJIA,MAAA,QAAAA,MAAA,8BAGAA,MAAA,GAAAA,MAAA,IAAAA,MAAA,UAAA6F,EAAA8lB,WAAAgD,MAAA,KAAA9oB,EAAA8lB,WAAAgD,MAAApD,aAAA1lB,EAAAylB,cAAA,+BAGRtrB,MAAA,6CAEIA,MAAA,cAAA6F,EAAA8lB,YAAA,MAAA9lB,EAAA8lB,WAAAgD,MAAA,KAAA9oB,EAAA8lB,WAAAgD,MAAAzD,WCnCV,MAAO0D,GANbjvB,cAQaE,KAAA4rB,SAAU,EACV5rB,KAAAurB,iBAAkB,EAEjBvrB,KAAA6rB,QAAU,IAAInqB,MAC3BzB,SAAAD,KAAA,mBAAAE,iBANY6uB,GAAiC,EAAA9uB,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAjC4pB,GAAiCzuB,UAAA,sCAAAhC,OAAA,CAAAwtB,WAAA,aAAAF,QAAA,UAAAL,gBAAA,kBAAAE,aAAA,gBAAArhB,QAAA,CAAAyhB,QAAA,WAAAxkB,MAAA,GAAAC,KAAA,GAAAC,OAAA,ihBAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,IDF1ClF,MARJ,UAQIA,CADH,WAEOA,MAAA,wBACJA,QAGQA,MAFR,UAEQA,CAFgB,UAEhBA,CADwD,6CAEpDA,MAAA,WAWIA,MAVA,EAAA6uB,GAAA,iBAUA7uB,CANC,GAAA8uB,GAAA,iBAMD9uB,CADC,GAAA+uB,GAAA,kBAEL/uB,QACAA,MAAA,IACJA,QACAA,MAAA,YAOIA,MANA,GAAAgvB,GAAA,0BAMAhvB,CAHC,GAAAivB,GAAA,2BASLjvB,QACAA,MAAA,GAAAkvB,GAAA,0BAKRlvB,UAEIA,MADJ,YACIA,CADqB,gBACaA,MAAA,0BAASmF,EAAAumB,QAAA1nB,MAAc,GACrDhE,MAAA,0BAGZA,mBApDIA,MAAA,UAAAA,MAAA,GAAAU,IAAA,WAAAyE,EAAAwmB,WAAA,KAAAxmB,EAAAwmB,WAAAwD,WAAA,WAAAhqB,EAAAwmB,WAAA,KAAAxmB,EAAAwmB,WAAAwD,WAAAhqB,EAAAwmB,aAOI3rB,MAAA,GAAAA,MAAA,IAAAA,MAAA,kCAG4BA,MAAA,GAAAA,MAAA,QAAAmF,EAAAimB,iBACNprB,cAAA,QAAAA,MAAA,2BAKLA,MAAA,GAAAA,MAAA,aAAAmF,EAAAwmB,WAAA,KAAAxmB,EAAAwmB,WAAAwD,UAKAnvB,cAAA,mBAAAmF,EAAAwmB,WAAA,KAAAxmB,EAAAwmB,WAAAwD,WAE6BnvB,cAAA,QAAAmF,EAAAwmB,YAEtC3rB,cAAA,UAAAmF,EAAAwmB,WAAA,KAAAxmB,EAAAwmB,WAAAwD,SAAA,KAKKnvB,MAAA,GAAAA,MAAA,oBAAAmF,EAAAwmB,YAAA,MAAAxmB,EAAAwmB,WAAAgD,MAAA,KAAAxpB,EAAAwmB,WAAAgD,MAAAtD,QAMArrB,cAAA,oBAAAmF,EAAAwmB,YAAA,MAAAxmB,EAAAwmB,WAAAgD,MAAA,KAAAxpB,EAAAwmB,WAAAgD,MAAApD,eAMJvrB,cAAA,aAAAmF,EAAAwmB,YAAA,MAAAxmB,EAAAwmB,WAAAgD,MAAA,KAAAxpB,EAAAwmB,WAAAgD,MAAAzD,UAMkDlrB,MAAA,GAAAA,MAAA,YAAAmF,EAAAsmB,SACvDzrB,cAAA,IAAAA,MAAA,6gCEtCAA,MAAA,eAGIA,MAAA,mBAAAA,MAAA+F,GAAA,MAAA4B,EAAA3H,QAAA,OAAAA,MAAS2H,EAAAwC,SAAQ,GAKjBnK,MAAA,wBACJA,gCALIA,MAAA,WAAA2H,EAAAyC,WAAAE,UAAA3C,EAAAyC,WAAAC,UAAA1C,EAAA8X,kBAAA9X,EAAAynB,oBAIApvB,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAEIA,MAAA,mBAAAA,MAAA+H,GAAA,MAAAJ,EAAA3H,MAAA,UAAAA,MAAS2H,EAAA4C,OAAM,GAMfvK,MAAA,wBACJA,iCALIA,MAAA,WAAA2H,EAAAyC,WAAAE,UAAA3C,EAAAyC,WAAAC,UAAA1C,EAAA8X,kBAAA9X,EAAAynB,oBAIApvB,cAAA,IAAAA,MAAA,oDARJA,MAAA,EAAAqvB,GAAA,sCAGKrvB,MAAA,mBAAA2H,EAAAqO,6CAgBThW,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAAyK,8BA0CVzK,MAAA,eACIA,MAAA,GACJA,kCAFoDA,MAAA,QAAAsvB,EAAAxuB,MAChDd,cAAA,IAAAsvB,EAAAxuB,KAAA,KAAAwuB,EAAArnB,YAAA,gCAOpBjI,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2H,EAAA+C,aACA1K,CAD6B,wBAAA2H,EAAAyC,WAAAZ,IAAA,2DAYjCxJ,MAAA,wDAMIA,MAAA,oBAAAA,MAAA4f,GAAA,MAAAjY,EAAA3H,QAAA,OAAAA,MAAA2H,EAAA8X,gBAA4B,KAAI,GAEnCzf,gCAHGA,MAFA,YAAA2H,EAAA8X,gBAEAzf,CAF6B,sBAAA2H,EAAA+X,0BAE7B1f,CADiD,YAAAA,MAAA,IAAA2H,EAAAqO,6DAYzChW,MAAA,eAIIA,MAAA,yBAAAuvB,EAAAvvB,MAAAwvB,GAAA9nB,UAAAC,EAAA3H,MAAA,UAAAA,MAAS2H,EAAAkY,cAAA0P,GAAsB,GAE/BvvB,MAAA,GACJA,oCADIA,cAAA,IAAAuvB,EAAAtnB,YAAA,gCAXRjI,MAFR,WAEQA,CAFsE,iBAEtEA,CADU,eAENA,MAAA,iBACAA,MAAA,wBACJA,QACAA,MAAA,0BACIA,MAAA,EAAAyvB,GAAA,iBAUZzvB,kCAbYA,MAAA,GAAAA,MAAA,IAAAA,MAAA,0BAIwBA,MAAA,GAAAA,MAAA,UAAA2H,EAAAoY,oDAYpC/f,MAAA,wDAMIA,MAAA,oBAAAA,MAAAogB,GAAA,MAAAzY,EAAA3H,QAAA,OAAAA,MAAA2H,EAAAynB,mBAA+B,KAAI,GAEtCpvB,gCAHGA,MAFA,YAAA2H,EAAAynB,mBAEApvB,CAFgC,sBAAA2H,EAAA+nB,6BAEhC1vB,CADoD,YAAAA,MAAA,IAAA2H,EAAAqO,6DAY5ChW,MAAA,eAIIA,MAAA,yBAAA2vB,EAAA3vB,MAAA8nB,GAAApgB,UAAAC,EAAA3H,MAAA,UAAAA,MAAS2H,EAAAioB,iBAAAD,GAA4B,GAErC3vB,MAAA,GACJA,oCADIA,cAAA,IAAA2vB,EAAA1nB,YAAA,gCAXRjI,MAFR,WAEQA,CAF4E,iBAE5EA,CADU,eAENA,MAAA,iBACAA,MAAA,wBACJA,QACAA,MAAA,0BACIA,MAAA,EAAA6vB,GAAA,iBAUZ7vB,kCAbYA,MAAA,GAAAA,MAAA,IAAAA,MAAA,0BAI2BA,MAAA,GAAAA,MAAA,UAAA2H,EAAAmoB,cC5HhD,MAAMC,GAA6B5pB;;;;;;MAMpC6pB;EASA,MAAOC,WACD9kB,MA4BRxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBA7BZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,kBACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChC9K,KAAM,CAAC,GAAIgL,KAAWC,UACtBnL,KAAM,CAAC,GAAIkL,KAAWC,UACtB9D,YAAa,GACbioB,mBAAoB,CAAC,GAAIpkB,KAAWC,UACpC4U,QAAS,GACTwP,WAAY,GACZzlB,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,iBAEtE7K,KAAAkgB,SAA8C,GAC9ClgB,KAAAiwB,YAAiD,GACjDjwB,KAAAuwB,oBAAyD,GAQzDvwB,KAAAurB,iBAAkB,EAETvrB,KAAAmW,iBAAmB,CAACjJ,MAAWsO,eAAgBtO,MAAWsjB,sBAC3DxwB,KAAAywB,iBAAmB,IAAIluB,IAS/B,CAEAM,WACI7C,KAAKyM,OACLzM,KAAKuB,YAAYmvB,eAAeC,8BAA8B1jB,QAAQ5N,UAAUwH,IAC5E7G,KAAKkgB,SAAWrZ,EAAK+pB,4BACrB5wB,KAAKiwB,YAAcppB,EAAKgqB,oBACxB7wB,KAAKuwB,oBAAsB1pB,EAAK0pB,oBAChCvwB,KAAK0L,eAAe+C,eACpBzO,KAAK6f,0BAA4BhZ,EAAK+pB,4BAA4B1pB,KAC9DD,GAAKA,EAAEhG,OAASjB,KAAKuO,QAAQuS,SAAS7f,MAE1CjB,KAAK6vB,6BAA+BhpB,EAAKgqB,oBAAoB3pB,KACzDD,GAAKA,EAAEhG,OAASjB,KAAKuO,QAAQ+hB,YAAYrvB,KAAI,GAIrDjB,KAAK8wB,eAAiB9wB,KAAKuB,YAAYiW,SAClC2V,mBACAvmB,UAAUC,GAAQA,EAAKwmB,eAE5BrtB,KAAK+wB,YAAc/wB,KAAKywB,iBAAiBztB,QACrCC,MAAU,EAAE+tB,EAAStE,MACjB,MAAQ5L,UAASwP,cAAetwB,KAAKuK,WAAWhL,MAChD,KAAKS,KAAK4f,iBAAoB5f,KAAKuvB,oBAAuBzO,GAAYwP,GAClE,SAAO7sB,YAAGf,GAEd,MAAMoL,EAAiC,CACnCmjB,gBAAiB,IAAKD,EAASE,YAAa,QAC5CxE,MAAOA,EAAMztB,IAAI8tB,KAAQS,iBAAkBT,EAAEtsB,GAAIyrB,SAAUa,EAAEb,YAC7DpL,WAASqB,OAA6BniB,KAAK4f,gBAAiBkB,GAC5DwP,cAAYnO,OAA6BniB,KAAKuvB,mBAAoBe,IAEtE,OAAOtwB,KAAKuB,YAAYmvB,eACnBS,mBAAmBrjB,GACnBxK,UAAU8pB,GAAUA,EAAO+D,mBAAkB,KACpD,EAINpuB,MACI/C,KAAKuK,WAAWZ,IAAI,CAAC,YAAapF,aAClCvE,KAAKuK,WAAWZ,IAAI,CAAC,eAAgBpF,cAEpCvB,QAAKiB,MAAUjE,KAAK2C,WACpBtD,UAAU,IAAOW,KAAKurB,iBAAkB,EAEjD,CAEAxmB,cACI/E,KAAKyN,SACT,CAEA2T,WAAWC,EAAiCC,GACxC,IAAKD,EAAa,CACd,MAAMxI,EAAc7Y,KAAKuK,WAAWZ,IAAI,CAAC,SACrCkP,GAAeA,EAAYpO,UAC3BoO,EAAYf,YAASyJ,MAAgBD,EAAW,KAExD,CACJ,CAEAtB,cAAcc,GACV9gB,KAAK6f,0BAA4BiB,EACjC9gB,KAAK4f,mBAAkB4B,OAAiCV,GACxD,MAAMW,EAAczhB,KAAKuK,WAAWZ,IAAI,WACpC8X,IACAA,EAAYC,kBACZD,EAAYE,uBAAuB,CAAEC,UAAU,IAC/CH,EAAYnS,WAAWtP,KAAK4f,kBAEhC5f,KAAKuK,WAAWsX,aACpB,CAEAkO,iBAAiBO,GACbtwB,KAAK6vB,6BAA+BS,EACpCtwB,KAAKuvB,sBAAqB/N,OAAiC8O,GAC3D,MAAM7O,EAAczhB,KAAKuK,WAAWZ,IAAI,cACpC8X,IACAA,EAAYC,kBACZD,EAAYE,uBAAuB,CAAEC,UAAU,IAC/CH,EAAYnS,WAAWtP,KAAKuvB,qBAEhCvvB,KAAKuK,WAAWsX,aACpB,CAEAvX,SACI,MAAMsV,EAAkB5f,KAAK4f,gBACvB2P,EAAqBvvB,KAAKuvB,oBACxBzO,UAASwP,cAAetwB,KAAKuK,WAAWhL,MAChD,KAAKqgB,GAAoB2P,GAAuBzO,GAAYwP,GACxD,OAEctwB,KAAKuK,WAAWhL,MAAlC,MACMuO,EAAQ,IACN9N,KAAKoxB,yBACL,CACIzwB,UAAW,GACXqR,UAAW,GACXvR,GAAI,GACJQ,KAAM,GACNF,KAAM,GACNqH,YAAa,GACbipB,uBAAwB,GACxBvQ,aAASpe,EACT4tB,gBAAY5tB,EACZkZ,aAAc,IAElB5b,KAAKuK,WACLvK,KAAKqP,cAETyR,WAASqB,OAA6BvC,EAAiBkB,GACvDwP,cAAYnO,OAA6BoN,EAAoBe,IAEjEtwB,KAAKuB,YAAYmvB,eAAeY,qBAAqBxjB,GAAOzO,UACxDwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,mBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,EAAKyqB,qBAAqB7wB,IAAK,CAAEmO,WAAY5O,KAAK6O,OAAO,EAE1FC,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,kBACX,EAGb,CAEA7D,OACI,MAAMkV,EAAkB5f,KAAK4f,gBACvB2P,EAAqBvvB,KAAKuvB,oBACxBzO,UAASwP,cAAetwB,KAAKuK,WAAWhL,OAC3CqgB,IAAoB2P,IAAuBzO,IAAYwP,MAG5DhsB,KAAc,CAACtE,KAAKgP,QAAShP,KAAKic,gBAC7BjZ,QACGW,KAAK,IAAC,EACNsL,KAAS,EAAEyhB,EAAgBrhB,MACLrP,KAAKuK,WAAWhL,MAAlC,MACMuO,EAAQ,IACN9N,KAAKoxB,yBACLV,EACA1wB,KAAKuK,WACL8E,GAEJyR,WAASqB,OAA6BvC,EAAiBkB,GACvDwP,cAAYnO,OAA6BoN,EAAoBe,IAEjE,OAAOtwB,KAAKuB,YAAYmvB,eAAea,qBAAqBzjB,EAAK,IAGxEzO,UACGwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,mBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAAY,EAEpCK,IAEI0iB,QAAQziB,MAAMD,GACd9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,kBACX,EAGjB,CAEAkjB,kBAAkBC,GACd1xB,KAAK2xB,eAAiBD,EACtB1xB,KAAKurB,iBAAkB,CAC3B,CAEAqG,eAAeF,GACX1xB,KAAK6xB,YAAcH,EACnB1xB,KAAKurB,iBAAkB,CAC3B,CAEAuG,qBACI,SACI9xB,KAAK6xB,aACL7xB,KAAK2xB,gBACL3xB,KAAK2xB,eAAe9yB,QACpBmB,KAAK4f,iBACL5f,KAAKuvB,mBAEb,CAEA1D,UACI7rB,KAAKywB,iBAAiB7wB,KAAK,CAACI,KAAK6xB,YAAa7xB,KAAK2xB,iBACnD3xB,KAAKurB,iBAAkB,CAC3B,CAMQ6F,yBACJV,EACAxO,EACA7S,GAEA,MAAMH,EAAYgT,EAAU3iB,MAY5B,MAAO,KAAE,EAXKmc,OAA0B,CACpCC,aAAc+U,EACd7U,cAAe3M,EACf4M,kBAAmB9b,KAAK6K,aACxBwE,eACA0M,mBAAoB,CAChB1M,eACAtO,KAAM2vB,EAAe3vB,MAAQ,GAC7BqH,YAAasoB,EAAetoB,aAAe,MAGhCioB,mBAAoBnhB,EAAUmhB,mBACrD,CAEUjhB,cAAcshB,EAAwCrhB,GAC5D,MAAM+M,KAAqBC,OAAgBqU,EAAgBrhB,GAC3DrP,KAAKuK,WAAW+E,WAAW,CACvBvO,KAAMqb,GAAoBrb,MAAQ,GAClCqH,YAAagU,GAAoBhU,aAAe,GAChDnH,KAAMyvB,EAAezvB,KACrBovB,mBAAoBK,EAAeW,uBACnCvQ,QAAS4P,EAAe5P,SAAW,GACnCwP,WAAYI,EAAeJ,YAAc,KAExCtwB,KAAK4f,kBACN5f,KAAK4f,gBAAkB8Q,EAAe5P,SAAW,CAC7C7f,KAAMyvB,EAAe5P,QAAQ7f,KAC7BmhB,KAAMsO,EAAe5P,QAAQsB,KAAKnjB,IAAIkD,QAAWA,EAAG5C,SAAO8iB,OAAkBlgB,EAAE5C,YAGlFS,KAAKuvB,qBACNvvB,KAAKuvB,mBAAqBmB,EAAeJ,YAAc,CACnDrvB,KAAMyvB,EAAeJ,YAAYrvB,KACjCmhB,KAAMsO,EAAeJ,YAAYlO,KAAKnjB,IAAIkD,QAAWA,EAAG5C,SAAO8iB,OAAkBlgB,EAAE5C,YAGvFS,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBACDxP,KAAK6K,aACL7K,KAAKuK,WAAWZ,IAAI,CAAC,iBACrB+mB,EACAtU,EAGZ,CAACnc,SAAAD,KAAA,mBAAAE,iBAhSQkwB,IAA6BjwB,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAA7BirB,GAA6B9vB,UAAA,iCAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,y4DAAAC,SAAA,SAAAnC,EAAAC,GAAA,KAAAD,EAAA,iBD/C9BlF,MAHZ,mBAGYA,CAHI,mBAGJA,CAFQ,gBAERA,CADS,gFAKLA,MAAA,8BAAAqF,GAAArF,aAAAwH,GAAAxH,MAAsBmF,EAAAgX,YAAA9W,GAAmB,GAEjDrF,UAEAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA4xB,GAAA,kCAUA5xB,MAAA,GAAA6xB,GAAA,yBAAA7xB,OAYAA,MAAA,qCAGZA,YAIQA,MAFR,YAEQA,CAFoC,4BAEpCA,CADoB,8BAEhBA,MAAA,GAAA8xB,GAAA,oCAGJ9xB,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAEfA,MAAA,wCAKIA,MAAA,iBAAAqF,GAAArF,aAAAwH,GAAAxH,MAASmF,EAAA8b,WAAA,MAAA9b,EAAAiJ,OAAA,KAAAjJ,EAAAiJ,OAAAtN,KAAAuE,EAAAid,OAAAljB,OAA6C,GAE9DY,UACAA,MAAA,uEAKIA,MAAA,yCAMJA,QACAA,MAAA,8EAMAA,MAAA,8CAIIA,MAAA,0CAKIA,MAAA,GAAA+xB,GAAA,iBAMhB/xB,cAEAA,MAAA,GAAAgyB,GAAA,mBAYAhyB,MAAA,0CAMAA,MAAA,wCAUIA,MATA,GAAAiyB,GAAA,gCASAjyB,CADC,GAAAkyB,GAAA,cAmBLlyB,QACAA,MAAA,wCAUIA,MATA,GAAAmyB,GAAA,gCASAnyB,CADC,GAAAoyB,GAAA,cAmBLpyB,QACAA,MAAA,wCACIA,MAAA,gCAEIA,MAAA,4BAAAqF,GAAArF,aAAAwH,GAAAxH,MAAoBmF,EAAAmsB,kBAAAjsB,GAAyB,GAChDrF,QACDA,MAAA,+BACIA,MAAA,yBAAAqF,GAAArF,aAAAwH,GAAAxH,MAAiBmF,EAAAssB,eAAApsB,GAAsB,GAE1CrF,QACDA,MAAA,6EAMIA,MAAA,qBAAAA,aAAAwH,GAAAxH,MAAWmF,EAAAumB,UAAS,GAKxC1rB,gDA1LgBA,MAAA,GAEAA,MAFA,WAAAA,MAAA,KAAAmF,EAAAyL,QAEA5Q,CAF2B,yBAAAA,MAAA,KAAAmF,EAAAqX,qBAE3Bxc,CADsD,sBAAAA,MAAA,KAAAmF,EAAA2W,gBAUrD9b,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,MAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAAqyB,GAyBpBryB,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAGIpK,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAOa7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,sBAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAKJhW,MAAA,GAEAA,MAFA,QAAAA,MAAA,qBAEAA,CAFmC,iBAAAA,MAAA,MAAAmF,EAAA6Q,mBAQ/BhW,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAMJhW,MAAA,GACAA,MADA,YAAAA,MAAA,MAAAmF,EAAA6Q,kBACAhW,CADgD,QAAAA,MAAA,6BAIhDA,MAAA,GAAAA,MAAA,QAAAA,MAAA,uCAMIA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAE4BhW,MAAA,GAAAA,MAAA,UAAAmF,EAAAirB,qBAUvCpwB,cAAA,OAAAmF,EAAAuF,aAAAhM,QAYDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,YAIbpK,cAAA,QAAAA,MAAA,gDAGDA,MAAA,GAAAA,MAAA,OAAAmF,EAAAsa,iBAAAta,EAAAua,2BAOC1f,cAAA,QAAAmF,EAAAsa,kBAAAta,EAAAua,2BAmBA1f,cAAA,QAAAA,MAAA,uCAGDA,MAAA,GAAAA,MAAA,OAAAmF,EAAAiqB,oBAAAjqB,EAAAuqB,8BAOC1vB,cAAA,QAAAmF,EAAAiqB,qBAAAjqB,EAAAuqB,8BAmBA1vB,cAAA,QAAAA,MAAA,wCAWFA,MAAA,GAGAA,MAHA,sBAAAsyB,EAAAtyB,MAAA,MAAAmF,EAAAwrB,iBAAA,KAAA2B,EAAAhH,aAGAtrB,CAHuD,UAAAmF,EAAAwsB,sBAAAxsB,EAAAimB,iBAAAjmB,EAAAiF,WAAAyN,MAGvD7X,CAFuE,kBAAAmF,EAAAimB,gBAEvEprB,CADmC,aAAAA,MAAA,MAAAmF,EAAAyrB,+OEzKhD,MAAM2B,MAAkCxhB,OAE7C,CACEC,SAAU,uBACVC,mBAAoBC,GAAmBA,EAAgBtN,SAASmJ,MAAWylB,sBAC3EphB,YAAa1E,GAAQA,EAAK9L,KAC1ByQ,WAAYA,CAACjQ,EAAakQ,IACtBlQ,EAAYmvB,eAAekC,sBAAsBnhB,GAAKzO,QAAK/D,KAAI0S,GAAOA,EAAIihB,0BAoBrEC,IAjB8BvsB;;;;;;;EASEA;;;;;;;GAQhCusB,EAA2CtP,OAEtD,CACEpS,SAAU,uBACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAWsjB,uBACpCnf,EAAgBtN,SAASmJ,MAAWsO,gBACxCjK,YAAa1E,GAAQA,EAAK9L,KAC1ByiB,oBAAqBA,CAACjiB,EAAauxB,EAAmBpP,IAClDA,EAAWzkB,IAAIgM,GACX1J,EACKoiB,OAAOoP,MAAwC,CAC5CjlB,MAAO,CACH7C,YACA6nB,uBAGP9vB,QAAK/D,KAAI0S,GAAOA,EAAIqhB,qCAIxBC,MAA6ClP,OAExD,CACE5S,SAAU,uBACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAWylB,uBACpCthB,EAAgBtN,SAASmJ,MAAW4P,gBACxCvL,YAAa1E,GAAQA,EAAK9L,KAC1BijB,sBAAuBA,CAACziB,EAAauxB,EAAmB7nB,IACpD1J,EACKoiB,OAAOuP,MAA0C,CAC9CplB,MAAO,CACH7C,YACA6nB,uBAGP9vB,QAAK/D,KAAI0S,GAAOA,EAAIwhB,mJCnErBhzB,MAAA,UAKIA,MAAA,iBACAA,MAAA,wBACJA,eAJIA,MAAA,aAAAA,MAAA,EAAAyR,KAGAzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,0EA4BJA,MAAA,uBAAAA,MAAA,IAAAizB,EAAA3yB,GAAA,gCASAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAkzB,EAAA1yB,UAAA,yCASAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAmzB,EAAAthB,UAAA,yCAMK7R,MADL,SACKA,CAAA,UAAMA,MAAA,GAAyBA,QAChCA,MAAA,iBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAA8R,GAAAshB,EAAA9yB,KACbN,MAAA,GAAAA,MAAAozB,EAAAxyB,gCAOXZ,MAAA,uBAAAA,MAAA,IAAAqzB,EAAAvyB,KAAA,+BASAd,MAAA,uBAAAA,MAAA,IAAAszB,EAAArrB,YAAA,+BAKAjI,MAAA,uBAAAA,MAAA,IAAAuzB,EAAArC,uBAAA,+BAGRlxB,MAAA,uEAGIA,MADA,cAAAoS,EACApS,CAD2B,QAAAqS,EAAAC,QC1F5B,MAAMkhB,GAA2BrtB;;;;;;;;;;;;;;;;;;EA0BlC,MAAOstB,WACDhhB,MA8CR9S,cACI+L,QA5CJ7L,KAAA6S,gBAAkB,uBACT7S,KAAA6K,aAAe7K,KAAK8L,qBAAqB,kBACzC9L,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAC,iBACAC,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBH,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBH,UAAU,CACPnS,KAAM,cACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,sBACT+E,YAAa,gBAEhBH,UAAU,CACPnS,KAAM,qBACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,gCACT+E,YAAa,2BAEhBC,sBAAsBtT,KAAK6K,cAC3B0I,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBC,YAAY,YAAa,QACzBC,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,SAChB2S,QAAQ,CAAE3S,KAAM,SAChB2S,QAAQ,CAAE3S,KAAM,gBAChB2S,QAAQ,CAAE3S,KAAM,2BAChB4S,oBAAoB3T,KAAK6K,cACzB0I,eAAevT,KAAK6O,OAIrBhD,MAAM+H,UAAU,CACZC,SAAUggB,MACV9f,SAAUlN,GAAQA,EAAKitB,gBACvB7f,aAAcA,CAACC,EAAMvQ,MACjBgD,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,CACJ9C,KAAM,CACF4T,SAAU3U,KAAKoU,kBAAkB7U,UAElCS,KAAK8S,QAAQ+B,qBAEpBC,KAAM9U,KAAKyS,MAAMsC,qBAGzBV,qBAAsB,CAACrU,KAAK8S,QAAQvO,aAAcvE,KAAKyS,MAAMlO,eAErE,CAACtE,SAAAD,KAAA,mBAAAE,iBAnEQ0zB,GAA2B,EAAA3zB,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAA3ByuB,GAA2BtzB,UAAA,+BAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,s7BAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,ID5B5BlF,MAHZ,mBAGYA,CAHI,mBAGJA,CAFQ,gBAERA,CADS,+DAILA,MAAA,8BAAAqF,GAAA,OAAsBF,EAAAgX,YAAA9W,EAAmB,GAEjDrF,UACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA4zB,GAAA,WAQA5zB,MAAA,oCAGZA,YACAA,MAAA,iGASIA,MAFA,sBAAAqF,GAAA,OAAcF,EAAA2P,cAAAzP,EAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAA,OACdF,EAAA4P,gBAAA1P,EAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAA,OACtBF,EAAA6P,kBAAA3P,EAAyB,GAOjDrF,MALA,4BAKAA,CADE,6CAKFA,MAAA,6CACIA,MAAA,GAAA6zB,GAAA,mBAGJ7zB,QACAA,MAAA,6CAKIA,MAAA,GAAA8zB,GAAA,mBAGJ9zB,QACAA,MAAA,6CAKIA,MAAA,GAAA+zB,GAAA,mBAGJ/zB,QACAA,MAAA,6CACIA,MAAA,GAAAg0B,GAAA,mBAMJh0B,QACAA,MAAA,8CACIA,MAAA,GAAAi0B,GAAA,mBAGJj0B,QACAA,MAAA,8CAKIA,MAAA,GAAAk0B,GAAA,mBAGJl0B,QACAA,MAAA,8CACIA,MAAA,GAAAm0B,GAAA,mBAGJn0B,QACAA,MAAA,GAAAo0B,GAAA,sCAKJp0B,eA9FgBA,MAAA,GACAA,MADA,yBAAAA,MAAA,KAAAmF,EAAAqX,qBACAxc,CADsD,sBAAAA,MAAA,KAAAmF,EAAA+Y,mBASrDle,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KAWbV,MAAA,GAKAA,MALA,KAAAmF,EAAAuN,gBAKA1S,CALsB,QAAAA,MAAA,MAAAmF,EAAAqQ,QAKtBxV,CAJwB,eAAAA,MAAA,MAAAmF,EAAAsQ,eAIxBzV,CAHsC,aAAAA,MAAA,MAAAmF,EAAAV,aAGtCzE,CAFkC,cAAAA,MAAA,MAAAmF,EAAAuQ,cAElC1V,CADoC,UAAAmF,EAAAwN,SAQhC3S,MAAA,GACAA,MADA,gBAAAmF,EACAnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA8O,kBACAjU,CADuC,wBAAAA,MAAA,iCAG3BA,MAAA,GAA4CA,MAA5C,UAAAA,MAAA,mBAA4CA,CAAT,sBAM/CA,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAOZxJ,MAAA,GAAmEA,MAAnE,UAAAA,MAAA,qBAAmEA,CAA9B,cAA8BA,CAAD,OAAAmF,EAAAmN,MAAA9I,IAAA,SAQlExJ,MAAA,GAAgDA,MAAhD,UAAAA,MAAA,qBAAgDA,CAAX,OAAAmF,EAAAmN,MAAA9I,IAAA,SAMjDxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,4BAEAA,CAF4C,OAAAmF,EAAAmN,MAAA9I,IAAA,eAE5CxJ,CADiC,sBAOrBA,MAAA,GAAgFA,MAAhF,UAAAA,MAAA,sCAAgFA,CAA1B,OAAAmF,EAAAmN,MAAA9I,IAAA,2BAM1CxJ,MAAA,GAAAA,MAAA,UAAAmF,EAAAuF,2MExFpB1K,MAAA,eAGIA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAmO,EAAA3V,QAAA,OAAAA,MAAS2V,EAAAxL,SAAQ,GAGjBnK,MAAA,wBACJA,gCAHIA,MAAA,WAAA2V,EAAAvL,WAAAC,SAAAsL,EAAAvL,WAAAE,UAEAtK,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAEIA,MAAA,mBAAAA,MAAA6V,GAAA,MAAAF,EAAA3V,MAAA,UAAAA,MAAS2V,EAAApL,OAAM,GAIfvK,MAAA,wBACJA,iCAJIA,MAAA,WAAA2V,EAAAvL,WAAAC,SAAAsL,EAAAvL,WAAAE,UAGAtK,cAAA,IAAAA,MAAA,iDANJA,MAAA,EAAAq0B,GAAA,sBAIKr0B,MAAA,oEAaTA,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAA+V,8BA2B1B/V,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2V,EAAAjL,aACA1K,CAD6B,wBAAA2V,EAAAvL,WAAAZ,IAAA,kBCjDjD,MAAM8qB,GAAiCnuB;;;;;;;;EAU1BouB,GAA4BpuB;;;;;;MAMnCmuB;EAGOE,GAAwBruB;;;;;;MAM/BmuB;EAGOG,GAAwBtuB;;;;;;MAM/BmuB;EASA,MAAOI,WACDvpB,MAURxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBAXZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,iBACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChChL,KAAM,CAAC,GAAIkL,KAAWC,UACtB9D,YAAa,CAAC,IACdyC,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,gBAUtE,CAEAhI,WACI7C,KAAKyM,MACT,CAEA1H,cACI/E,KAAKyN,SACT,CAEAnD,SACI,IAAKtK,KAAKuK,WAAWwN,MACjB,OAEJ,MAAQhX,OAAMqH,cAAayC,gBAAiB7K,KAAKuK,WAAWhL,MAC5D,IAAKwB,EACD,OAEJ,MAAM+M,EAAQ,CACV/M,OACAqH,cACAyC,gBAEJ7K,KAAKuB,YAAYoiB,OAAOmR,MAA6B,CAAEhnB,UAASzO,UAC5DwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,kBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,EAAKkuB,oBAAoBt0B,IAAK,CAAEmO,WAAY5O,KAAK6O,OAAO,EAEzFC,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,iBACX,EAGb,CAEA7D,OACI,IAAK1K,KAAKuK,WAAWwN,MACjB,OAEJ,MAAM7I,EAAYlP,KAAKuK,WAAWhL,MAClCS,KAAKgP,QACAhM,QACGW,KAAK,IAAC,EACNsL,KAAS+lB,IACL,MAAMlnB,EAAQ,CACVrN,GAAIu0B,EAAQv0B,GACZM,KAAMmO,EAAUnO,KAChBqH,YAAa8G,EAAU9G,YACvByC,aAAcqE,EAAUrE,cAE5B,OAAO7K,KAAKuB,YAAYoiB,OAAOsR,MAA6B,CAAEnnB,SAAO,IAG5EzO,UACGwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,kBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAAY,EAEpCK,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,iBACX,EAGjB,CAKUa,cAAcb,GACpBvO,KAAKuK,WAAW+E,WAAW,CACvBvO,KAAMwN,EAAOxN,KACbqH,YAAamG,EAAOnG,cAEpBpI,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBAAyBxP,KAAK6K,aAAc7K,KAAKuK,WAAWZ,IAAI,gBAAiB4E,EAE9F,CAACtO,SAAAD,KAAA,mBAAAE,iBAvGQ20B,IAA4B10B,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAA5B0vB,GAA4Bv0B,UAAA,gCAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,4tBAAAC,SAAA,SAAAnC,EAAAC,MAAA,EAAAD,ID5DrClF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBAEAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA+0B,GAAA,iCAQA/0B,MAAA,EAAAg1B,GAAA,yBAAAh1B,OAUAA,MAAA,oCAGZA,YAIQA,MAFR,YAEQA,CAFoC,4BAEpCA,CADoB,8BAEhBA,MAAA,GAAAi1B,GAAA,oCAGJj1B,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAEfA,MAAA,wCAMJA,QACAA,MAAA,mEAMIA,MAAA,uDAMZA,YACAA,MAAA,GAAAk1B,GAAA,mBAWAl1B,MAAA,0CAOZA,mCAtEiBA,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,KAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAAgqB,GAqBpBhqB,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAGIpK,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAOa7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,sBAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,8BAKJA,MAAA,GAEAA,MAFA,QAAAA,MAAA,4BAEAA,CAF0C,SAAAA,MAAA,GAAAU,GAAAV,MAAA,sCAMtCA,MAAA,GAAAA,MAAA,YAAAA,MAAA,8BAOXA,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAWDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,2KE1DJjE;;;;;;;EASWA;;;;;;;EASEA;;;;;;;EAlB5C,MA2BagvB,MAAiCpkB,OAE5C,CACEC,SAAU,sBACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAWqoB,sBACpClkB,EAAgBtN,SAASmJ,MAAWsoB,eACxCjkB,YAAa1E,GAAQA,EAAK9L,KAC1ByQ,WAAYA,CAACjQ,EAAakQ,IACtBlQ,EACKoiB,OAAO8R,MAA8B,CAClC3nB,MAAO2D,EAAIxS,IAAIwB,KAASA,UAE3BuC,QAAK/D,KAAI0S,GAAOA,EAAI+jB,uBAC7BxS,gBAAiBC,GAAYA,EAASiK,SAAWuI,MAAeC,cAGvDC,MAA0CtS,OAErD,CACEpS,SAAU,sBACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAW4oB,gBACpCzkB,EAAgBtN,SAASmJ,MAAW6oB,qBACxCxkB,YAAa1E,GAAQA,EAAK9L,KAC1ByiB,oBAAqBA,CAACjiB,EAAay0B,EAAkBtS,IACjDA,EAAWzkB,IAAIgM,GACX1J,EACKoiB,OAAOsS,MAAuC,CAC3CnoB,MAAO,CACH7C,YACA+qB,sBAGPhzB,QAAK/D,KAAI0S,GAAOA,EAAIukB,mCAIxBC,MAA4CpS,OAEvD,CACE5S,SAAU,sBACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAWsoB,gBACpCnkB,EAAgBtN,SAASmJ,MAAWqoB,qBACxChkB,YAAa1E,GAAQA,EAAK9L,KAC1BijB,sBAAuBA,CAACziB,EAAay0B,EAAkB/qB,IACnD1J,EACKoiB,OAAOyS,MAAyC,CAC7CtoB,MAAO,CACH7C,YACA+qB,sBAGPhzB,QAAK/D,KAAI0S,GAAOA,EAAI0kB,gIC3FrBl2B,MAAA,UAKIA,MAAA,iBACAA,MAAA,wBACJA,eAJIA,MAAA,aAAAA,MAAA,EAAAyR,KAGAzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,wEA6BJA,MAAA,uBAAAA,MAAA,IAAAm2B,EAAA71B,GAAA,gCASAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAo2B,EAAA51B,UAAA,yCASAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAq2B,EAAAxkB,UAAA,yCAMK7R,MADL,SACKA,CAAA,UAAMA,MAAA,GAAwBA,QAC9BA,MAAA,iBACHA,6BAHsBA,MAAA,aAAAA,MAAA,EAAA8R,GAAAwkB,EAAAh2B,KACbN,MAAA,GAAAA,MAAAs2B,EAAA11B,gCAOXZ,MAAA,gCAAyBA,MAAA,YAAAu2B,EAAAtuB,YAAAjI,iCAGjCA,MAAA,uEAGIA,MADA,cAAAw2B,EACAx2B,CADqB,QAAAqa,EAAA/H,QCvEtB,MAAMmkB,GAA0BtwB;;;;;;;;;;;;;;;;EAwBjC,MAAOuwB,WACDjkB,MAoCR9S,cACI+L,QAlCJ7L,KAAA6S,gBAAkB,sBACT7S,KAAA6K,aAAe7K,KAAK8L,qBAAqB,iBACzC9L,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAC,iBACA6jB,WAAW,CACR,CACI/1B,KAAM,UACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,kBACT+E,YAAa,QAEjB,CACItS,KAAM,MACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,iBAGpBC,sBAAsBtT,KAAK6K,cAC3B0I,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBujB,SAAS,CACN,CAAEh2B,KAAM,MACR,CAAEA,KAAM,aACR,CAAEA,KAAM,aACR,CAAEA,KAAM,QACR,CAAEA,KAAM,iBAEX4S,oBAAoB3T,KAAK6K,cACzB0I,eAAevT,KAAK6O,OAIrB7O,KAAK4T,UAAU,CACXC,SAAUmjB,MACVjjB,SAAUlN,GAAQA,EAAKowB,eACvBhjB,aAAcA,CAACC,EAAMvQ,MACjBgD,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,CACJ9C,KAAM,CACF4T,SAAU3U,KAAKoU,kBAAkB7U,UAElCS,KAAK8S,QAAQ+B,qBAEpBC,KAAM9U,KAAKyS,MAAMsC,qBAGzBV,qBAAsB,CAACrU,KAAKyS,MAAMlO,aAAcvE,KAAK8S,QAAQvO,eAErE,CAACtE,SAAAD,KAAA,mBAAAE,iBAzDQ22B,GAA0B,EAAA52B,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAA1B0xB,GAA0Bv2B,UAAA,8BAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,uzBAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,ID5BnClF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA+2B,GAAA,WAQA/2B,MAAA,oCAGZA,YACAA,MAAA,8FAUIA,MAFA,sBAAAqF,GAAA,OAAcF,EAAA2P,cAAAzP,EAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAA,OACdF,EAAA4P,gBAAA1P,EAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAA,OACtBF,EAAA6P,kBAAA3P,EAAyB,GAOjDrF,MALA,4BAKAA,CADE,6CAKFA,MAAA,6CACIA,MAAA,GAAAg3B,GAAA,mBAGJh3B,QACAA,MAAA,6CAKIA,MAAA,GAAAi3B,GAAA,mBAGJj3B,QACAA,MAAA,6CAKIA,MAAA,GAAAk3B,GAAA,mBAGJl3B,QACAA,MAAA,6CACIA,MAAA,GAAAm3B,GAAA,mBAMJn3B,QACAA,MAAA,6CACIA,MAAA,GAAAo3B,GAAA,mBAGJp3B,QACAA,MAAA,GAAAq3B,GAAA,sCAIJr3B,eAvEiBA,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KAYbV,MAAA,GAKAA,MALA,KAAAmF,EAAAuN,gBAKA1S,CALsB,QAAAA,MAAA,KAAAmF,EAAAqQ,QAKtBxV,CAJwB,eAAAA,MAAA,KAAAmF,EAAAsQ,eAIxBzV,CAHsC,aAAAA,MAAA,MAAAmF,EAAAV,aAGtCzE,CAFkC,cAAAA,MAAA,MAAAmF,EAAAuQ,cAElC1V,CADoC,UAAAmF,EAAAwN,SAQhC3S,MAAA,GACAA,MADA,gBAAAmF,EACAnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA8O,kBACAjU,CADuC,wBAAAA,MAAA,iCAG3BA,MAAA,GAAqEA,MAArE,UAAAA,MAAA,mBAAqEA,CAAlC,qBAAkCA,CAAD,OAAAmF,EAAAmN,MAAA9I,IAAA,OAMhFxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAOZxJ,MAAA,GAAmEA,MAAnE,UAAAA,MAAA,qBAAmEA,CAA9B,cAA8BA,CAAD,OAAAmF,EAAAmN,MAAA9I,IAAA,SAQlExJ,MAAA,GAA8DA,MAA9D,UAAAA,MAAA,4BAA8DA,CAAlB,OAAAmF,EAAAmN,MAAA9I,IAAA,gBAMtCxJ,MAAA,GAAAA,MAAA,UAAAmF,EAAAuF,+NErEd1K,MAAA,eAGIA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAmO,EAAA3V,QAAA,OAAAA,MAAS2V,EAAAxL,SAAQ,GAGjBnK,MAAA,wBACJA,gCAHIA,MAAA,YAAA2V,EAAAC,qBAEA5V,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAEIA,MAAA,mBAAAA,MAAA6V,GAAA,MAAAF,EAAA3V,MAAA,UAAAA,MAAS2V,EAAApL,OAAM,GAIfvK,MAAA,wBACJA,iCAJIA,MAAA,YAAA2V,EAAAC,qBAGA5V,cAAA,IAAAA,MAAA,oDANJA,MAAA,EAAAs3B,GAAA,sCAIKt3B,MAAA,mBAAA2V,EAAAK,6CAYThW,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAA+V,8BA2B1B/V,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2V,EAAAjL,aACA1K,CAD6B,wBAAA2V,EAAAvL,WAAAZ,IAAA,kBC/C1C,MAAM+tB,GAA0BpxB;;;;;;MAMjCqxB;EASA,MAAOC,WACDtsB,MAWRxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBAZZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,eACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChChL,KAAM,CAAC,GAAIkL,KAAWC,UACtB2rB,WAAW,EACXhtB,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,iBAE7D7K,KAAAmW,iBAAmB,CAACjJ,MAAWsO,eAAgBtO,MAAW4qB,kBASnE,CAEAj1B,WACI7C,KAAKyM,MACT,CAEA1H,cACI/E,KAAKyN,SACT,CAEAsI,oBACI,OAAO/V,KAAKuK,WAAWwN,OAAS/X,KAAKuK,WAAWyN,KACpD,CAEA1N,SACI,IAAKtK,KAAKuK,WAAWwN,MACjB,OAEJ,MAAM7I,EAAYlP,KAAKuK,WAAWhL,MAC5BuO,EAAQ,CACV/M,KAAMmO,EAAUnO,KAChB82B,UAAW3oB,EAAU2oB,UACrBhtB,aAAcqE,EAAUrE,cAE5B7K,KAAKuB,YAAYiW,SAASugB,kBAAkBjqB,GAAOzO,UAC/CwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,gBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,EAAKkxB,kBAAkBt3B,IAAK,CAAEmO,WAAY5O,KAAK6O,OAAO,EAEvFC,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,eACX,EAGb,CAEA7D,OACI,IAAK1K,KAAKuK,WAAWwN,MACjB,OAEJ,MAAM7I,EAAYlP,KAAKuK,WAAWhL,MAClCS,KAAKgP,QACAhM,QACGW,KAAK,IAAC,EACNsL,KAAS+oB,IACL,MAAMlqB,EAAQ,CACVrN,GAAIu3B,EAAYv3B,GAChBM,KAAMmO,EAAUnO,KAChB82B,UAAW3oB,EAAU2oB,UACrBhtB,aAAcqE,EAAUrE,cAE5B,OAAO7K,KAAKuB,YAAYiW,SAASygB,kBAAkBnqB,EAAK,IAG/DzO,UACGwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,gBAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAAY,EAEpCK,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,eACX,EAGjB,CAKUa,cAAcb,EAA6Bc,GACjDrP,KAAKuK,WAAW+E,WAAW,CACvBvO,KAAMwN,EAAOxN,KACb82B,UAAWtpB,EAAOspB,YAElB73B,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBAAyBxP,KAAK6K,aAAc7K,KAAKuK,WAAWZ,IAAI,gBAAiB4E,EAE9F,CAACtO,SAAAD,KAAA,mBAAAE,iBAzGQ03B,IAA0Bz3B,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAA1ByyB,GAA0Bt3B,UAAA,qBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,kvBAAAC,SAAA,SAAAnC,EAAAC,MAAA,EAAAD,IDjCnClF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBAEAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA+3B,GAAA,iCAQA/3B,MAAA,EAAAg4B,GAAA,yBAAAh4B,OAUAA,MAAA,oCAGZA,YAGQA,MAFR,YAEQA,CAFoC,4BAEpCA,CADoB,8BAEhBA,MAAA,GAAAi4B,GAAA,oCAGJj4B,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAEfA,MAAA,wCAMJA,QACAA,MAAA,6CACIA,MAAA,yBACIA,MAAA,wCAUhBA,cACAA,MAAA,GAAAk4B,GAAA,mBAWAl4B,MAAA,0CAOZA,mCArEiBA,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,KAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAAgqB,GAoBpBhqB,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAGIpK,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAOa7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,sBAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAGQhW,MAAA,GAAAA,MAAA,QAAAA,MAAA,sCAMJA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBASfhW,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAWDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,2LErE5B,MAAM+tB,MAAgCpnB,OAE3C,CACEC,SAAU,oBACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAW4P,iBACpCzL,EAAgBtN,SAASmJ,MAAWqrB,mBACxChnB,YAAa1E,GAAQA,EAAK9L,KAC1ByQ,WAAYA,CAACjQ,EAAakQ,IACtBlQ,EAAYiW,SAASghB,oBAAoB/mB,GAAKzO,QAAK/D,KAAI0S,GAAOA,EAAI6mB,mICP9Dr4B,MAAA,UAKIA,MAAA,iBACAA,MAAA,wBACJA,eAJIA,MAAA,aAAAA,MAAA,EAAAyR,KAGAzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,uEA4BJA,MAAA,uBAAAA,MAAA,IAAAs4B,EAAAh4B,GAAA,gCASAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAu4B,EAAA/3B,UAAA,yCASAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAw4B,EAAA3mB,UAAA,yCAMK7R,MADL,SACKA,CAAA,UAAMA,MAAA,GAAsBA,QAC7BA,MAAA,iBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAA8R,GAAA2mB,EAAAn4B,KACbN,MAAA,GAAAA,MAAAy4B,EAAA73B,8BAOXZ,MAAA,cAAwCA,MAAA,wBAA+CA,eAA/CA,oBAAA,8DAAxCA,MAAA,EAAA04B,GAAA,uCAAW14B,MAAA,OAAA24B,EAAAjB,qCAGnB13B,MAAA,uEAAkGA,MAA5B,cAAAoa,EAA4Bpa,CAAD,QAAAqa,EAAA/H,QChE9F,MAAMsmB,GAAwBzyB;;;;;;;;;MAS/BqxB;EASA,MAAOqB,WAAiCpmB,MAyB1C9S,cACI+L,QAtBJ7L,KAAA6S,gBAAkB,oBACT7S,KAAA6K,aAAe7K,KAAKuN,oBAAoB0rB,mBAAmB,eAC3Dj5B,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAE,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBC,sBAAsBtT,KAAK6K,cAC3B0I,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBC,YAAY,YAAa,QACzBC,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,SAChB4S,oBAAoB3T,KAAK6K,cACzB0I,eAAevT,KAAK6O,OAIrBhD,MAAM+H,UAAU,CACZC,SAAUqlB,MACVnlB,SAAUlN,GAAQA,EAAKsyB,cACvBllB,aAAcA,CAACC,EAAMvQ,MACjBgD,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,CACJ9C,KAAM,CACF4T,SAAU3U,KAAKoU,kBAAkB7U,UAElCS,KAAK8S,QAAQ+B,qBAEpBC,KAAM9U,KAAKyS,MAAMsC,qBAGzBV,qBAAsB,CAACrU,KAAK8S,QAAQvO,aAAcvE,KAAKyS,MAAMlO,eAErE,CAACtE,SAAAD,KAAA,mBAAAE,iBA7CQ84B,GAAwB,EAAA/4B,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAxB6zB,GAAwB14B,UAAA,mBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,kxBAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,ID1BjClF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAAi5B,GAAA,WAQAj5B,MAAA,oCAGZA,YACAA,MAAA,8FASIA,MAFA,sBAAAqF,GAAA,OAAcF,EAAA2P,cAAAzP,EAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAA,OACdF,EAAA4P,gBAAA1P,EAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAA,OACtBF,EAAA6P,kBAAA3P,EAAyB,GAOjDrF,MALA,4BAKAA,CADE,6CAKFA,MAAA,6CACIA,MAAA,GAAAk5B,GAAA,mBAGJl5B,QACAA,MAAA,6CAKIA,MAAA,GAAAm5B,GAAA,mBAGJn5B,QACAA,MAAA,6CAKIA,MAAA,GAAAo5B,GAAA,mBAGJp5B,QACAA,MAAA,6CACIA,MAAA,GAAAq5B,GAAA,mBAMJr5B,QACAA,MAAA,6CACIA,MAAA,GAAAs5B,GAAA,mBAGJt5B,QACAA,MAAA,GAAAu5B,GAAA,sCACJv5B,eAnEiBA,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KAWbV,MAAA,GAKAA,MALA,KAAAmF,EAAAuN,gBAKA1S,CALsB,QAAAA,MAAA,KAAAmF,EAAAqQ,QAKtBxV,CAJwB,eAAAA,MAAA,KAAAmF,EAAAsQ,eAIxBzV,CAHsC,aAAAA,MAAA,MAAAmF,EAAAV,aAGtCzE,CAFkC,cAAAA,MAAA,MAAAmF,EAAAuQ,cAElC1V,CADoC,UAAAmF,EAAAwN,SAQhC3S,MAAA,GACAA,MADA,gBAAAmF,EACAnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA8O,kBACAjU,CADuC,wBAAAA,MAAA,iCAG3BA,MAAA,GAA4CA,MAA5C,UAAAA,MAAA,mBAA4CA,CAAT,sBAM/CA,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAOZxJ,MAAA,GAAmEA,MAAnE,UAAAA,MAAA,qBAAmEA,CAA9B,cAA8BA,CAAD,OAAAmF,EAAAmN,MAAA9I,IAAA,SAQlExJ,MAAA,GAAAA,MAAA,UAAAA,MAAA,sCAKqCA,MAAA,GAAAA,MAAA,UAAAmF,EAAAuF,oMEnE7C1K,MAAA,eAGIA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAmO,EAAA3V,QAAA,OAAAA,MAAS2V,EAAAxL,SAAQ,GAGjBnK,MAAA,wBACJA,gCAHIA,MAAA,YAAA2V,EAAAC,qBAEA5V,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAEIA,MAAA,mBAAAA,MAAA6V,GAAA,MAAAF,EAAA3V,MAAA,UAAAA,MAAS2V,EAAApL,OAAM,GAIfvK,MAAA,wBACJA,iCAJIA,MAAA,YAAA2V,EAAAC,qBAGA5V,cAAA,IAAAA,MAAA,oDANJA,MAAA,EAAAw5B,GAAA,sCAIKx5B,MAAA,mBAAA2V,EAAAK,6CA0BThW,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAA+V,8BA+BV/V,MAAA,eAIIA,MAAA,GACJA,kCAHIA,MAAA,QAAA24B,EAAAr4B,IAEAN,cAAA,IAAA24B,EAAA/3B,KAAA,gCAcpBZ,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2V,EAAAjL,aACA1K,CAD6B,wBAAA2V,EAAAvL,WAAAZ,IAAA,kBChF1C,MAAMiwB,GAAsBtzB;;;;;;MAM7BuzB;EASA,MAAOC,WACDxuB,MAiBRxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBAlBZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,WACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChChL,KAAM,CAAC,GAAIkL,KAAWC,UACtB7K,QAAS,EAAC,GACV9B,MAAO,CAAC,EAAG0M,KAAWC,UACtB6tB,cAAe,CAAC,GAAI9tB,KAAWC,UAC/B7I,OAAQ,CAAC,GAAI4I,KAAWC,UACxB8tB,gBAAiB,CAAC,IAClBnvB,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,iBAI7D7K,KAAAmW,iBAAmB,CAACjJ,MAAWsO,eAAgBtO,MAAW+sB,cASnE,CAEAp3B,WACI7C,KAAKyM,OACLzM,KAAKk6B,eAAiBl6B,KAAKuB,YAAYiW,SAClC2iB,iBAAiB,CAAEx2B,KAAM,MACzBL,UAAUuD,GAAQA,EAAKsyB,cAAcpyB,MAC9C,CAEAhC,cACI/E,KAAKyN,SACT,CAEAsI,oBACI,OAAO/V,KAAKuK,WAAWwN,OAAS/X,KAAKuK,WAAWyN,KACpD,CAEA1N,SACI,IAAKtK,KAAKuK,WAAWwN,MACjB,OAEJ,MAAQhX,OAAMM,UAAS9B,QAAOw6B,gBAAe12B,SAAQ22B,kBAAiBnvB,gBAClE7K,KAAKuK,WAAWhL,MACpB,IAAKwB,GAAmB,MAAXM,GAA4B,MAAT9B,IAAkBw6B,IAAkB12B,EAChE,OAEJ,MAAM6L,EAAYlP,KAAKuK,WAAWhL,MAC5BuO,EAAQ,CACV/M,OACAM,UACA9B,QACA66B,WAAYL,EACZ12B,SACA22B,gBAAiB9qB,EAAU8qB,gBAC3BnvB,aAAcqE,EAAUrE,cAE5B7K,KAAKuB,YAAYiW,SAAS6iB,cAAcvsB,GAAOzO,UAC3CwH,KACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,YAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,GAAKwzB,cAAc55B,IAAK,CAAEmO,WAAY5O,KAAK6O,OAAO,EAEnFC,KACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,WACX,EAGb,CAEA7D,OACI,IAAK1K,KAAKuK,WAAWwN,MACjB,OAEJ,MAAM7I,EAAYlP,KAAKuK,WAAWhL,MAClCS,KAAKgP,QACAhM,QACGW,KAAK,IAAC,EACNsL,KAAS+lB,IACL,MAAMlnB,EAAQ,CACVrN,GAAIu0B,EAAQv0B,GACZM,KAAMmO,EAAUnO,KAChBM,QAAS6N,EAAU7N,QACnB9B,MAAO2P,EAAU3P,MACjB66B,WAAYlrB,EAAU6qB,cACtB12B,OAAQ6L,EAAU7L,OAClB22B,gBAAiB9qB,EAAU8qB,gBAC3BnvB,aAAcqE,EAAUrE,cAE5B,OAAO7K,KAAKuB,YAAYiW,SAAS8iB,cAAcxsB,EAAK,IAG3DzO,UACGwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,YAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAAY,EAEpCK,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,WACX,EAGjB,CAKUa,cAAcb,EAAyBc,GAC7CrP,KAAKuK,WAAW+E,WAAW,CACvBvO,KAAMwN,EAAOxN,KACbM,QAASkN,EAAOlN,QAChB9B,MAAOgP,EAAOhP,MACdw6B,cAAexrB,EAAOgsB,SAAWhsB,EAAOgsB,SAAS95B,GAAK,GACtD4C,OAAQkL,EAAOhL,KAAOgL,EAAOhL,KAAK9C,GAAK,GACvCu5B,gBAAiBzrB,EAAOisB,cAAgBjsB,EAAOisB,cAAc/5B,GAAK,KAElET,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBAAyBxP,KAAK6K,aAAc7K,KAAKuK,WAAWZ,IAAI,gBAAiB4E,EAE9F,CAACtO,SAAAD,KAAA,mBAAAE,iBAnIQ45B,IAAsB35B,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAtB20B,GAAsBx5B,UAAA,0BAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,6kCAAAC,SAAA,SAAAnC,EAAAC,MAAA,EAAAD,IDpC/BlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBAEAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAAs6B,GAAA,iCAQAt6B,MAAA,EAAAu6B,GAAA,yBAAAv6B,OAUAA,MAAA,oCAGZA,YAMgBA,MAJhB,YAIgBA,CAJ4B,4BAI5BA,CAHY,6BAGZA,CAFiB,cAEjBA,CADM,6CAEFA,MAAA,yBACIA,MAAA,wCASZA,YACAA,MAAA,GAAAw6B,GAAA,oCAGJx6B,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAEfA,MAAA,wCAMJA,QACAA,MAAA,8CACIA,MAAA,2BACIA,MAAA,yCAQRA,UACAA,MAAA,8CACIA,MAAA,0CAKIA,MAAA,GAAAy6B,GAAA,mCAORz6B,UACAA,MAAA,8CACIA,MAAA,qDAQZA,YACAA,MAAA,GAAA06B,GAAA,mBAWA16B,MAAA,0CAOZA,mCAzGiBA,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,KAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAAyc,GAqBpBzc,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAIapK,MAAA,GAAAA,MAAA,QAAAA,MAAA,yBAOJA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAKLhW,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAOa7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,sBAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAGQhW,MAAA,GAAAA,MAAA,QAAAA,MAAA,wBAOJA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAIIhW,MAAA,GAAAA,MAAA,QAAAA,MAAA,gCAIRA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAG4BhW,MAAA,GAAAA,MAAA,UAAAA,MAAA,MAAAmF,EAAA40B,iBAOpB/5B,MAAA,GAAAA,MAAA,QAAAA,MAAA,wBAIRA,MAAA,GAAAA,MAAA,eAAAA,MAAA,MAAAmF,EAAA6Q,mBAQXhW,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAWDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,8NEzG5B,MAAMuwB,MAA2B5pB,OAAgE,CACpGC,SAAU,gBACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAW4P,iBACpCzL,EAAgBtN,SAASmJ,MAAW6tB,eACxCxpB,YAAa1E,GAAQA,EAAK9L,KAC1ByQ,WAAYA,CAACjQ,EAAakQ,IACtBlQ,EAAYiW,SAASwjB,eAAevpB,GAAKzO,QAAK/D,KAAI0S,GAAOA,EAAIqpB,0HCLzD76B,MAAA,UAKIA,MAAA,iBACAA,MAAA,wBACJA,eAJIA,MAAA,aAAAA,MAAA,EAAAyR,KAGAzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,mEA4BJA,MAAA,uBAAAA,MAAA,IAAA86B,EAAAx6B,GAAA,gCASAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAA+6B,EAAAv6B,UAAA,yCASAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAAg7B,EAAAnpB,UAAA,yCAMK7R,MADL,SACKA,CAAA,UAAMA,MAAA,GAAkBA,QACzBA,MAAA,iBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAA8R,GAAAmpB,EAAA36B,KACbN,MAAA,GAAAA,MAAAi7B,EAAAr6B,gCAOXZ,MAAA,uBAAAA,MAAA,IAAAk7B,EAAAd,SAAAx5B,KAAA,+BAKAZ,MAAA,uBAAAA,MAAA,IAAAm7B,EAAA/3B,KAAAxC,KAAA,+BAKAZ,MAAA,uBAAAA,MAAA,UAAAo7B,EAAAf,cAAA,KAAAe,EAAAf,cAAAz5B,KAAA,+BAI6BZ,MAAA,uBAAAA,MAAA,IAAAq7B,EAAAj8B,MAAA,8BAI7BY,MAAA,iBAAsDA,MAAA,wBAEpDA,eAFoDA,oBAAA,+CAGtDA,MAAA,iBAAuDA,MAAA,wBAErDA,eAFqDA,oBAAA,kDAAvDA,MAHA,EAAAs7B,GAAA,kBAGAt7B,CAHsD,EAAAu7B,GAAA,uCAA3Cv7B,MAAA,OAAAw7B,EAAAt6B,SAGAlB,cAAA,QAAAw7B,EAAAt6B,mCAKnBlB,MAAA,uEAAkGA,MAA5B,cAAAy7B,EAA4Bz7B,CAAD,QAAA07B,EAAAppB,QC3F9F,MAAMqpB,GAAoBx1B;;;;;;;;;MAS3BuzB;EASA,MAAOkC,WAA6BnpB,MAoCtC9S,cACI+L,QApCJ7L,KAAA6S,gBAAkB,gBACT7S,KAAA6K,aAAe7K,KAAK8L,qBAAqB,WACzC9L,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAC,iBACAC,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBH,UAAU,CACPnS,KAAM,UACNoS,KAAM,CAAEC,KAAM,WACd3K,SAAO6F,KAAE,kBACT+E,YAAa,YAEhBH,UAAU,CACPnS,KAAM,QACNoS,KAAM,CAAEC,KAAM,UACd3K,SAAO6F,KAAE,gBACT+E,YAAa,UAEhBC,sBAAsBtT,KAAK6K,cAC3B0I,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBC,YAAY,YAAa,QACzBC,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,SAChB2S,QAAQ,CAAE3S,KAAM,UAChB4S,oBAAoB3T,KAAK6K,cACzB0I,eAAevT,KAAK6O,OAIrBhD,MAAM+H,UAAU,CACZC,SAAUmoB,MACVjoB,SAAUlN,GAAQA,EAAKo1B,SACvBhoB,aAAcA,CAACC,EAAMvQ,MACjBgD,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,CACJ9C,KAAM,CACF4T,SAAU3U,KAAKoU,kBAAkB7U,UAElCS,KAAK8S,QAAQ+B,qBAEpBC,KAAM9U,KAAKyS,MAAMsC,qBAGzBV,qBAAsB,CAACrU,KAAK8S,QAAQvO,aAAcvE,KAAKyS,MAAMlO,eAErE,CAACtE,SAAAD,KAAA,mBAAAE,iBAxDQ67B,GAAoB,EAAA97B,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAApB42B,GAAoBz7B,UAAA,wBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,2/BAAAC,SAAA,SAAAnC,EAAAC,GAAA,EAAAD,IDtB7BlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA+7B,GAAA,WAQA/7B,MAAA,oCAGZA,YACAA,MAAA,8FASIA,MAFA,sBAAAqF,GAAA,OAAcF,EAAA2P,cAAAzP,EAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAA,OACdF,EAAA4P,gBAAA1P,EAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAA,OACtBF,EAAA6P,kBAAA3P,EAAyB,GAOjDrF,MALA,4BAKAA,CADE,6CAKFA,MAAA,6CACIA,MAAA,GAAAg8B,GAAA,mBAGJh8B,QACAA,MAAA,6CAKIA,MAAA,GAAAi8B,GAAA,mBAGJj8B,QACAA,MAAA,6CAKIA,MAAA,GAAAk8B,GAAA,mBAGJl8B,QACAA,MAAA,6CACIA,MAAA,GAAAm8B,GAAA,mBAMJn8B,QACAA,MAAA,6CACIA,MAAA,GAAAo8B,GAAA,mBAGJp8B,QACAA,MAAA,8CACIA,MAAA,GAAAq8B,GAAA,mBAGJr8B,QACAA,MAAA,8CACIA,MAAA,GAAAs8B,GAAA,mBAGJt8B,QACAA,MAAA,8CACIA,MAAA,GAAAu8B,GAAA,mBACJv8B,QACAA,MAAA,8CACIA,MAAA,GAAAw8B,GAAA,mBAQJx8B,QACAA,MAAA,GAAAy8B,GAAA,sCACJz8B,eA1FiBA,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KAWbV,MAAA,GAKAA,MALA,KAAAmF,EAAAuN,gBAKA1S,CALsB,QAAAA,MAAA,KAAAmF,EAAAqQ,QAKtBxV,CAJwB,eAAAA,MAAA,KAAAmF,EAAAsQ,eAIxBzV,CAHsC,aAAAA,MAAA,MAAAmF,EAAAV,aAGtCzE,CAFkC,cAAAA,MAAA,MAAAmF,EAAAuQ,cAElC1V,CADoC,UAAAmF,EAAAwN,SAQhC3S,MAAA,GACAA,MADA,gBAAAmF,EACAnF,CADsB,mBAAAmF,EAAAvD,kBAItB5B,QACAA,MADA,oBAAAmF,EAAA8O,kBACAjU,CADuC,wBAAAA,MAAA,iCAG3BA,MAAA,GAA4CA,MAA5C,UAAAA,MAAA,mBAA4CA,CAAT,sBAM/CA,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAAmF,EAAAmN,MAAA9I,IAAA,cAOZxJ,MAAA,GAAmEA,MAAnE,UAAAA,MAAA,qBAAmEA,CAA9B,cAA8BA,CAAD,OAAAmF,EAAAmN,MAAA9I,IAAA,SAQlExJ,MAAA,GAAAA,MAAA,UAAAA,MAAA,gCAKAA,MAAA,GAAAA,MAAA,UAAAA,MAAA,wBAKAA,MAAA,GAAsEA,MAAtE,UAAAA,MAAA,iCAAsEA,CAArB,sBAKjDA,MAAA,GAA0DA,MAA1D,UAAAA,MAAA,2BAA0DA,CAAf,OAAAmF,EAAAmN,MAAA9I,IAAA,UAG3CxJ,MAAA,GAAAA,MAAA,UAAAA,MAAA,yBAUqCA,MAAA,GAAAA,MAAA,UAAAmF,EAAAuF,6IE9EnD,MAAOgyB,GAQT/8B,YAAoByB,GAAAvB,KAAAuB,cAJpBvB,KAAAurB,iBAAkB,EAEVvrB,KAAAywB,iBAAmB,IAAIluB,IAEgB,CAE/CM,WACI7C,KAAK8wB,eAAiB9wB,KAAKuB,YAAYiW,SAClC2V,mBACAvmB,UAAUC,GAAQA,EAAKwmB,eAC5BrtB,KAAK+wB,YAAc/wB,KAAKywB,iBAAiBztB,QACrCC,MAAU,EAAE+tB,EAAStE,MACjB,MAAM5e,EAA0C,CAC5CmjB,gBAAiB,IAAKD,EAASE,YAAa,QAC5CxE,MAAOA,EAAMztB,IAAI8tB,KAAQS,iBAAkBT,EAAEtsB,GAAIyrB,SAAUa,EAAEb,aAEjE,OAAOlsB,KAAKuB,YAAYmvB,eACnBoM,4BAA4BhvB,GAC5BxK,UAAU8pB,GAAUA,EAAO0P,4BAA2B,GAGvE,CAEArL,kBAAkBC,GACd1xB,KAAK2xB,eAAiBD,EACtB1xB,KAAKurB,iBAAkB,CAC3B,CAEAqG,eAAeF,GACX1xB,KAAK6xB,YAAcH,EACnB1xB,KAAKurB,iBAAkB,CAC3B,CAEAuG,qBACI,SAAU9xB,KAAK6xB,aAAe7xB,KAAK2xB,gBAAkB3xB,KAAK2xB,eAAe9yB,OAC7E,CAEAgtB,UACI7rB,KAAKywB,iBAAiB7wB,KAAK,CAACI,KAAK6xB,YAAa7xB,KAAK2xB,iBACnD3xB,KAAKurB,iBAAkB,CAC3B,CAACtrB,SAAAD,KAAA,mBAAAE,iBA5CQ28B,IAA4B18B,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAA5B03B,GAA4Bv8B,UAAA,gCAAA+G,MAAA,EAAAC,KAAA,EAAAC,OAAA,sJAAAC,SAAA,SAAAnC,EAAAC,MAAA,EAAAD,ICf7BlF,MAHZ,mBAGYA,CAHI,UAGJA,CAFkB,UAElBA,CADU,8BACcA,MAAA,4BAAAqF,GAAA,OAAoBF,EAAAmsB,kBAAAjsB,EAAyB,GACzErF,UAEIA,MADJ,UACIA,CADU,6BACaA,MAAA,yBAAAqF,GAAA,OAAiBF,EAAAssB,eAAApsB,EAAsB,GAAErF,QAChEA,MAAA,8EAMIA,MAAA,4BAAWmF,EAAAumB,SAAS,GAIpC1rB,0BARgBA,MAAA,GAGAA,MAHA,sBAAA48B,EAAA58B,MAAA,IAAAmF,EAAAwrB,iBAAA,KAAAiM,EAAAtR,aAGAtrB,CAHuD,UAAAmF,EAAAwsB,qBAGvD3xB,CAFgC,kBAAAmF,EAAAimB,gBAEhCprB,CADmC,aAAAA,MAAA,IAAAmF,EAAAyrB,qWCLvC5wB,MAAA,eAGIA,MAAA,mBAAAA,MAAAwH,GAAA,MAAAmO,EAAA3V,QAAA,OAAAA,MAAS2V,EAAAxL,SAAQ,GAGjBnK,MAAA,wBACJA,gCAHIA,MAAA,YAAA2V,EAAAC,qBAEA5V,cAAA,IAAAA,MAAA,oEAGAA,MAAA,eAEIA,MAAA,mBAAAA,MAAA6V,GAAA,MAAAF,EAAA3V,MAAA,UAAAA,MAAS2V,EAAApL,OAAM,GAIfvK,MAAA,wBACJA,iCAJIA,MAAA,YAAA2V,EAAAC,qBAGA5V,cAAA,IAAAA,MAAA,oDANJA,MAAA,EAAA68B,GAAA,sCAIK78B,MAAA,mBAAA2V,EAAAK,6CAYThW,MAAA,cACIA,MAAA,6BACJA,6BAD0BA,cAAA,SAAA+V,8BAgB1B/V,MAAA,sCAKIA,MAAA,iCAKJA,8BAPIA,MAAA,QAAAA,MAAA,6BAIIA,MAAA,GACAA,MADA,eAAA2V,EAAAjL,aACA1K,CAD6B,wBAAA2V,EAAAvL,WAAAZ,IAAA,kBCrC1C,MAAMszB,GAAkB32B;;;;;;;;;;;;EAoBzB,MAAO42B,WACD5xB,MAURxL,YACY4L,EACEnK,EACFoK,EACAC,GAERC,QALQ7L,KAAA0L,iBACE1L,KAAAuB,cACFvB,KAAA2L,cACA3L,KAAA4L,sBAXZ5L,KAAA6K,aAAe7K,KAAK8L,qBAAqB,QACzC9L,KAAAuK,WAAavK,KAAK2L,YAAYI,MAAM,CAChChL,KAAM,CAAC,GAAIkL,KAAWC,UACtBrB,aAAc7K,KAAK2L,YAAYI,SAAMQ,OAAwBvM,KAAK6K,iBAE7D7K,KAAAmW,iBAAmB,CAACjJ,MAAWsO,eAAgBtO,MAAWiwB,WASnE,CAEAt6B,WACI7C,KAAKyM,MACT,CAEA1H,cACI/E,KAAKyN,SACT,CAEAsI,oBACI,OAAO/V,KAAKuK,WAAWwN,OAAS/X,KAAKuK,WAAWyN,KACpD,CAEA1N,SACI,IAAKtK,KAAKuK,WAAWwN,MACjB,OAEJ,MAAQhX,OAAM8J,gBAAiB7K,KAAKuK,WAAWhL,MAC/C,IAAKwB,EACD,OAEJ,MAAM+M,EAAQ,CACV/M,OACA8J,gBAEJ7K,KAAKuB,YAAYiW,SAAS4lB,WAAWtvB,GAAOzO,UACxCwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,SAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,eACpBzO,KAAK0O,OAAOC,SAAS,CAAC,MAAO9H,EAAKu2B,WAAW38B,IAAK,CAAEmO,WAAY5O,KAAK6O,OAAO,EAEhFC,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,QACX,EAGb,CAEA7D,OACI,IAAK1K,KAAKuK,WAAWwN,MACjB,OAEJ,MAAM7I,EAAYlP,KAAKuK,WAAWhL,MAClCS,KAAKgP,QACAhM,QACGW,KAAK,IAAC,EACNsL,KAAS1L,IACL,MAAMuK,EAAQ,CACVrN,GAAI8C,EAAK9C,GACTM,KAAMmO,EAAUnO,KAChB8J,aAAcqE,EAAUrE,cAE5B,OAAO7K,KAAKuB,YAAYiW,SAAS6lB,WAAWvvB,EAAK,IAGxDzO,UACGwH,IACI7G,KAAK4L,oBAAoByC,WAAQC,KAAE,gCAAiC,CAChEC,OAAQ,SAEZvO,KAAKuK,WAAWiE,iBAChBxO,KAAK0L,eAAe+C,cAAY,EAEpCK,IACI9O,KAAK4L,oBAAoBmD,SAAMT,KAAE,8BAA+B,CAC5DC,OAAQ,QACX,EAGjB,CAKUa,cACNb,EACAc,GAEArP,KAAKuK,WAAW+E,WAAW,CACvBvO,KAAMwN,EAAOxN,OAEbf,KAAK6K,aAAahM,QAClBmB,KAAKwP,yBAAyBxP,KAAK6K,aAAc7K,KAAKuK,WAAWZ,IAAI,gBAAiB4E,EAE9F,CAACtO,SAAAD,KAAA,mBAAAE,iBA3GQg9B,IAAmB/8B,mBAAA+E,OAAA/E,MAAAmQ,MAAAnQ,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAnB+3B,GAAmB58B,UAAA,sBAAAiQ,SAAA,CAAApQ,OAAAkH,MAAA,GAAAC,KAAA,GAAAC,OAAA,2lBAAAC,SAAA,SAAAnC,EAAAC,MAAA,EAAAD,IDrC5BlF,MADJ,mBACIA,CADY,oBAERA,MAAA,iBAEAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAAm9B,GAAA,iCAQAn9B,MAAA,EAAAo9B,GAAA,yBAAAp9B,OAUAA,MAAA,oCAGZA,YAGQA,MAFR,YAEQA,CAFoC,4BAEpCA,CADoB,8BAEhBA,MAAA,GAAAq9B,GAAA,oCAGJr9B,QAIYA,MAHZ,oBAGYA,CAHI,cAGJA,CAFE,WAEFA,CADmB,6CAEfA,MAAA,wCAQZA,YACAA,MAAA,GAAAs9B,GAAA,kBAWAt9B,MAAA,yCAOZA,mCA1DiBA,MAAA,GAAsBA,MAAtB,OAAAA,MAAA,IAAAmF,EAAAyL,QAAsB5Q,CAAA,WAAAgqB,GAoBpBhqB,MAAA,GAAAA,MAAA,YAAAmF,EAAAiF,YAGIpK,MAAA,GAAAA,MAAA,OAAAA,MAAA,MAAAmF,EAAA0J,UAOa7O,MAAA,GAAAA,MAAA,QAAAA,MAAA,sBAKRA,MAAA,GAAAA,MAAA,YAAAA,MAAA,MAAAmF,EAAA6Q,mBAOXhW,MAAA,GAAAA,MAAA,OAAAmF,EAAAuF,aAAAhM,QAWDsB,QACAA,MADA,UAAAmF,EAAA0J,QACA7O,CADmB,aAAAmF,EAAAiF,sKE1D5B,MAAMmzB,MAAwBxsB,OAA0D,CAC3FC,SAAU,YACVC,mBAAoBC,GAChBA,EAAgBtN,SAASmJ,MAAW4P,iBACpCzL,EAAgBtN,SAASmJ,MAAWywB,YACxCpsB,YAAa1E,GAAQA,EAAK9L,KAC1ByQ,WAAYA,CAACjQ,EAAakQ,IAAQlQ,EAAYiW,SAASomB,YAAYnsB,GAAKzO,QAAK/D,KAAI0S,GAAOA,EAAIisB,+NCEpFz9B,MAAA,SAKIA,MAAA,gBACAA,MAAA,wBACJA,eAJIA,MAAA,aAAAA,MAAA,EAAAyR,KAGAzR,MAAA,GAAAA,MAAA,IAAAA,MAAA,+DA+BIA,MAAA,uBAAAA,MAAA,IAAA09B,EAAAp9B,GAAA,gCASAN,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAA29B,EAAAn9B,UAAA,yCASAR,MAAA,8CAAAA,MAAA,IAAAA,MAAA,IAAA49B,EAAA/rB,UAAA,yCAUK7R,MADL,SACKA,CAAA,UAAMA,MAAA,GAAwBA,QAC/BA,MAAA,iBACJA,6BAHwBA,MAAA,aAAAA,MAAA,EAAA8R,GAAA+rB,EAAAv9B,KACbN,MAAA,GAAAA,MAAA69B,EAAAj9B,iCAYPZ,MALJ,SAKIA,CADH,UACSA,MAAA,wBAA8CA,QACpDA,MAAA,iBACJA,6BALIA,MAAA,aAAAA,MAAA,EAAA8R,GAAA9R,MAAA,EAAA89B,GAAAC,EAAAz9B,MAGMN,MAAA,GAAAA,YAAA,6DAKlBA,MAAA,wEAGIA,MADA,cAAAoS,EACApS,CAD2B,OAAA2V,EAAArD,iDAtEnCtS,MAAA,6GAUIA,MAFA,sBAAAqF,GAAArF,MAAAwH,GAAA,MAAAmO,EAAA3V,QAAA,OAAAA,MAAc2V,EAAAb,cAAAzP,GAAqB,EAEnCrF,CAFoC,8BAAAqF,GAAArF,MAAAwH,GAAA,MAAAmO,EAAA3V,QAAA,OAAAA,MACd2V,EAAAZ,gBAAA1P,GAAuB,EAC7CrF,CAD8C,gCAAAqF,GAAArF,MAAAwH,GAAA,MAAAmO,EAAA3V,QAAA,OAAAA,MACtB2V,EAAAX,kBAAA3P,GAAyB,GAOjDrF,MALA,2BAKAA,CADE,4CAKFA,MAAA,6CACIA,MAAA,GAAAg+B,GAAA,mBAGJh+B,QACAA,MAAA,8CAKIA,MAAA,GAAAi+B,GAAA,mBAGJj+B,QACAA,MAAA,8CAKIA,MAAA,GAAAk+B,GAAA,mBAGJl+B,QACAA,MAAA,8CAKIA,MAAA,GAAAm+B,GAAA,mBAMJn+B,QACAA,MAAA,8CACIA,MAAA,GAAAo+B,GAAA,mBAUJp+B,QACAA,MAAA,GAAAq+B,GAAA,sCAKJr+B,gCAlEIA,MANA,KAAA2V,EAAAjD,gBAMA1S,CANsB,QAAAA,MAAA,KAAA2V,EAAAH,QAMtBxV,CALwB,eAAAA,MAAA,KAAA2V,EAAAF,eAKxBzV,CAJsC,aAAAA,MAAA,KAAA2V,EAAAlR,aAItCzE,CAHkC,cAAAA,MAAA,KAAA2V,EAAAD,cAGlC1V,CAFoC,UAAA2V,EAAAhD,QAEpC3S,CADmB,cAAAA,MAAA,KAAA2V,EAAA2oB,eAQft+B,MAAA,GACAA,MADA,gBAAA2V,EACA3V,CADsB,mBAAA2V,EAAA/T,kBAItB5B,QACAA,MADA,oBAAA2V,EAAA1B,kBACAjU,CADuC,wBAAAA,MAAA,+BAG3BA,MAAA,GAA4CA,MAA5C,UAAAA,MAAA,mBAA4CA,CAAT,sBAM/CA,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAA2V,EAAArD,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,2BAEAA,CAF2C,qBAE3CA,CADwB,OAAA2V,EAAArD,MAAA9I,IAAA,cAQxBxJ,MAAA,GAEAA,MAFA,UAAAA,MAAA,qBAEAA,CAFqC,cAErCA,CADkB,OAAA2V,EAAArD,MAAA9I,IAAA,SAUNxJ,MAAA,GAAkEA,MAAlE,UAAAA,MAAA,8BAAkEA,CAApB,eAalCA,MAAA,GAAAA,MAAA,UAAA2V,EAAAjL,wDAc5B1K,MAAA,6BAKIA,MAAA,2BAAAqF,GAAArF,MAAA8nB,GAAA,MAAAnS,EAAA3V,MAAA,UAAAA,MAAA2V,EAAAtU,kBAAAgE,EAAA,GALJrF,0CAIIA,MADA,oBAAA2V,EAAAtU,kBACArB,CADuC,aAAAu+B,6CAV/Cv+B,MAAA,GACIA,MAAA,eAAkCA,MAAA,yBAAAw+B,EAAAx+B,MAAAggB,GAAAye,KAAA9oB,EAAA3V,MAAA,UAAAA,MAAS2V,EAAA+oB,UAAAF,GAAqB,GAC5Dx+B,MAAA,gBACAA,MAAA,UAAMA,MAAA,wBAGVA,UACAA,MAAA,EAAA2+B,GAAA,0FAJU3+B,MAAA,GAAAA,YAAA,qCAAAA,MAAA,EAAA4+B,GAAAJ,EAAA59B,QAKLZ,MAAA,GAAAA,MAAA,OAAAA,MAAA,IAAA2V,EAAAkpB,yCART7+B,MAAA,EAAA8+B,GAAA,8DAAe9+B,MAAA,OAAAA,MAAA,IAAA2V,EAAAkpB,eCjFhB,MAAME,GAAgB54B;;;;;;;;;;;;;;;EAuBvB,MAAO64B,WACDvsB,MA6BR9S,YACcyB,EACFqK,EACAwzB,GAERvzB,QAJU7L,KAAAuB,cACFvB,KAAA4L,sBACA5L,KAAAo/B,eA7BZp/B,KAAA6S,gBAAkB,YAGlB7S,KAAAwB,kBAA8B,GAErBxB,KAAA6K,aAAe7K,KAAKuN,oBAAoB0rB,mBAAmB,QAC3Dj5B,KAAA8S,QAAU9S,KAAK+S,yBACnBC,cACAC,iBACAC,UAAU,CACPnS,KAAM,OACNoS,KAAM,CAAEC,KAAM,QACd3K,SAAO6F,KAAE,eACT+E,YAAa,SAEhBC,sBAAsBtT,KAAK6K,cAC3B0I,eAAevT,KAAK6O,OAEhB7O,KAAAyS,MAAQzS,KAAKwT,uBACjBC,YAAY,YAAa,QACzBC,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,cAChB2S,QAAQ,CAAE3S,KAAM,SAChB4S,oBAAoB3T,KAAK6K,cACzB0I,eAAevT,KAAK6O,OAQrBhD,MAAM+H,UAAU,CACZC,SAAUwrB,MACVtrB,SAAUlN,GAAQA,EAAKy4B,MACvBrrB,aAAcA,CAACC,EAAMvQ,MACjBgD,QAAS,CACLuN,OACAvQ,OACAE,OAAQ,CACJ9C,KAAM,CACF4T,SAAU3U,KAAKoU,kBAAkB7U,UAElCS,KAAK8S,QAAQ+B,qBAEpBL,eAAgBxU,KAAKoU,kBAAkB7U,MAAQkV,MAAgBG,GAAKH,MAAgBC,IACpFI,KAAM9U,KAAKyS,MAAMsC,qBAGzBV,qBAAsB,CAACrU,KAAK8S,QAAQvO,aAAcvE,KAAKyS,MAAMlO,eAErE,CAEA1B,WACIgJ,MAAMhJ,WACN,MAAM08B,EAAgBv/B,KAAK6O,MAAM2wB,SAASx8B,QACtC/D,KAAIwgC,GAAMA,EAAG91B,IAAI,cAAW,EAC5B+1B,SAAoB,EACpB1gB,MAAI,IAAOhf,KAAKwB,kBAAoB,KAExCxB,KAAKg/B,eAAc16B,KAActE,KAAK2V,OAAQ4pB,GAAev8B,QACzD/D,KAAI,EAAEqgC,EAAOK,MACT,GAAIA,EACA,OAAOL,EAAMp4B,KAAK04B,GAAKA,EAAEn/B,KAAOk/B,EAAY,IAIxD3/B,KAAKy+B,gBAAen6B,KAActE,KAAK2V,OAAQ4pB,GAAev8B,QAC1D/D,KAAI,EAAEqgC,EAAOK,KACLA,EACOL,EAAMO,UAAUC,GAAKA,EAAEr/B,KAAOk/B,IAE9B,GAIvB,CAEArjB,YAAYrb,GACRjB,KAAKuB,YAAYwL,OAAOuS,mBAAmBre,GAAM5B,WACrD,CAEA0gC,eACI,MAAMC,EAAS,IAAKhgC,KAAK6O,MAAMoxB,SAASD,eACjCA,EAAOE,SACdlgC,KAAK0O,OAAOC,SAAS,CAAC,KAAMqxB,GAAS,CAAEpxB,WAAY5O,KAAK6O,MAAOsxB,oBAAqB,YACxF,CAEAtB,UAAUt7B,GACNvD,KAAKo/B,aACAgB,cAAc75B,GAAiC,CAC5C85B,OAAQ,CACJp6B,SAAU1C,EAAKxC,KACfsC,OAAQE,EAAK9C,IAEjB6/B,KAAM,OAETt9B,QACGC,MAAUs9B,GACNA,EACMvgC,KAAKuB,YAAYiW,SACZgpB,iBAAiBj9B,EAAK9C,GAAI8/B,GAC1Bv9B,QAAKy9B,MAAMF,IAChBG,OAGbrhC,UAAU,CACPO,KAAMwtB,IACFptB,KAAK4L,oBAAoByC,WAAQC,KAAE,0CAA2C,CAC1EqyB,aAAcvT,EAAOvuB,OACrBoH,SAAU1C,EAAKxC,OAEnBf,KAAK4gC,mBAAiB,EAE1B7xB,MAAOD,IACH9O,KAAK4L,oBAAoBmD,MAAMD,EAAG,GAGlD,CAEA8xB,oBACI5gC,KAAK6gC,gBAAgB57B,SACzB,CAAChF,SAAAD,KAAA,mBAAAE,iBA9HQi/B,IAAiBh/B,MAAA+E,OAAA/E,MAAA+E,OAAA/E,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAA+E,IAAA,MAAjBg6B,GAAiB7+B,UAAA,oBAAAwgC,UAAA,SAAAz7B,EAAAC,MAAA,EAAAD,SAQf/D,EAAuB,+4CDhD1BnB,MAHZ,mBAGYA,CAHI,mBAGJA,CAFQ,gBAERA,CADS,+DAILA,MAAA,8BAAAqF,GAAA,OAAsBF,EAAAgX,YAAA9W,EAAmB,GAEjDrF,UACAA,MAAA,kBACIA,MAAA,4BACAA,MAAA,EAAA4gC,GAAA,WAQA5gC,MAAA,oCAGZA,YACAA,MAAA,yCAAuDA,MAAA,iCAAgBmF,EAAAy6B,cAAc,GA6EjF5/B,MA5EA,GAAA6gC,GAAA,sBA4EA7gC,CA5E8B,GAAA8gC,GAAA,uCA6FlC9gC,oBAjHgBA,MAAA,GACAA,MADA,yBAAAA,MAAA,IAAAmF,EAAAqX,qBACAxc,CADsD,sBAAAA,MAAA,IAAAmF,EAAA+Y,mBASrDle,MAAA,GAAAA,MAAA,mBAAAA,MAAA,GAAAU,KAUDV,MAAA,GAAAA,MAAA,iBAAAA,MAAA,KAAAmF,EAAA05B,cA6EmB7+B,MAAA,GAAAA,MAAA,wBAAA+gC,EAAA/gC,MAAA,MAAAmF,EAAA05B,cAAA,KAAAkC,EAAAngC,wjCEhG5B,MAAMogC,GAA+E,CACxFhwB,SAAU,oBACV1I,SAAO6F,KAAE,6BACT8yB,KAAM,QACNC,UAAW,YACXjwB,mBAAoBlE,MAAWo0B,oBAC/BC,QAASA,EAAGC,WAAUt9B,YAAWu9B,gBAAeC,qBAC5C,MAAMngC,EAAcigC,EAAS73B,IAAIg4B,OAC3B/1B,EAAsB41B,EAAS73B,IAAIi4B,OAEnCr+B,EAAOk+B,EAAcv+B,WACrBq9B,EAAYr8B,EAAUjF,IAAImF,GAAKA,EAAE3D,IAEvCc,EAAYiW,SAASqqB,sBAAsBt+B,EAAK9C,GAAI8/B,GAAWlhC,UAAU,CACrE2F,SAAUA,KACN4G,EAAoByC,WAAQC,KAAE,+CAAgD,CAC1EqyB,aAAcJ,EAAU1hC,OACxBoH,SAAU1C,EAAKxC,OAEnB0gC,EAAcx8B,UACdy8B,GAAc,GAErB,GCnBH,MAAOI,WAAwBC,MACjCjiC,YAAY4O,EAAgBnN,GACxBsK,MACI6C,EACA,CACI4J,WAAY,gBACZ7X,GAAI,GACJE,UAAW,GACXqR,UAAW,GACXhG,aAAc,GACdG,UAAW,GACXC,SAAU,GACVmD,KAAM,CAAEjD,MAAO,KAEnB7L,GACIc,EAAYoL,cACPq1B,yBACAp7B,UAAUC,GAAQA,EAAKo7B,qBAExC,CAAChiC,SAAAD,KAAA,mBAAAE,iBAnBQ4hC,IAAe3hC,MAAA+E,MAAA/E,MAAAmQ,OAAA,EAAArQ,SAAAD,KAAA,WAAAI,EAAA8hC,IAAA,OAAfJ,GAAeK,QAAfL,GAAeM,UAAAC,WAFZ,SCOT,MAAMC,GAAgBC,GAAsC,CAC/D,CACIC,KAAM,UACNC,UAAWC,MACX77B,KAAM,CACF87B,cAAYr0B,KAAE,uBAElBs0B,QAAS,CACLC,OAAQA,OACJC,OAAOnB,OACFx+B,MAAM4/B,OACNz/B,UAAUuD,KAAW0H,UAAQ9K,OAAGoD,EAAKo7B,yBAElDe,SAAUT,EAAYU,iBAAiB,YAE3C,CACIT,KAAM,iBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,qBACZ48B,cAAYr0B,KAAE,8BAElB00B,SAAUT,EAAYU,iBAAiB,uBAE3C,CACIT,KAAM,qBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,uBACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,6BAA8B40B,KAAM,CAAC,MAAO,oBAEvEF,SAAUT,EAAYU,iBAAiB,yBAE3C,CACIT,KAAM,WACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,eACZ48B,cAAYr0B,KAAE,wBAElB00B,SAAUT,EAAYU,iBAAiB,iBAE3C,CACIT,KAAM,eACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,iBACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,uBAAwB40B,KAAM,CAAC,MAAO,cAEjEF,SAAUT,EAAYU,iBAAiB,mBAE3C,CACIT,KAAM,kBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,sBACZ48B,cAAYr0B,KAAE,+BAElB00B,SAAUT,EAAYU,iBAAiB,wBAE3C,CACIT,KAAM,sBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,wBACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,8BAA+B40B,KAAM,CAAC,MAAO,qBAExEF,SAAUT,EAAYU,iBAAiB,0BAE3C,CACIT,KAAM,UACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,cACZ48B,cAAYr0B,KAAE,uBAElB00B,SAAUT,EAAYU,iBAAiB,gBAE3C,CACIT,KAAM,cACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,gBACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,sBAAuB40B,KAAM,CAAC,MAAO,aAEhEF,SAAUT,EAAYU,iBAAiB,kBAE3C,CACIT,KAAM,QACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,YACZ48B,cAAYr0B,KAAE,qBAElB00B,SAAUT,EAAYU,iBAAiB,cAE3C,CACIT,KAAM,YACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,cACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,oBAAqB40B,KAAM,CAAC,MAAO,WAE9DF,SAAUT,EAAYU,iBAAiB,gBAE3C,CACIT,KAAM,iBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,oBACZ48B,cAAYr0B,KAAE,8BAElB00B,SAAUT,EAAYU,iBAAiB,sBAE3C,CACIT,KAAM,qBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,sBACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,6BAA8B40B,KAAM,CAAC,MAAO,oBAEvEF,SAAUT,EAAYU,iBAAiB,wBAE3C,CACIT,KAAM,YACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,gBACZ48B,cAAYr0B,KAAE,yBAElB00B,SAAUT,EAAYU,iBAAiB,kBAE3C,CACIT,KAAM,gBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,kBACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,wBAAyB40B,KAAM,CAAC,MAAO,eAElEF,SAAUT,EAAYU,iBAAiB,oBAE3C,CACIT,KAAM,YACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,eACZ48B,cAAYr0B,KAAE,yBAElB00B,SAAUT,EAAYU,iBAAiB,iBAE3C,CACIT,KAAM,gBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,iBACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,wBAAyB40B,KAAM,CAAC,MAAO,eAElEF,SAAUT,EAAYU,iBAAiB,mBAE3C,CACIT,KAAM,QACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,YACZ48B,cAAYr0B,KAAE,qBAElB00B,SAAUT,EAAYU,iBAAiB,cAE3C,CACIT,KAAM,YACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,cACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,oBAAqB40B,KAAM,CAAC,MAAO,WAE9DF,SAAUT,EAAYU,iBAAiB,gBAE3C,CACIT,KAAM,mBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,uBACZ48B,cAAYr0B,KAAE,gCAElB00B,SAAUT,EAAYU,iBAAiB,yBAE3C,CACIT,KAAM,uBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,yBACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,+BAAgC40B,KAAM,CAAC,MAAO,sBAEzEF,SAAUT,EAAYU,iBAAiB,2BAE3C,CACIT,KAAM,kBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,sBACZ48B,cAAYr0B,KAAE,+BAElB00B,SAAUT,EAAYU,iBAAiB,wBAE3C,CACIT,KAAM,sBACNC,UAAWC,MACX77B,KAAM,CACFd,WAAY,wBACZ48B,WAAY,CAAEl6B,SAAO6F,KAAE,8BAA+B40B,KAAM,CAAC,MAAO,qBAExEF,SAAUT,EAAYU,iBAAiB,0BAE3C,CACIT,KAAM,kBACNC,UAAWC,MACX77B,KAAM,CACF87B,cAAYr0B,KAAE,8BACdvI,WAAY,yBAEhB68B,QAAS,CACLC,OAAQA,OACJC,OAAOnB,OACFx+B,MAAMggC,OACN7/B,UAAUuD,KAAW0H,UAAQ9K,OAAGoD,EAAKsY,oBAElD6jB,SAAUT,EAAYU,iBAAiB,2BC7GzC,MAAOG,EAAcnjC,SACRD,KAAAqjC,iCAAkC,EAEjDvjC,YAAYwjC,EAAsDf,GAC1Da,EAAeC,kCAGnBC,EAA0BC,mBAAmBnZ,IAE7CkZ,EAA0BC,mBAAmBxpB,IAE7CupB,EAA0BC,mBAAmBtyB,IAE7CqyB,EAA0BC,mBAAmB1c,IAE7Cyc,EAA0BC,mBAAmB1Q,IAC7CyQ,EAA0BC,mBAAmBtQ,IAC7CqQ,EAA0BC,mBAAmB7Q,IAE7C4Q,EAA0BC,mBAAmBjgB,IAC7CggB,EAA0BC,mBAAmBzf,IAC7Cwf,EAA0BC,mBAAmBvgB,IAE7CsgB,EAA0BC,mBAAmBjL,IAE7CgL,EAA0BC,mBAAmBzI,IAE7CwI,EAA0BC,mBAAmB1mB,IAE7CymB,EAA0BC,mBAAmB7F,IAE7C4F,EAA0BC,mBAAmBpC,IAE7CmC,EAA0BC,mBAAmB1N,IAC7CyN,EAA0BC,mBAAmBpN,IAC7CmN,EAA0BC,mBAAmBjO,IAE7CiN,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,cACVuyB,OAAKp1B,KAAE,sBACPO,MAAO,GACP4zB,UAAW7X,KAEf2X,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,gBACVuyB,OAAKp1B,KAAE,mBACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAW/Y,GACXvmB,MAAOygC,MACPC,UAAW,SACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EAASA,EAAOxN,QAAOuN,KAAE,8BAChC40B,KAAM,CAAC30B,GAAQ9N,UAK/B8hC,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,eACVuyB,OAAKp1B,KAAE,uBACPO,MAAO,GACP4zB,UAAW/nB,KAEf6nB,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,iBACVuyB,OAAKp1B,KAAE,oBACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAWhsB,GACXtT,MAAO4gC,MACPF,UAAW,UACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EACDA,EAAOtN,OAASyV,KACZ,yBACAnI,EAAOtN,QACXqN,KAAE,+BACR40B,KAAM,CAAC30B,GAAQ9N,UAK/B8hC,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,qBACVuyB,OAAKp1B,KAAE,6BACPO,MAAO,GACP4zB,UAAW9vB,KAEf4vB,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,uBACVuyB,OAAKp1B,KAAE,0BACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAWp3B,GACXlI,MAAO6gC,MACPH,UAAW,gBACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EACD,GAAGA,EAAOpC,aAAaoC,EAAOnC,YAAQ,EACtCkC,KAAE,kCACR40B,KAAM,CAAC30B,GAAQ9N,UAK/B8hC,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,YACVuyB,OAAKp1B,KAAE,oBACPO,MAAO,GACP4zB,UAAW5Z,KAEf0Z,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,cACVuyB,OAAKp1B,KAAE,iBACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAWxc,GACX9iB,MAAO8gC,MACPJ,UAAW,OACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EAASA,EAAOnG,eAAckG,KAAE,4BACvC40B,KAAM,CAAC30B,GAAQ9N,UAK/B8hC,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,uBACVuyB,OAAKp1B,KAAE,+BACPO,MAAO,GACP4zB,UAAW7O,KAEf2O,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,yBACVuyB,OAAKp1B,KAAE,4BACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAWrS,GACXjtB,MAAO+gC,MACPL,UAAW,iBACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EAASA,EAAOxN,QAAOuN,KAAE,uCAChC40B,KAAM,CAAC30B,GAAQ9N,UAK/B8hC,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,uBACVuyB,OAAKp1B,KAAE,kCACPO,MAAO,OACP4zB,UAAW5F,KAEf0F,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,sBACVuyB,OAAKp1B,KAAE,8BACPO,MAAO,GACP4zB,UAAW7d,KAEf2d,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,wBACVuyB,OAAKp1B,KAAE,2BACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAW5hB,GACX1d,MAAOghC,MACPN,UAAW,gBACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EAASA,EAAOxN,QAAOuN,KAAE,sCAChC40B,KAAM,CAAC30B,GAAQ9N,UAK/B8hC,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,oBACVuyB,OAAKp1B,KAAE,6BACPO,MAAO,GACP4zB,UAAWzJ,KAEfuJ,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,sBACVuyB,OAAKp1B,KAAE,yBACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAW7K,GACXz0B,MAAOihC,MACPP,UAAW,cACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EAASA,EAAOxN,QAAOuN,KAAE,oCAChC40B,KAAM,CAAC30B,GAAQ9N,UAK/B8hC,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,gBACVuyB,OAAKp1B,KAAE,wBACPO,MAAO,GACP4zB,UAAW1G,KAEfwG,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,kBACVuyB,OAAKp1B,KAAE,qBACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAW3I,GACX32B,MAAOkhC,MACPR,UAAW,UACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EAASA,EAAOxN,QAAOuN,KAAE,gCAChC40B,KAAM,CAAC30B,GAAQ9N,UAK/B8hC,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,eACVuyB,OAAKp1B,KAAE,wBACPO,MAAO,GACP4zB,UAAW7kB,KAEf2kB,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,iBACVuyB,OAAKp1B,KAAE,oBACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAWlnB,GACXpY,MAAOmhC,MACPT,UAAW,UACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EAASA,EAAOxN,QAAOuN,KAAE,+BAChC40B,KAAM,CAAC30B,GAAQ9N,UAK/B8hC,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,YACVuyB,OAAKp1B,KAAE,oBACPO,MAAO,GACP4zB,UAAWtD,KAEfoD,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,cACVuyB,OAAKp1B,KAAE,iBACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAWvF,GACX/5B,MAAOohC,MACPV,UAAW,OACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EAASA,EAAOxN,QAAOuN,KAAE,4BAChC40B,KAAM,CAAC30B,GAAQ9N,UAK/B8hC,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,wBACVuyB,OAAKp1B,KAAE,8BACPO,MAAO,GACP4zB,UAAWlkB,KAEfgkB,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,UACVuyB,OAAKp1B,KAAE,sBACPO,MAAO,GACP4zB,UAAWhd,KAGf8c,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,sBACVuyB,OAAKp1B,KAAE,2BACPO,MAAO,GACP4zB,UAAW5L,KAEf0L,EAAYiB,gBAAgB,CACxBC,SAAU,EACVtyB,SAAU,wBACVuyB,OAAKp1B,KAAE,0BACPO,MAAO,GACP4zB,aAAWkB,OAA4B,CACnClB,UAAW5N,GACX1xB,MAAOqhC,MACPX,UAAW,gBACXC,eAAgBv1B,GAAU,CACtB,CACI9F,MAAO8F,EAASA,EAAOxN,QAAOuN,KAAE,qCAChC40B,KAAM,CAAC30B,GAAQ9N,UAK/B2iC,EAAeC,iCAAkC,EACrD,CAACpjC,SAAAD,KAAA,mBAAAE,iBA1UQkjC,GAAcjjC,MAAA+E,OAAA/E,MAAA+E,OAAA,EAAAjF,SAAAD,KAAA,UAAAI,EAAAqkC,GAAA,MAAdrB,IAAcnjC,SAAAD,KAAA,UAAAI,EAAAskC,IAAA,WA7CZ,CACP,CACIC,QAASC,KACTC,WAAatC,GAA6BD,GAAaC,GACvDuC,OAAO,EACPC,KAAM,CAACC,SAEdC,QAAA,CARSC,MAAcC,KAAaC,SAAS","names":["withLatestFrom","inputs","project","popResultSelector","operate","source","subscriber","len","length","otherValues","Array","hasValue","map","ready","i","innerFrom","subscribe","createOperatorSubscriber","value","every","identity","noop","values","next","ZoneMemberControlsDirective","constructor","templateRef","this","static","t","i0","core","FsC","selectors","ZoneMemberListHeaderDirective","member_r1","id","member_r2","createdAt","member_r3","_c0","member_r4","name","member_r5","code","ZoneMemberListComponent_ng_template_23_vdr_chip_0_Template","ZoneMemberListComponent_ng_template_23_vdr_chip_1_Template","member_r6","enabled","ZoneMemberListComponent","dataService","selectedMemberIds","selectionChange","EventEmitter","filterTermControl","FormControl","currentPage","itemsPerPage","selectionManager","SelectionManager","multiSelect","itemsAreEqual","a","b","additiveMode","membersInput$","Subject","activeZoneInput$","BehaviorSubject","undefined","destroy$","refresh$","ngOnInit","activeZoneMembers$","merge","pipe","switchMap","activeZone","query","GetZoneMembersDocument","zoneId","mapSingle","zone","members","of","members$","take","setCurrentItems","filter","m","includes","selectionChanges$","takeUntil","selection","emit","s","filteredMembers$","combineLatest","valueChanges","startWith","filterTerm","term","toLocaleLowerCase","totalItems$","ngOnChanges","changes","ngOnDestroy","complete","refresh","i1","VBU","contentQueries","rf","ctx","dirIndex","$event","ZoneMemberListComponent_ng_template_8_Template","ZoneMemberListComponent_ng_template_11_Template","ZoneMemberListComponent_ng_template_14_Template","ZoneMemberListComponent_ng_template_17_Template","ZoneMemberListComponent_ng_template_20_Template","ZoneMemberListComponent_ng_template_23_Template","locationId","ctx_r0","zoneName","_r2","cancel","add","GET_ZONE_MEMBERS","gql","AddCountryToZoneDialogComponent","currentMembers$","availableCountries$","GetCountryListDocument","options","mapStream","data","countries","items","currentMembers","c","find","cm","resolveWith","decls","vars","consts","template","AddCountryToZoneDialogComponent_ng_template_0_Template","AddCountryToZoneDialogComponent_ng_template_3_Template","_r1","section_r2","$implicit","ctx_r2","toggleAll","permissions","permission_r5","_r4","setPermission","description","readonly","activePermissions","PermissionGridComponent_tr_2_button_10_Template","PermissionGridComponent_tr_2_td_11_Template","label","PermissionGridComponent","permissionChange","buildGrid","permission","defs","some","d","def","crudGroups","Map","nonCrud","crudRe","permissionDefinitions","test","groupName","match","existing","get","push","set","assignable","gridData","from","entries","extractCrudDescription","replace","outputs","PermissionGridComponent_tr_2_Template","create","detailForm","invalid","pristine","save","AdminDetailComponent_ng_template_7_button_0_Template","entity_r5","customFields","channel_r7","_r6","selectedChannelId","channelId","channelCode","GET_ADMINISTRATOR_DETAIL","ADMINISTRATOR_FRAGMENT","AdminDetailComponent","TypedBaseDetailComponent","getAvailableChannels","Object","selectedRolePermissions","changeDetector","formBuilder","notificationService","super","getCustomFieldConfig","group","emailAddress","Validators","required","firstName","lastName","password","roles","getCustomFieldsDefaults","selectedRoles","init","allRoles$","administrator","getRoles","item","CUSTOMER_ROLE_CODE","client","userStatus","single$","Permission","CreateAdministrator","UpdateAdministrator","rolesSelect","disable","serverConfigService","getPermissionDefinitions","destroy","rolesChanged","buildPermissionsMap","getPermissionsForSelectedChannel","getActivePermissions","input","active","channels","roleIds","role","notNullOrUndefined","createAdministrator","success","_","entity","markAsPristine","markForCheck","router","navigate","relativeTo","route","err","error","entity$","mergeMap","formValue","updateAdministrator","setFormValues","languageCode","patchValue","user","setCustomFieldFormValues","passwordControl","setValidators","permissionsControl","channelIdPermissionsMap","channelIdCodeMap","channel","permissionSet","Set","forEach","p","keys","permissionsHash","has","i2","features","AdminDetailComponent_button_5_Template","AdminDetailComponent_ng_template_7_Template","AdminDetailComponent_vdr_card_13_Template","AdminDetailComponent_vdr_form_field_30_Template","AdminDetailComponent_vdr_form_field_32_Template","AdminDetailComponent_vdr_card_35_Template","AdminDetailComponent_li_43_Template","isNew$","updateButton_r8","deleteAdministratorsBulkAction","createBulkDeleteAction","location","requiresPermission","userPermissions","DeleteAdministrator","getItemName","bulkDelete","ids","deleteAdministrators","res","_c1","administrator_r1","administrator_r2","administrator_r3","updatedAt","_c2","administrator_r4","administrator_r5","role_r6","AdministratorListComponent_ng_template_32_vdr_chip_0_Template","administrator_r7","customField_r8","ctx_r8","sorts","GET_ADMINISTRATOR_LIST","AdministratorListComponent","TypedBaseListComponent","dataTableListId","filters","createFilterCollection","addIdFilter","addDateFilters","addFilter","type","kind","filterField","addCustomFieldFilters","connectToRoute","createSortCollection","defaultSort","addSort","addCustomFieldSorts","configure","document","GetAdministratorListDocument","getItems","administrators","setVariables","skip","createSearchQuery","searchTermControl","refreshListOnChanges","searchTerm","_filter","filterOperator","LogicalOperator","AND","contains","OR","createFilterInput","sort","createSortInput","AdministratorListComponent_a_5_Template","setPageNumber","setItemsPerPage","setVisibleColumns","AdministratorListComponent_ng_template_17_Template","AdministratorListComponent_ng_template_20_Template","AdministratorListComponent_ng_template_23_Template","AdministratorListComponent_ng_template_26_Template","AdministratorListComponent_ng_template_29_Template","AdministratorListComponent_ng_template_32_Template","AdministratorListComponent_vdr_dt2_custom_field_column_33_Template","items$","itemsPerPage$","currentPage$","ctx_r1","saveButtonEnabled","_r3","ChannelDetailComponent_ng_template_7_button_0_Template","entity_r4","updatePermission","seller_r5","languageCode_r6","code_r7","GET_CHANNEL_DETAIL","CHANNEL_FRAGMENT","ChannelDetailComponent","DEFAULT_CHANNEL_CODE","token","pricesIncludeTax","availableLanguageCodes","availableCurrencyCodes","defaultCurrencyCode","defaultShippingZoneId","defaultLanguageCode","defaultTaxZoneId","sellerId","SuperAdmin","UpdateChannel","CreateChannel","sellers$","settings","getSellerList","sellers","availableLanguageCodes$","getAvailableLanguages","controls","setValue","dirty","valid","createChannel","auth","currentUser","me","updateUserChannels","__typename","message","updateChannel","generateToken","defaultShippingZone","defaultTaxZone","seller","codeControl","crypto","getRandomValues","Uint8Array","toString","padStart","join","ChannelDetailComponent_button_5_Template","ChannelDetailComponent_ng_template_7_Template","ChannelDetailComponent_vdr_card_13_Template","ChannelDetailComponent_vdr_form_field_18_Template","ChannelDetailComponent_vdr_form_item_19_Template","ChannelDetailComponent_option_29_Template","ChannelDetailComponent_option_45_Template","ChannelDetailComponent_option_50_Template","ChannelDetailComponent_clr_alert_56_Template","ChannelDetailComponent_clr_alert_62_Template","ChannelDetailComponent_vdr_card_68_Template","deleteChannelsBulkAction","DeleteChannel","deleteChannels","channel_r1","channel_r2","channel_r3","channel_r4","channel_r5","customField_r6","ctx_r6","GET_CHANNEL_LIST","ChannelListComponent","GetChannelListDocument","isDefaultChannel","ChannelListComponent_a_5_Template","ChannelListComponent_ng_template_17_Template","ChannelListComponent_ng_template_20_Template","ChannelListComponent_ng_template_23_Template","ChannelListComponent_ng_template_26_Template","ChannelListComponent_ng_template_29_Template","ChannelListComponent_vdr_dt2_custom_field_column_30_Template","CountryDetailComponent_ng_template_11_button_0_Template","GET_COUNTRY_DETAIL","COUNTRY_FRAGMENT","CountryDetailComponent","UpdateSettings","UpdateCountry","createUpdatedTranslatable","translatable","translations","updatedFields","customFieldConfig","defaultTranslation","createCountry","languageCode$","country","updateCountry","currentTranslation","findTranslation","setLanguage","CountryDetailComponent_button_9_Template","CountryDetailComponent_ng_template_11_Template","CountryDetailComponent_vdr_card_23_Template","CountryDetailComponent_vdr_card_36_Template","availableLanguages$","updateButton_r6","deleteCountriesBulkAction","DeleteSettings","DeleteCountry","deleteCountries","country_r1","country_r2","country_r3","country_r4","country_r5","CountryListComponent_ng_template_35_vdr_chip_0_Template","CountryListComponent_ng_template_35_vdr_chip_1_Template","country_r6","customField_r7","ctx_r7","GET_COUNTRY_LIST","CountryListComponent","CountryListComponent_a_8_Template","CountryListComponent_ng_template_20_Template","CountryListComponent_ng_template_23_Template","CountryListComponent_ng_template_26_Template","CountryListComponent_ng_template_29_Template","CountryListComponent_ng_template_32_Template","CountryListComponent_ng_template_35_Template","CountryListComponent_vdr_dt2_custom_field_column_36_Template","contentLanguage$","GET_GLOBAL_SETTINGS_DETAIL","GlobalSettingsComponent","availableLanguages","trackInventory","outOfStockThreshold","languageCodes","LanguageCode","UpdateGlobalSettings","languagesSelect","updateGlobalSettings","tap","refreshGlobalSettings","uiState","globalSettings","availableLangs","contentLanguage","setContentLanguage","GlobalSettingsComponent_button_4_Template","GlobalSettingsComponent_vdr_card_25_Template","selectedHandler","PaymentMethodDetailComponent_ng_template_11_button_0_Template","removeChecker","selectedChecker","selectedCheckerDefinition","checker_r8","_r7","selectChecker","PaymentMethodDetailComponent_div_45_button_7_Template","checkers","_r9","removeHandler","selectedHandlerDefinition","handler_r11","_r10","selectHandler","PaymentMethodDetailComponent_div_49_button_7_Template","handlers","GET_PAYMENT_METHOD_DETAIL","PAYMENT_METHOD_FRAGMENT","PaymentMethodDetailComponent","checker","handler","UpdatePaymentMethod","getPaymentMethodOperations","paymentMethodEligibilityCheckers","paymentMethodHandlers","updateCode","currentCode","nameValue","normalizeString","configurableDefinitionToInstance","formControl","clearValidators","updateValueAndValidity","onlySelf","markAsDirty","getUpdatedPaymentMethod","createPaymentMethod","paymentMethod","updatePaymentMethod","formGroup","toConfigurableOperationInput","args","getConfigArgValue","PaymentMethodDetailComponent_button_9_Template","PaymentMethodDetailComponent_ng_template_11_Template","PaymentMethodDetailComponent_vdr_card_23_Template","target","PaymentMethodDetailComponent_vdr_card_40_Template","PaymentMethodDetailComponent_vdr_configurable_input_44_Template","PaymentMethodDetailComponent_div_45_Template","PaymentMethodDetailComponent_vdr_configurable_input_48_Template","PaymentMethodDetailComponent_div_49_Template","updateButton_r12","deletePaymentMethodsBulkAction","DeletePaymentMethod","shouldRetryItem","response","retrying","deletePaymentMethods","assignPaymentMethodsToChannelBulkAction","createBulkAssignToChannelAction","bulkAssignToChannel","paymentMethodIds","channelIds","mutate","AssignPaymentMethodsToChannelDocument","assignPaymentMethodsToChannel","removePaymentMethodsFromChannelBulkAction","createBulkRemoveFromChannelAction","bulkRemoveFromChannel","RemovePaymentMethodsFromChannelDocument","removePaymentMethodsFromChannel","paymentMethod_r1","paymentMethod_r2","paymentMethod_r3","paymentMethod_r4","paymentMethod_r5","PaymentMethodListComponent_ng_template_35_vdr_chip_0_Template","PaymentMethodListComponent_ng_template_35_vdr_chip_1_Template","paymentMethod_r6","GET_PAYMENT_METHOD_LIST","PaymentMethodListComponent","GetPaymentMethodListDocument","paymentMethods","PaymentMethodListComponent_a_8_Template","PaymentMethodListComponent_ng_template_20_Template","PaymentMethodListComponent_ng_template_23_Template","PaymentMethodListComponent_ng_template_26_Template","PaymentMethodListComponent_ng_template_29_Template","PaymentMethodListComponent_ng_template_32_Template","PaymentMethodListComponent_ng_template_35_Template","PaymentMethodListComponent_vdr_dt2_custom_field_column_36_Template","entity_r1","GET_PROFILE_DETAIL","ProfileComponent","updateActiveAdministrator","ProfileComponent_vdr_card_11_Template","ProfileComponent_vdr_form_field_25_Template","ProfileComponent_vdr_card_30_Template","RoleDetailComponent_ng_template_7_button_0_Template","GET_ROLE_DETAIL","ROLE_FRAGMENT","RoleDetailComponent","change","currentPermissions","newValue","unique","createRole","updateRole","detectChanges","RoleDetailComponent_button_5_Template","RoleDetailComponent_ng_template_7_Template","RoleDetailComponent_vdr_card_13_Template","tmp_14_0","deleteRolesBulkAction","deleteRoles","role_r1","role_r2","role_r3","role_r4","RoleListComponent_ng_template_26_a_0_Template","RoleListComponent_ng_template_26_ng_template_1_Template","ctx_r5","isDefaultRole","defaultRole_r5","role_r7","RoleListComponent_ng_template_29_span_0_Template","channel_r8","RoleListComponent_ng_template_32_ng_container_0_vdr_chip_1_Template","role_r9","RoleListComponent_ng_template_32_ng_container_0_Template","permission_r10","role_r12","initialLimit","_r11","toggleDisplayLimit","RoleListComponent_ng_template_35_ng_container_0_button_4_ng_container_1_Template","RoleListComponent_ng_template_35_ng_container_0_button_4_ng_template_2_Template","displayLimit","collapse_r13","RoleListComponent_ng_template_35_ng_container_0_vdr_chip_2_Template","RoleListComponent_ng_template_35_ng_container_0_button_4_Template","RoleListComponent_ng_template_35_ng_container_0_Template","RoleListComponent_ng_template_35_ng_template_1_Template","defaultRole_r14","GET_ROLE_LIST","RoleListComponent","GetRoleListDocument","SUPER_ADMIN_ROLE_CODE","RoleListComponent_a_5_Template","RoleListComponent_ng_template_17_Template","RoleListComponent_ng_template_20_Template","RoleListComponent_ng_template_23_Template","RoleListComponent_ng_template_26_Template","RoleListComponent_ng_template_29_Template","RoleListComponent_ng_template_32_Template","RoleListComponent_ng_template_35_Template","SellerDetailComponent_ng_template_7_button_0_Template","GET_SELLER_DETAIL","SellerDetailComponent","UpdateSeller","CreateSeller","createSeller","updateSeller","SellerDetailComponent_button_5_Template","SellerDetailComponent_ng_template_7_Template","SellerDetailComponent_vdr_card_13_Template","SellerDetailComponent_vdr_card_22_Template","updateButton_r5","deleteSellersBulkAction","DeleteSeller","deleteSellers","seller_r1","seller_r2","seller_r3","seller_r4","customField_r5","SellerListComponent","GetSellerListDocument","SellerListComponent_a_5_Template","SellerListComponent_ng_template_17_Template","SellerListComponent_ng_template_20_Template","SellerListComponent_ng_template_23_Template","SellerListComponent_ng_template_26_Template","SellerListComponent_vdr_dt2_custom_field_column_27_Template","quote_r1","metadata","ShippingEligibilityTestResultComponent_div_2_vdr_object_tree_14_Template","testDataUpdated","price","currencyCode","priceWithTax","ShippingEligibilityTestResultComponent","okToRun","runTest","testResult","ShippingEligibilityTestResultComponent_div_2_Template","ShippingEligibilityTestResultComponent_div_3_Template","line_r3","quantity","ctx_r3","updateQuantity","removeLine","preview","sku","unitPriceWithTax","TestOrderBuilderComponent_table_0_tr_19_Template","lines","subTotal","TestOrderBuilderComponent","reduce","sum","l","localStorageService","orderLinesChange","loadFromLocalStorage","getActiveChannel","result","activeChannel","selectResult","addToLines","productVariantId","productVariantName","productAsset","persistToLocalStorage","line","setForCurrentLocation","getForCurrentLocation","TestOrderBuilderComponent_table_0_Template","TestOrderBuilderComponent_ng_template_1_Template","emptyPlaceholder_r5","TestAddressFormComponent","addressChange","getAvailableCountries","initialValue","city","countryCode","postalCode","province","form","subscription","unsubscribe","TestAddressFormComponent_option_18_Template","quote","ShippingMethodTestResultComponent","ShippingMethodTestResultComponent_clr_icon_9_Template","ShippingMethodTestResultComponent_clr_icon_10_Template","ShippingMethodTestResultComponent_clr_icon_11_Template","ShippingMethodTestResultComponent_vdr_labeled_data_14_Template","ShippingMethodTestResultComponent_vdr_labeled_data_15_Template","ShippingMethodTestResultComponent_vdr_object_tree_16_Template","eligible","selectedCalculator","ShippingMethodDetailComponent_ng_template_11_button_0_Template","handler_r6","checker_r9","_r8","ShippingMethodDetailComponent_div_44_button_7_Template","selectedCalculatorDefinition","calculator_r12","selectCalculator","ShippingMethodDetailComponent_div_48_button_7_Template","calculators","GET_SHIPPING_METHOD_DETAIL","SHIPPING_METHOD_FRAGMENT","ShippingMethodDetailComponent","fulfillmentHandler","calculator","fulfillmentHandlers","UpdateShippingMethod","fetchTestResult$","shippingMethod","getShippingMethodOperations","shippingEligibilityCheckers","shippingCalculators","activeChannel$","testResult$","address","shippingAddress","streetLine1","testShippingMethod","getUpdatedShippingMethod","fulfillmentHandlerCode","createShippingMethod","updateShippingMethod","console","setTestOrderLines","event","testOrderLines","setTestAddress","testAddress","allTestDataPresent","ShippingMethodDetailComponent_button_9_Template","ShippingMethodDetailComponent_ng_template_11_Template","ShippingMethodDetailComponent_vdr_card_17_Template","ShippingMethodDetailComponent_option_38_Template","ShippingMethodDetailComponent_vdr_card_39_Template","ShippingMethodDetailComponent_vdr_configurable_input_43_Template","ShippingMethodDetailComponent_div_44_Template","ShippingMethodDetailComponent_vdr_configurable_input_47_Template","ShippingMethodDetailComponent_div_48_Template","updateButton_r13","tmp_28_0","deleteShippingMethodsBulkAction","DeleteShippingMethod","deleteShippingMethods","assignShippingMethodsToChannelBulkAction","shippingMethodIds","AssignShippingMethodsToChannelDocument","assignShippingMethodsToChannel","removeShippingMethodsFromChannelBulkAction","RemoveShippingMethodsFromChannelDocument","removeShippingMethodsFromChannel","shippingMethod_r1","shippingMethod_r2","shippingMethod_r3","shippingMethod_r4","shippingMethod_r5","shippingMethod_r6","shippingMethod_r7","GET_SHIPPING_METHOD_LIST","ShippingMethodListComponent","GetShippingMethodListDocument","shippingMethods","ShippingMethodListComponent_a_8_Template","ShippingMethodListComponent_ng_template_20_Template","ShippingMethodListComponent_ng_template_23_Template","ShippingMethodListComponent_ng_template_26_Template","ShippingMethodListComponent_ng_template_29_Template","ShippingMethodListComponent_ng_template_32_Template","ShippingMethodListComponent_ng_template_35_Template","ShippingMethodListComponent_ng_template_38_Template","ShippingMethodListComponent_vdr_dt2_custom_field_column_39_Template","StockLocationDetailComponent_ng_template_7_button_0_Template","STOCK_LOCATION_DETAIL_FRAGMENT","GET_STOCK_LOCATION_DETAIL","CREATE_STOCK_LOCATION","UPDATE_STOCK_LOCATION","StockLocationDetailComponent","CreateStockLocationDocument","createStockLocation","taxRate","UpdateStockLocationDocument","StockLocationDetailComponent_button_5_Template","StockLocationDetailComponent_ng_template_7_Template","StockLocationDetailComponent_vdr_card_13_Template","StockLocationDetailComponent_vdr_card_27_Template","deleteStockLocationsBulkAction","DeleteStockLocation","DeleteCatalog","DeleteStockLocationsDocument","deleteStockLocations","DeletionResult","NOT_DELETED","assignStockLocationsToChannelBulkAction","UpdateCatalog","UpdateStockLocation","stockLocationIds","AssignStockLocationsToChannelDocument","assignStockLocationsToChannel","removeStockLocationsFromChannelBulkAction","RemoveStockLocationsFromChannelDocument","removeStockLocationsFromChannel","stockLocation_r1","stockLocation_r2","stockLocation_r3","stockLocation_r4","stockLocation_r5","field_r6","GET_STOCK_LOCATION_LIST","StockLocationListComponent","addFilters","addSorts","GetStockLocationListDocument","stockLocations","StockLocationListComponent_a_5_Template","StockLocationListComponent_ng_template_17_Template","StockLocationListComponent_ng_template_20_Template","StockLocationListComponent_ng_template_23_Template","StockLocationListComponent_ng_template_26_Template","StockLocationListComponent_ng_template_29_Template","StockLocationListComponent_vdr_dt2_custom_field_column_30_Template","TaxCategoryDetailComponent_ng_template_7_button_0_Template","GET_TAX_CATEGORY_DETAIL","TAX_CATEGORY_FRAGMENT","TaxCategoryDetailComponent","isDefault","UpdateTaxCategory","createTaxCategory","taxCategory","updateTaxCategory","TaxCategoryDetailComponent_button_5_Template","TaxCategoryDetailComponent_ng_template_7_Template","TaxCategoryDetailComponent_vdr_card_13_Template","TaxCategoryDetailComponent_vdr_card_27_Template","deleteTaxCategoriesBulkAction","DeleteTaxCategory","deleteTaxCategories","taxCategory_r1","taxCategory_r2","taxCategory_r3","taxCategory_r4","TaxCategoryListComponent_ng_template_29_vdr_chip_0_Template","taxCategory_r5","GET_TAX_CATEGORY_LIST","TaxCategoryListComponent","getCustomFieldsFor","GetTaxCategoryListDocument","taxCategories","TaxCategoryListComponent_a_5_Template","TaxCategoryListComponent_ng_template_17_Template","TaxCategoryListComponent_ng_template_20_Template","TaxCategoryListComponent_ng_template_23_Template","TaxCategoryListComponent_ng_template_26_Template","TaxCategoryListComponent_ng_template_29_Template","TaxCategoryListComponent_vdr_dt2_custom_field_column_30_Template","TaxRateDetailComponent_ng_template_7_button_0_Template","GET_TAX_RATE_DETAIL","TAX_RATE_FRAGMENT","TaxRateDetailComponent","taxCategoryId","customerGroupId","UpdateTaxRate","taxCategories$","getTaxCategories","categoryId","createTaxRate","updateTaxRate","category","customerGroup","TaxRateDetailComponent_button_5_Template","TaxRateDetailComponent_ng_template_7_Template","TaxRateDetailComponent_vdr_card_19_Template","TaxRateDetailComponent_option_37_Template","TaxRateDetailComponent_vdr_card_43_Template","deleteTaxRatesBulkAction","DeleteTaxRate","deleteTaxRates","taxRate_r1","taxRate_r2","taxRate_r3","taxRate_r4","taxRate_r5","taxRate_r6","taxRate_r7","taxRate_r8","TaxRateListComponent_ng_template_41_vdr_chip_0_Template","TaxRateListComponent_ng_template_41_vdr_chip_1_Template","taxRate_r9","customField_r10","ctx_r10","GET_TAX_RATE_LIST","TaxRateListComponent","GetTaxRateListDocument","taxRates","TaxRateListComponent_a_5_Template","TaxRateListComponent_ng_template_17_Template","TaxRateListComponent_ng_template_20_Template","TaxRateListComponent_ng_template_23_Template","TaxRateListComponent_ng_template_26_Template","TaxRateListComponent_ng_template_29_Template","TaxRateListComponent_ng_template_32_Template","TaxRateListComponent_ng_template_35_Template","TaxRateListComponent_ng_template_38_Template","TaxRateListComponent_ng_template_41_Template","TaxRateListComponent_vdr_dt2_custom_field_column_42_Template","TestShippingMethodsComponent","testEligibleShippingMethods","tmp_0_0","ZoneDetailComponent_ng_template_7_button_0_Template","GET_ZONE_DETAIL","ZoneDetailComponent","UpdateZone","createZone","updateZone","ZoneDetailComponent_button_5_Template","ZoneDetailComponent_ng_template_7_Template","ZoneDetailComponent_vdr_card_13_Template","ZoneDetailComponent_vdr_card_22_Template","deleteZonesBulkAction","DeleteZone","deleteZones","customerGroup_r3","customerGroup_r4","customerGroup_r5","customerGroup_r6","_c3","customerGroup_r7","ZoneListComponent_ng_template_12_ng_template_11_Template","ZoneListComponent_ng_template_12_ng_template_14_Template","ZoneListComponent_ng_template_12_ng_template_17_Template","ZoneListComponent_ng_template_12_ng_template_20_Template","ZoneListComponent_ng_template_12_ng_template_23_Template","ZoneListComponent_ng_template_12_vdr_dt2_custom_field_column_24_Template","activeIndex$","activeZone_r12","activeZone_r10","ngIf","addToZone","ZoneListComponent_ng_template_13_ng_container_0_vdr_zone_member_list_6_Template","_c4","activeZone$","ZoneListComponent_ng_template_13_ng_container_0_Template","GET_ZONE_LIST","ZoneListComponent","modalService","GetZoneListDocument","zones","activeZoneId$","paramMap","pm","distinctUntilChanged","activeZoneId","z","findIndex","g","closeMembers","params","snapshot","contents","queryParamsHandling","fromComponent","locals","size","memberIds","addMembersToZone","mapTo","EMPTY","countryCount","refreshMemberList","zoneMemberList","viewQuery","ZoneListComponent_a_8_Template","ZoneListComponent_ng_template_12_Template","ZoneListComponent_ng_template_13_Template","tmp_4_0","removeZoneMembersBulkAction","icon","iconClass","UpdateCustomerGroup","onClick","injector","hostComponent","clearSelection","DataService","NotificationService","removeMembersFromZone","ProfileResolver","BaseEntityResolver","getActiveAdministrator","activeAdministrator","jDH","factory","ɵfac","providedIn","createRoutes","pageService","path","component","PageComponent","breadcrumb","resolve","detail","inject","GetProfileDetailDocument","children","getPageTabRoutes","link","GetGlobalSettingsDetailDocument","SettingsModule","hasRegisteredTabsAndBulkActions","bulkActionRegistryService","registerBulkAction","registerPageTab","priority","tab","detailComponentWithResolver","GetSellerDetailDocument","entityKey","getBreadcrumbs","GetChannelDetailDocument","GetAdministratorDetailDocument","GetRoleDetailDocument","GetShippingMethodDetailDocument","GetPaymentMethodDetailDocument","GetTaxCategoryDetailDocument","GetTaxRateDetailDocument","GetCountryDetailDocument","GetZoneDetailDocument","GetStockLocationDetailDocument","$C","G2t","provide","ROUTES","useFactory","multi","deps","PageService","imports","SharedModule","RouterModule","forChild"],"ignoreList":[],"sourceRoot":"webpack:///","sources":["../node_modules/rxjs/dist/esm/internal/operators/withLatestFrom.js","./src/lib/settings/src/components/zone-member-list/zone-member-controls.directive.ts","./src/lib/settings/src/components/zone-member-list/zone-member-list-header.directive.ts","./src/lib/settings/src/components/zone-member-list/zone-member-list.component.html","./src/lib/settings/src/components/zone-member-list/zone-member-list.component.ts","./src/lib/settings/src/components/add-country-to-zone-dialog/add-country-to-zone-dialog.component.html","./src/lib/settings/src/components/add-country-to-zone-dialog/add-country-to-zone-dialog.component.ts","./src/lib/settings/src/components/permission-grid/permission-grid.component.html","./src/lib/settings/src/components/permission-grid/permission-grid.component.ts","./src/lib/settings/src/components/admin-detail/admin-detail.component.html","./src/lib/settings/src/components/admin-detail/admin-detail.component.ts","./src/lib/settings/src/components/administrator-list/administrator-list-bulk-actions.ts","./src/lib/settings/src/components/administrator-list/administrator-list.component.html","./src/lib/settings/src/components/administrator-list/administrator-list.component.ts","./src/lib/settings/src/components/channel-detail/channel-detail.component.html","./src/lib/settings/src/components/channel-detail/channel-detail.component.ts","./src/lib/settings/src/components/channel-list/channel-list-bulk-actions.ts","./src/lib/settings/src/components/channel-list/channel-list.component.html","./src/lib/settings/src/components/channel-list/channel-list.component.ts","./src/lib/settings/src/components/country-detail/country-detail.component.html","./src/lib/settings/src/components/country-detail/country-detail.component.ts","./src/lib/settings/src/components/country-list/country-list-bulk-actions.ts","./src/lib/settings/src/components/country-list/country-list.component.html","./src/lib/settings/src/components/country-list/country-list.component.ts","./src/lib/settings/src/components/global-settings/global-settings.component.html","./src/lib/settings/src/components/global-settings/global-settings.component.ts","./src/lib/settings/src/components/payment-method-detail/payment-method-detail.component.html","./src/lib/settings/src/components/payment-method-detail/payment-method-detail.component.ts","./src/lib/settings/src/components/payment-method-list/payment-method-list-bulk-actions.ts","./src/lib/settings/src/components/payment-method-list/payment-method-list.component.html","./src/lib/settings/src/components/payment-method-list/payment-method-list.component.ts","./src/lib/settings/src/components/profile/profile.component.html","./src/lib/settings/src/components/profile/profile.component.ts","./src/lib/settings/src/components/role-detail/role-detail.component.html","./src/lib/settings/src/components/role-detail/role-detail.component.ts","./src/lib/settings/src/components/role-list/role-list-bulk-actions.ts","./src/lib/settings/src/components/role-list/role-list.component.html","./src/lib/settings/src/components/role-list/role-list.component.ts","./src/lib/settings/src/components/seller-detail/seller-detail.component.html","./src/lib/settings/src/components/seller-detail/seller-detail.component.ts","./src/lib/settings/src/components/seller-list/seller-list-bulk-actions.ts","./src/lib/settings/src/components/seller-list/seller-list.component.html","./src/lib/settings/src/components/seller-list/seller-list.component.ts","./src/lib/settings/src/components/shipping-eligibility-test-result/shipping-eligibility-test-result.component.html","./src/lib/settings/src/components/shipping-eligibility-test-result/shipping-eligibility-test-result.component.ts","./src/lib/settings/src/components/test-order-builder/test-order-builder.component.html","./src/lib/settings/src/components/test-order-builder/test-order-builder.component.ts","./src/lib/settings/src/components/test-address-form/test-address-form.component.html","./src/lib/settings/src/components/test-address-form/test-address-form.component.ts","./src/lib/settings/src/components/shipping-method-test-result/shipping-method-test-result.component.html","./src/lib/settings/src/components/shipping-method-test-result/shipping-method-test-result.component.ts","./src/lib/settings/src/components/shipping-method-detail/shipping-method-detail.component.html","./src/lib/settings/src/components/shipping-method-detail/shipping-method-detail.component.ts","./src/lib/settings/src/components/shipping-method-list/shipping-method-list-bulk-actions.ts","./src/lib/settings/src/components/shipping-method-list/shipping-method-list.component.html","./src/lib/settings/src/components/shipping-method-list/shipping-method-list.component.ts","./src/lib/settings/src/components/stock-location-detail/stock-location-detail.component.html","./src/lib/settings/src/components/stock-location-detail/stock-location-detail.component.ts","./src/lib/settings/src/components/stock-location-list/stock-location-list-bulk-actions.ts","./src/lib/settings/src/components/stock-location-list/stock-location-list.component.html","./src/lib/settings/src/components/stock-location-list/stock-location-list.component.ts","./src/lib/settings/src/components/tax-category-detail/tax-category-detail.component.html","./src/lib/settings/src/components/tax-category-detail/tax-category-detail.component.ts","./src/lib/settings/src/components/tax-category-list/tax-category-list-bulk-actions.ts","./src/lib/settings/src/components/tax-category-list/tax-category-list.component.html","./src/lib/settings/src/components/tax-category-list/tax-category-list.component.ts","./src/lib/settings/src/components/tax-rate-detail/tax-rate-detail.component.html","./src/lib/settings/src/components/tax-rate-detail/tax-rate-detail.component.ts","./src/lib/settings/src/components/tax-rate-list/tax-rate-list-bulk-actions.ts","./src/lib/settings/src/components/tax-rate-list/tax-rate-list.component.html","./src/lib/settings/src/components/tax-rate-list/tax-rate-list.component.ts","./src/lib/settings/src/components/test-shipping-methods/test-shipping-methods.component.ts","./src/lib/settings/src/components/test-shipping-methods/test-shipping-methods.component.html","./src/lib/settings/src/components/zone-detail/zone-detail.component.html","./src/lib/settings/src/components/zone-detail/zone-detail.component.ts","./src/lib/settings/src/components/zone-list/zone-list-bulk-actions.ts","./src/lib/settings/src/components/zone-list/zone-list.component.html","./src/lib/settings/src/components/zone-list/zone-list.component.ts","./src/lib/settings/src/components/zone-member-list/zone-member-list-bulk-actions.ts","./src/lib/settings/src/providers/routing/profile-resolver.ts","./src/lib/settings/src/settings.routes.ts","./src/lib/settings/src/settings.module.ts"],"sourcesContent":["import { operate } from '../util/lift';\nimport { createOperatorSubscriber } from './OperatorSubscriber';\nimport { innerFrom } from '../observable/innerFrom';\nimport { identity } from '../util/identity';\nimport { noop } from '../util/noop';\nimport { popResultSelector } from '../util/args';\nexport function withLatestFrom(...inputs) {\n    const project = popResultSelector(inputs);\n    return operate((source, subscriber) => {\n        const len = inputs.length;\n        const otherValues = new Array(len);\n        let hasValue = inputs.map(() => false);\n        let ready = false;\n        for (let i = 0; i < len; i++) {\n            innerFrom(inputs[i]).subscribe(createOperatorSubscriber(subscriber, (value) => {\n                otherValues[i] = value;\n                if (!ready && !hasValue[i]) {\n                    hasValue[i] = true;\n                    (ready = hasValue.every(identity)) && (hasValue = null);\n                }\n            }, noop));\n        }\n        source.subscribe(createOperatorSubscriber(subscriber, (value) => {\n            if (ready) {\n                const values = [value, ...otherValues];\n                subscriber.next(project ? project(...values) : values);\n            }\n        }));\n    });\n}\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[vdrZoneMemberControls]',\r\n})\r\nexport class ZoneMemberControlsDirective {\r\n    constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[vdrZoneMemberListHeader]',\r\n})\r\nexport class ZoneMemberListHeaderDirective {\r\n    constructor(public templateRef: TemplateRef<any>) {}\r\n}\r\n","<vdr-data-table-2\r\n    [id]=\"locationId\"\r\n    [items]=\"filteredMembers$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage\"\r\n    [currentPage]=\"currentPage\"\r\n    (itemsPerPageChange)=\"itemsPerPage = $event\"\r\n    (pageChange)=\"currentPage = $event\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        [locationId]=\"locationId\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    ></vdr-bulk-action-menu>\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"filterTermControl\"\r\n        [searchTermPlaceholder]=\"'common.search-by-name' | translate\"\r\n    ></vdr-dt2-search>\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.created-at' | translate\" id=\"created-at\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.updated-at' | translate\" id=\"updated-at\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\">\r\n        <ng-template let-member=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['/settings/countries', member.id]\"\r\n                ><span> {{ member.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\">\r\n        <ng-template let-member=\"item\">\r\n            {{ member.code }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.enabled' | translate\" id=\"enabled\">\r\n        <ng-template let-member=\"item\">\r\n            <vdr-chip  *ngIf=\"member.enabled\" colorType=\"success\">{{ 'common.enabled' | translate }}</vdr-chip>\r\n            <vdr-chip  *ngIf=\"!member.enabled\" colorType=\"warning\">{{ 'common.disabled' | translate }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n</vdr-data-table-2>\r\n","import {\r\n    ChangeDetectionStrategy,\r\n    Component,\r\n    ContentChild,\r\n    EventEmitter,\r\n    Input,\r\n    OnChanges,\r\n    OnDestroy,\r\n    OnInit,\r\n    Output,\r\n    SimpleChanges,\r\n} from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport {\r\n    BulkActionLocationId,\r\n    DataService,\r\n    GetZoneListQuery,\r\n    GetZoneMembersDocument,\r\n    GetZoneMembersQuery,\r\n    ItemOf,\r\n    SelectionManager,\r\n} from '@vendure/admin-ui/core';\r\nimport { BehaviorSubject, combineLatest, merge, Observable, of, Subject, switchMap } from 'rxjs';\r\nimport { map, startWith, take, takeUntil } from 'rxjs/operators';\r\n\r\nimport { ZoneMemberControlsDirective } from './zone-member-controls.directive';\r\nimport { ZoneMemberListHeaderDirective } from './zone-member-list-header.directive';\r\n\r\nexport type ZoneMember = { id: string; name: string; code: string };\r\n\r\n@Component({\r\n    selector: 'vdr-zone-member-list',\r\n    templateUrl: './zone-member-list.component.html',\r\n    styleUrls: ['./zone-member-list.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZoneMemberListComponent implements OnInit, OnChanges, OnDestroy {\r\n    @Input() locationId: BulkActionLocationId;\r\n    @Input() members?: ZoneMember[];\r\n    @Input() selectedMemberIds: string[] = [];\r\n    @Input() activeZone: ItemOf<GetZoneListQuery, 'zones'>;\r\n    @Output() selectionChange = new EventEmitter<string[]>();\r\n    @ContentChild(ZoneMemberListHeaderDirective) headerTemplate: ZoneMemberListHeaderDirective;\r\n    @ContentChild(ZoneMemberControlsDirective) controlsTemplate: ZoneMemberControlsDirective;\r\n    members$: Observable<NonNullable<GetZoneMembersQuery['zone']>['members'] | ZoneMember[]>;\r\n    filterTermControl = new FormControl('');\r\n    filteredMembers$: Observable<ZoneMember[]>;\r\n    totalItems$: Observable<number>;\r\n    currentPage = 1;\r\n    itemsPerPage = 10;\r\n    selectionManager = new SelectionManager<ZoneMember>({\r\n        multiSelect: true,\r\n        itemsAreEqual: (a, b) => a.id === b.id,\r\n        additiveMode: true,\r\n    });\r\n    private membersInput$ = new Subject<ZoneMember[]>();\r\n    private activeZoneInput$ = new BehaviorSubject<ItemOf<GetZoneListQuery, 'zones'> | undefined>(undefined);\r\n    private destroy$ = new Subject<void>();\r\n    private refresh$ = new Subject<void>();\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        const activeZoneMembers$ = merge(this.activeZoneInput$, this.refresh$).pipe(\r\n            switchMap(activeZone =>\r\n                this.activeZone\r\n                    ? this.dataService\r\n                          .query(GetZoneMembersDocument, { zoneId: this.activeZone.id })\r\n                          .mapSingle(({ zone }) => zone?.members ?? [])\r\n                    : of([]),\r\n            ),\r\n        );\r\n        this.members$ = merge(activeZoneMembers$, this.membersInput$);\r\n\r\n        this.members$.pipe(take(1)).subscribe(members => {\r\n            this.selectionManager.setCurrentItems(\r\n                members?.filter(m => this.selectedMemberIds.includes(m.id)) ?? [],\r\n            );\r\n        });\r\n        this.selectionManager.selectionChanges$.pipe(takeUntil(this.destroy$)).subscribe(selection => {\r\n            this.selectionChange.emit(selection.map(s => s.id));\r\n        });\r\n        this.filteredMembers$ = combineLatest(\r\n            this.members$,\r\n            this.filterTermControl.valueChanges.pipe(startWith('')),\r\n        ).pipe(\r\n            map(([members, filterTerm]) => {\r\n                if (filterTerm) {\r\n                    const term = filterTerm?.toLocaleLowerCase() ?? '';\r\n                    return members.filter(\r\n                        m =>\r\n                            m.name.toLocaleLowerCase().includes(term) ||\r\n                            m.code.toLocaleLowerCase().includes(term),\r\n                    );\r\n                } else {\r\n                    return members;\r\n                }\r\n            }),\r\n        );\r\n        this.totalItems$ = this.filteredMembers$.pipe(map(members => members.length));\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if ('members' in changes) {\r\n            this.membersInput$.next(this.members ?? []);\r\n        }\r\n        if ('activeZone' in changes) {\r\n            this.activeZoneInput$.next(this.activeZone);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n    }\r\n\r\n    refresh() {\r\n        this.refresh$.next();\r\n    }\r\n}\r\n","<ng-template vdrDialogTitle>{{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}</ng-template>\r\n\r\n<vdr-zone-member-list\r\n    [members]=\"availableCountries$ | async\"\r\n    [selectedMemberIds]=\"selectedMemberIds\"\r\n    (selectionChange)=\"selectedMemberIds = $event\"\r\n>\r\n</vdr-zone-member-list>\r\n\r\n<ng-template vdrDialogButtons>\r\n    <button type=\"button\" class=\"btn\" (click)=\"cancel()\">{{ 'common.cancel' | translate }}</button>\r\n    <button type=\"submit\" (click)=\"add()\" [disabled]=\"!selectedMemberIds.length\" class=\"btn btn-primary\">\r\n        {{ 'settings.add-countries-to-zone' | translate: { zoneName: zoneName } }}\r\n    </button>\r\n</ng-template>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n    DataService,\r\n    Dialog,\r\n    GetCountryListDocument,\r\n    GetCountryListQuery,\r\n    GetZoneListQuery,\r\n    GetZoneMembersDocument,\r\n    GetZoneMembersQuery,\r\n    ItemOf,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { Observable } from 'rxjs';\r\nimport { map, withLatestFrom } from 'rxjs/operators';\r\n\r\nexport const GET_ZONE_MEMBERS = gql`\r\n    query GetZoneMembers($zoneId: ID!) {\r\n        zone(id: $zoneId) {\r\n            id\r\n            createdAt\r\n            updatedAt\r\n            name\r\n            members {\r\n                createdAt\r\n                updatedAt\r\n                id\r\n                name\r\n                code\r\n                enabled\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-add-country-to-zone-dialog',\r\n    templateUrl: './add-country-to-zone-dialog.component.html',\r\n    styleUrls: ['./add-country-to-zone-dialog.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AddCountryToZoneDialogComponent implements Dialog<string[]>, OnInit {\r\n    resolveWith: (result?: string[]) => void;\r\n    zoneName: string;\r\n    zoneId: string;\r\n    currentMembers$: Observable<NonNullable<GetZoneMembersQuery['zone']>['members']>;\r\n    availableCountries$: Observable<Array<ItemOf<GetCountryListQuery, 'countries'>>>;\r\n    selectedMemberIds: string[] = [];\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit(): void {\r\n        this.currentMembers$ = this.dataService\r\n            .query(GetZoneMembersDocument, { zoneId: this.zoneId })\r\n            .mapSingle(({ zone }) => zone?.members ?? []);\r\n        this.availableCountries$ = this.dataService\r\n            .query(GetCountryListDocument, {\r\n                options: { take: 999 },\r\n            })\r\n            .mapStream(data => data.countries.items)\r\n            .pipe(\r\n                withLatestFrom(this.currentMembers$),\r\n                map(([countries, currentMembers]) =>\r\n                    countries.filter(c => !currentMembers.find(cm => cm.id === c.id)),\r\n                ),\r\n            );\r\n    }\r\n\r\n    cancel() {\r\n        this.resolveWith();\r\n    }\r\n\r\n    add() {\r\n        this.resolveWith(this.selectedMemberIds);\r\n    }\r\n}\r\n","<table class=\"table\">\r\n    <tbody>\r\n        <tr *ngFor=\"let section of gridData\">\r\n            <td class=\"permission-group left\">\r\n                <div><strong>{{ section.label | translate }}</strong></div>\r\n                <small>{{ section.description | translate }}</small><br>\r\n                <button *ngIf=\"1 < section.permissions.length && !readonly\" class=\"button-small\" (click)=\"toggleAll(section.permissions)\">\r\n                    {{ 'common.toggle-all' | translate }}\r\n                </button>\r\n            </td>\r\n            <td *ngFor=\"let permission of section.permissions\" [attr.colspan]=\"section.permissions.length === 1 ? 4 : 1\">\r\n                <vdr-select-toggle\r\n                    size=\"small\"\r\n                    [title]=\"permission.description\"\r\n                    [label]=\"permission.name\"\r\n                    [disabled]=\"readonly\"\r\n                    [selected]=\"activePermissions?.includes(permission.name)\"\r\n                    (selectedChange)=\"setPermission(permission.name, $event)\"\r\n                ></vdr-select-toggle>\r\n            </td>\r\n        </tr>\r\n    </tbody>\r\n</table>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnInit, Output } from '@angular/core';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { PermissionDefinition } from '@vendure/admin-ui/core';\r\n\r\nexport interface PermissionGridRow {\r\n    label: string;\r\n    description: string;\r\n    permissions: PermissionDefinition[];\r\n}\r\n\r\n/**\r\n * A table showing and allowing the setting of all possible CRUD permissions.\r\n */\r\n@Component({\r\n    selector: 'vdr-permission-grid',\r\n    templateUrl: './permission-grid.component.html',\r\n    styleUrls: ['./permission-grid.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PermissionGridComponent implements OnInit {\r\n    @Input() permissionDefinitions: PermissionDefinition[];\r\n    @Input() activePermissions: string[];\r\n    @Input() readonly = false;\r\n    @Output() permissionChange = new EventEmitter<{ permission: string; value: boolean }>();\r\n    gridData: PermissionGridRow[];\r\n\r\n    ngOnInit() {\r\n        this.buildGrid();\r\n    }\r\n\r\n    setPermission(permission: string, value: boolean) {\r\n        if (!this.readonly) {\r\n            this.permissionChange.emit({ permission, value });\r\n        }\r\n    }\r\n\r\n    toggleAll(defs: PermissionDefinition[]) {\r\n        const value = defs.some(d => !this.activePermissions.includes(d.name));\r\n        for (const def of defs) {\r\n            this.permissionChange.emit({ permission: def.name, value });\r\n        }\r\n    }\r\n\r\n    private buildGrid() {\r\n        const crudGroups = new Map<string, PermissionDefinition[]>();\r\n        const nonCrud: PermissionDefinition[] = [];\r\n        const crudRe = /^(Create|Read|Update|Delete)([a-zA-Z]+)$/;\r\n        for (const def of this.permissionDefinitions) {\r\n            const isCrud = crudRe.test(def.name);\r\n            if (isCrud) {\r\n                const groupName = def.name.match(crudRe)?.[2];\r\n                if (groupName) {\r\n                    const existing = crudGroups.get(groupName);\r\n                    if (existing) {\r\n                        existing.push(def);\r\n                    } else {\r\n                        crudGroups.set(groupName, [def]);\r\n                    }\r\n                }\r\n            } else if (def.assignable) {\r\n                nonCrud.push(def);\r\n            }\r\n        }\r\n        this.gridData = [\r\n            ...nonCrud.map(d => ({\r\n                label: d.name,\r\n                description: d.description,\r\n                permissions: [d],\r\n            })),\r\n            ...Array.from(crudGroups.entries()).map(([label, defs]) => ({\r\n                    label,\r\n                    description: this.extractCrudDescription(defs[0]),\r\n                    permissions: defs,\r\n                })),\r\n        ];\r\n    }\r\n\r\n    private extractCrudDescription(def: PermissionDefinition): string {\r\n        return def.description.replace(/Grants permission to [\\w]+/, 'Grants permissions on');\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"administrator-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    *vdrIfPermissions=\"'UpdateAdministrator'\"\r\n                    [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"administrator-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field\r\n                        [label]=\"'settings.email-address-or-identifier' | translate\"\r\n                        for=\"emailAddress\"\r\n                        class=\"form-grid-span\"\r\n                    >\r\n                        <input\r\n                            id=\"emailAddress\"\r\n                            type=\"text\"\r\n                            formControlName=\"emailAddress\"\r\n                            [readonly]=\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'settings.first-name' | translate\" for=\"firstName\">\r\n                        <input\r\n                            id=\"firstName\"\r\n                            type=\"text\"\r\n                            formControlName=\"firstName\"\r\n                            [readonly]=\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'settings.last-name' | translate\" for=\"lastName\">\r\n                        <input\r\n                            id=\"lastName\"\r\n                            type=\"text\"\r\n                            formControlName=\"lastName\"\r\n                            [readonly]=\"!(['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        *ngIf=\"isNew$ | async\"\r\n                        [label]=\"'settings.password' | translate\"\r\n                        for=\"password\"\r\n                    >\r\n                        <input id=\"password\" type=\"password\" formControlName=\"password\" />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        *ngIf=\"\r\n                            !(isNew$ | async) &&\r\n                            (['CreateAdministrator', 'UpdateAdministrator'] | hasPermission)\r\n                        \"\r\n                        [label]=\"'settings.password' | translate\"\r\n                        for=\"password\"\r\n                        [readOnlyToggle]=\"true\"\r\n                    >\r\n                        <input id=\"password\" type=\"password\" formControlName=\"password\" />\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Administrator\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"administrator-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n    <vdr-page-block>\r\n        <vdr-card [title]=\"'settings.roles' | translate\">\r\n            <ng-select\r\n                [items]=\"allRoles$ | async\"\r\n                [multiple]=\"true\"\r\n                [hideSelected]=\"true\"\r\n                formControlName=\"roles\"\r\n                (change)=\"rolesChanged($event)\"\r\n                bindLabel=\"description\"\r\n            ></ng-select>\r\n\r\n            <ul class=\"nav mt-2\" role=\"tablist\">\r\n                <li role=\"presentation\" class=\"nav-item\" *ngFor=\"let channel of getAvailableChannels()\">\r\n                    <button\r\n                        [id]=\"channel.channelId\"\r\n                        (click)=\"selectedChannelId = channel.channelId\"\r\n                        class=\"btn btn-link nav-link\"\r\n                        [class.active]=\"selectedChannelId === channel.channelId\"\r\n                        [attr.aria-selected]=\"selectedChannelId === channel.channelId\"\r\n                        type=\"button\"\r\n                    >\r\n                        {{ channel.channelCode | channelCodeToLabel | translate }}\r\n                    </button>\r\n                </li>\r\n            </ul>\r\n            <vdr-permission-grid\r\n                [activePermissions]=\"getPermissionsForSelectedChannel()\"\r\n                [permissionDefinitions]=\"permissionDefinitions\"\r\n                [readonly]=\"true\"\r\n            ></vdr-permission-grid>\r\n        </vdr-card>\r\n    </vdr-page-block>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { ResultOf } from '@graphql-typed-document-node/core';\r\nimport {\r\n    ADMINISTRATOR_FRAGMENT,\r\n    CreateAdministratorInput,\r\n    DataService,\r\n    GetAdministratorDetailDocument,\r\n    getCustomFieldsDefaults,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    PermissionDefinition,\r\n    RoleFragment,\r\n    TypedBaseDetailComponent,\r\n    UpdateAdministratorInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { CUSTOMER_ROLE_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { notNullOrUndefined } from '@vendure/common/lib/shared-utils';\r\nimport { gql } from 'apollo-angular';\r\nimport { Observable } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport interface PermissionsByChannel {\r\n    channelId: string;\r\n    channelCode: string;\r\n    permissions: { [K in Permission]: boolean };\r\n}\r\n\r\nexport const GET_ADMINISTRATOR_DETAIL = gql`\r\n    query GetAdministratorDetail($id: ID!) {\r\n        administrator(id: $id) {\r\n            ...Administrator\r\n        }\r\n    }\r\n    ${ADMINISTRATOR_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-admin-detail',\r\n    templateUrl: './admin-detail.component.html',\r\n    styleUrls: ['./admin-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class AdminDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetAdministratorDetailDocument, 'administrator'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('Administrator');\r\n    detailForm = this.formBuilder.group({\r\n        emailAddress: ['', Validators.required],\r\n        firstName: ['', Validators.required],\r\n        lastName: ['', Validators.required],\r\n        password: [''],\r\n        roles: [\r\n            [] as NonNullable<\r\n                ResultOf<typeof GetAdministratorDetailDocument>['administrator']\r\n            >['user']['roles'],\r\n        ],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n    permissionDefinitions: PermissionDefinition[];\r\n    allRoles$: Observable<RoleFragment[]>;\r\n    selectedRoles: RoleFragment[] = [];\r\n    selectedRolePermissions: { [channelId: string]: PermissionsByChannel } = {} as any;\r\n    selectedChannelId: string | null = null;\r\n\r\n    getAvailableChannels(): PermissionsByChannel[] {\r\n        return Object.values(this.selectedRolePermissions);\r\n    }\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.allRoles$ = this.dataService.administrator\r\n            .getRoles(999)\r\n            .mapStream(item => item.roles.items.filter(i => i.code !== CUSTOMER_ROLE_CODE));\r\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\r\n            if (\r\n                !userStatus.permissions.includes(Permission.CreateAdministrator) &&\r\n                !userStatus.permissions.includes(Permission.UpdateAdministrator)\r\n            ) {\r\n                const rolesSelect = this.detailForm.get('roles');\r\n                if (rolesSelect) {\r\n                    rolesSelect.disable();\r\n                }\r\n            }\r\n        });\r\n        this.permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    rolesChanged(roles: RoleFragment[]) {\r\n        this.buildPermissionsMap();\r\n    }\r\n\r\n    getPermissionsForSelectedChannel(): string[] {\r\n        function getActivePermissions(input: PermissionsByChannel['permissions']): string[] {\r\n            return Object.entries(input)\r\n                .filter(([permission, active]) => active)\r\n                .map(([permission, active]) => permission);\r\n        }\r\n        if (this.selectedChannelId) {\r\n            const selectedChannel = this.selectedRolePermissions[this.selectedChannelId];\r\n            if (selectedChannel) {\r\n                const permissionMap = this.selectedRolePermissions[this.selectedChannelId].permissions;\r\n                return getActivePermissions(permissionMap);\r\n            }\r\n        }\r\n        const channels = Object.values(this.selectedRolePermissions);\r\n        if (0 < channels.length) {\r\n            this.selectedChannelId = channels[0].channelId;\r\n            return getActivePermissions(channels[0].permissions);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    create() {\r\n        const { emailAddress, firstName, lastName, password, customFields, roles } = this.detailForm.value;\r\n        if (!emailAddress || !firstName || !lastName || !password) {\r\n            return;\r\n        }\r\n        const administrator: CreateAdministratorInput = {\r\n            emailAddress,\r\n            firstName,\r\n            lastName,\r\n            password,\r\n            customFields,\r\n            roleIds: roles?.map(role => role.id).filter(notNullOrUndefined) ?? [],\r\n        };\r\n        this.dataService.administrator.createAdministrator(administrator).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'Administrator',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createAdministrator.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'Administrator',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(({ id }) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const administrator: UpdateAdministratorInput = {\r\n                        id,\r\n                        emailAddress: formValue.emailAddress,\r\n                        firstName: formValue.firstName,\r\n                        lastName: formValue.lastName,\r\n                        password: formValue.password,\r\n                        customFields: formValue.customFields,\r\n                        roleIds: formValue.roles?.map(role => role.id),\r\n                    };\r\n                    return this.dataService.administrator.updateAdministrator(administrator);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Administrator',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Administrator',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    protected setFormValues(\r\n        entity: NonNullable<ResultOf<typeof GetAdministratorDetailDocument>['administrator']>,\r\n        languageCode: LanguageCode,\r\n    ) {\r\n        this.detailForm.patchValue({\r\n            emailAddress: entity.emailAddress,\r\n            firstName: entity.firstName,\r\n            lastName: entity.lastName,\r\n            roles: entity.user.roles,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n        const passwordControl = this.detailForm.get('password');\r\n        if (passwordControl) {\r\n            if (!entity.id) {\r\n                passwordControl.setValidators([Validators.required]);\r\n            } else {\r\n                passwordControl.setValidators([]);\r\n            }\r\n        }\r\n        this.buildPermissionsMap();\r\n    }\r\n\r\n    private buildPermissionsMap() {\r\n        const permissionsControl = this.detailForm.get('roles');\r\n        if (permissionsControl) {\r\n            const roles = permissionsControl.value;\r\n            const channelIdPermissionsMap = new Map<string, Set<Permission>>();\r\n            const channelIdCodeMap = new Map<string, string>();\r\n\r\n            for (const role of roles ?? []) {\r\n                for (const channel of role.channels) {\r\n                    const channelPermissions = channelIdPermissionsMap.get(channel.id);\r\n                    const permissionSet = channelPermissions || new Set<Permission>();\r\n\r\n                    role.permissions.forEach(p => permissionSet.add(p));\r\n                    channelIdPermissionsMap.set(channel.id, permissionSet);\r\n                    channelIdCodeMap.set(channel.id, channel.code);\r\n                }\r\n            }\r\n\r\n            this.selectedRolePermissions = {} as any;\r\n            for (const channelId of Array.from(channelIdPermissionsMap.keys())) {\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                const permissionSet = channelIdPermissionsMap.get(channelId)!;\r\n                const permissionsHash: { [K in Permission]: boolean } = {} as any;\r\n                for (const def of this.serverConfigService.getPermissionDefinitions()) {\r\n                    permissionsHash[def.name] = permissionSet.has(def.name as Permission);\r\n                }\r\n                this.selectedRolePermissions[channelId] = {\r\n                    /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n                    channelId,\r\n                    channelCode: channelIdCodeMap.get(channelId)!,\r\n                    permissions: permissionsHash,\r\n                    /* eslint-enable @typescript-eslint/no-non-null-assertion */\r\n                };\r\n            }\r\n        }\r\n    }\r\n}\r\n","import {\r\n    createBulkDeleteAction,\r\n    GetAdministratorListQuery,\r\n    ItemOf,\r\n    Permission,\r\n} from '@vendure/admin-ui/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport const deleteAdministratorsBulkAction = createBulkDeleteAction<\r\n    ItemOf<GetAdministratorListQuery, 'administrators'>\r\n>({\r\n    location: 'administrator-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteAdministrator),\r\n    getItemName: item => item.firstName + ' ' + item.lastName,\r\n    bulkDelete: (dataService, ids) =>\r\n        dataService.administrator.deleteAdministrators(ids).pipe(map(res => res.deleteAdministrators)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"administrator-list\" />\r\n            <a\r\n                class=\"btn btn-primary\"\r\n                *vdrIfPermissions=\"['CreateAdministrator']\"\r\n                [routerLink]=\"['./', 'create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'admin.create-new-administrator' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"administrator-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    class=\"mt-2\"\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"administrator-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-administrator=\"item\">\r\n            {{ administrator.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\" id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-administrator=\"item\">\r\n            {{ administrator.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\" id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-administrator=\"item\">\r\n            {{ administrator.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\" [sort]=\"sorts.get('lastName')\">\r\n        <ng-template let-administrator=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', administrator.id]\"\r\n                ><span>{{ administrator.firstName }} {{ administrator.lastName }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'settings.email-address' | translate\" id=\"email-address\" [sort]=\"sorts.get('emailAddress')\">\r\n        <ng-template let-administrator=\"item\">\r\n            {{ administrator.emailAddress }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'settings.roles' | translate\" id=\"roles\">\r\n        <ng-template let-administrator=\"item\">\r\n            <vdr-chip *ngFor=\"let role of administrator.user.roles\">{{ role.description }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column\r\n        *ngFor=\"let customField of customFields\"\r\n        [customField]=\"customField\"\r\n        [sorts]=\"sorts\"\r\n    />\r\n</vdr-data-table-2>\r\n","import { Component } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    ADMINISTRATOR_FRAGMENT,\n    GetAdministratorListDocument,\n    LogicalOperator,\n    TypedBaseListComponent,\n} from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\n\nexport const GET_ADMINISTRATOR_LIST = gql`\n    query GetAdministratorList($options: AdministratorListOptions) {\n        administrators(options: $options) {\n            items {\n                ...AdministratorListItem\n            }\n            totalItems\n        }\n    }\n    fragment AdministratorListItem on Administrator {\n        id\n        createdAt\n        updatedAt\n        firstName\n        lastName\n        emailAddress\n        user {\n            id\n            identifier\n            lastLogin\n            roles {\n                id\n                createdAt\n                updatedAt\n                code\n                description\n            }\n        }\n    }\n`;\n\n@Component({\n    selector: 'vdr-administrator-list',\n    templateUrl: './administrator-list.component.html',\n    styleUrls: ['./administrator-list.component.scss'],\n})\nexport class AdministratorListComponent extends TypedBaseListComponent<\n    typeof GetAdministratorListDocument,\n    'administrators'\n> {\n    dataTableListId = 'administrator-list';\n    readonly customFields = this.getCustomFieldConfig('Administrator');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilter({\n            name: 'firstName',\n            type: { kind: 'text' },\n            label: _('settings.first-name'),\n            filterField: 'firstName',\n        })\n        .addFilter({\n            name: 'lastName',\n            type: { kind: 'text' },\n            label: _('settings.last-name'),\n            filterField: 'lastName',\n        })\n        .addFilter({\n            name: 'emailAddress',\n            type: { kind: 'text' },\n            label: _('settings.email-address'),\n            filterField: 'emailAddress',\n        })\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('createdAt', 'DESC')\n        .addSort({ name: 'createdAt' })\n        .addSort({ name: 'updatedAt' })\n        .addSort({ name: 'lastName' })\n        .addSort({ name: 'emailAddress' })\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        super.configure({\n            document: GetAdministratorListDocument,\n            getItems: data => data.administrators,\n            setVariables: (skip, take) => this.createSearchQuery(skip, take, this.searchTermControl.value),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n\n    createSearchQuery(skip: number, take: number, searchTerm: string | null) {\n        let _filter = {};\n        let filterOperator: LogicalOperator = LogicalOperator.AND;\n\n        if (searchTerm) {\n            _filter = {\n                emailAddress: {\n                    contains: searchTerm,\n                },\n                firstName: {\n                    contains: searchTerm,\n                },\n                lastName: {\n                    contains: searchTerm,\n                },\n            };\n            filterOperator = LogicalOperator.OR;\n        }\n        return {\n            options: {\n                skip,\n                take,\n                filter: {\n                    ...(_filter ?? {}),\n                    ...this.filters.createFilterInput(),\n                },\n                sort: this.sorts.createSortInput(),\n                filterOperator,\n            },\n        };\n    }\n}\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left></vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"channel-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"!saveButtonEnabled()\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    *vdrIfPermissions=\"['SuperAdmin', 'UpdateChannel']\"\r\n                    [disabled]=\"!saveButtonEnabled()\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"channel-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field\r\n                        class=\"form-grid-span\"\r\n                        *ngIf=\"entity?.code !== DEFAULT_CHANNEL_CODE\"\r\n                        [label]=\"'common.code' | translate\"\r\n                        for=\"code\"\r\n                    >\r\n                        <input\r\n                            id=\"code\"\r\n                            type=\"text\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"code\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-item\r\n                        class=\"form-grid-span\"\r\n                        *ngIf=\"entity?.code === DEFAULT_CHANNEL_CODE\"\r\n                        [label]=\"'common.code' | translate\"\r\n                    >\r\n                        {{ entity?.code | channelCodeToLabel | translate }}\r\n                    </vdr-form-item>\r\n                    <vdr-form-field [label]=\"'settings.channel-token' | translate\" for=\"token\">\r\n                        <input\r\n                            id=\"token\"\r\n                            type=\"text\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"token\"\r\n                        />\r\n                    </vdr-form-field>\r\n\r\n                    <vdr-form-field [label]=\"'common.seller' | translate\" for=\"sellerId\">\r\n                        <select\r\n                            name=\"sellerId\"\r\n                            formControlName=\"sellerId\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option selected value style=\"display: none\"></option>\r\n                            <option *ngFor=\"let seller of sellers$ | async\" [value]=\"seller.id\">\r\n                                {{ seller.name }}\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'common.available-languages' | translate\"\r\n                        for=\"availableLanguageCodes\"\r\n                    >\r\n                        <vdr-language-code-selector\r\n                            formControlName=\"availableLanguageCodes\"\r\n                            [languageCodes]=\"availableLanguageCodes$ | async\"\r\n                        ></vdr-language-code-selector>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'common.available-currencies' | translate\"\r\n                        for=\"availableCurrencyCodes\"\r\n                    >\r\n                        <vdr-currency-code-selector\r\n                            formControlName=\"availableCurrencyCodes\"\r\n                        ></vdr-currency-code-selector>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'settings.defaults' | translate\">\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.default-language' | translate\" for=\"defaultLanguage\">\r\n                        <select\r\n                            name=\"defaultLanguageCode\"\r\n                            formControlName=\"defaultLanguageCode\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option\r\n                                *ngFor=\"let languageCode of detailForm.value.availableLanguageCodes\"\r\n                                [value]=\"languageCode\"\r\n                            >\r\n                                {{ languageCode | localeLanguageName }} ({{ languageCode | uppercase }})\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'settings.default-currency' | translate\" for=\"defaultCurrency\">\r\n                        <select\r\n                            name=\"defaultCurrencyCode\"\r\n                            formControlName=\"defaultCurrencyCode\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option\r\n                                *ngFor=\"let code of detailForm.value.availableCurrencyCodes\"\r\n                                [value]=\"code\"\r\n                            >\r\n                                {{ code | localeCurrencyName }}\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                    <div>\r\n                        <vdr-form-field\r\n                            [label]=\"'settings.default-tax-zone' | translate\"\r\n                            for=\"defaultTaxZoneId\"\r\n                        >\r\n                            <vdr-zone-selector\r\n                                formControlName=\"defaultTaxZoneId\"\r\n                                [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            ></vdr-zone-selector>\r\n                        </vdr-form-field>\r\n                        <clr-alert\r\n                            *ngIf=\"detailForm.value.code && !detailForm.value.defaultTaxZoneId\"\r\n                            clrAlertType=\"danger\"\r\n                            [clrAlertClosable]=\"false\"\r\n                        >\r\n                            <clr-alert-item>\r\n                                <span class=\"alert-text\">\r\n                                    {{ 'error.no-default-tax-zone-set' | translate }}\r\n                                </span>\r\n                            </clr-alert-item>\r\n                        </clr-alert>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <vdr-form-field\r\n                            [label]=\"'settings.default-shipping-zone' | translate\"\r\n                            for=\"defaultShippingZoneId\"\r\n                        >\r\n                            <vdr-zone-selector\r\n                                name=\"defaultShippingZoneId\"\r\n                                formControlName=\"defaultShippingZoneId\"\r\n                                [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            ></vdr-zone-selector>\r\n                        </vdr-form-field>\r\n                        <clr-alert\r\n                            *ngIf=\"detailForm.value.code && !detailForm.value.defaultShippingZoneId\"\r\n                            clrAlertType=\"danger\"\r\n                            [clrAlertClosable]=\"false\"\r\n                        >\r\n                            <clr-alert-item>\r\n                                <span class=\"alert-text\">\r\n                                    {{ 'error.no-default-shipping-zone-set' | translate }}\r\n                                </span>\r\n                            </clr-alert-item>\r\n                        </clr-alert>\r\n                    </div>\r\n                    <vdr-form-field\r\n                        [label]=\"'settings.prices-include-tax' | translate\"\r\n                        for=\"pricesIncludeTax\"\r\n                    >\r\n                        <clr-toggle-wrapper>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                clrToggle\r\n                                id=\"pricesIncludeTax\"\r\n                                formControlName=\"pricesIncludeTax\"\r\n                                [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            />\r\n                        </clr-toggle-wrapper>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Channel\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"channel-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CHANNEL_FRAGMENT,\r\n    ChannelFragment,\r\n    CreateChannelInput,\r\n    CurrencyCode,\r\n    DataService,\r\n    GetChannelDetailDocument,\r\n    getCustomFieldsDefaults,\r\n    GetSellersQuery,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    ServerConfigService,\r\n    TypedBaseDetailComponent,\r\n    UpdateChannelInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\nimport { gql } from 'apollo-angular';\r\nimport { Observable } from 'rxjs';\r\nimport { map, mergeMap, take, takeUntil } from 'rxjs/operators';\r\n\r\nexport const GET_CHANNEL_DETAIL = gql`\r\n    query GetChannelDetail($id: ID!) {\r\n        channel(id: $id) {\r\n            ...Channel\r\n        }\r\n    }\r\n    ${CHANNEL_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-channel-detail',\r\n    templateUrl: './channel-detail.component.html',\r\n    styleUrls: ['./channel-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ChannelDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetChannelDetailDocument, 'channel'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    DEFAULT_CHANNEL_CODE = DEFAULT_CHANNEL_CODE;\r\n    customFields = this.getCustomFieldConfig('Channel');\r\n    // zones$: Observable<Array<ItemOf<GetZoneListQuery, 'zones'>>>;\r\n    sellers$: Observable<GetSellersQuery['sellers']['items']>;\r\n    detailForm = this.formBuilder.group({\r\n        code: ['', Validators.required],\r\n        token: ['', Validators.required],\r\n        pricesIncludeTax: [false],\r\n        availableLanguageCodes: [[] as string[]],\r\n        availableCurrencyCodes: [[] as string[]],\r\n        defaultCurrencyCode: ['' as CurrencyCode, Validators.required],\r\n        defaultShippingZoneId: ['', Validators.required],\r\n        defaultLanguageCode: [undefined as LanguageCode | undefined, Validators.required],\r\n        defaultTaxZoneId: ['', Validators.required],\r\n        sellerId: ['', Validators.required],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n\r\n    availableLanguageCodes$: Observable<LanguageCode[]>;\r\n    readonly updatePermission = [Permission.SuperAdmin, Permission.UpdateChannel, Permission.CreateChannel];\r\n\r\n    constructor(\r\n        protected serverConfigService: ServerConfigService,\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        // TODO: make this lazy-loaded autocomplete\r\n        this.sellers$ = this.dataService.settings.getSellerList().mapSingle(data => data.sellers.items);\r\n        this.availableLanguageCodes$ = this.serverConfigService.getAvailableLanguages();\r\n        this.detailForm.controls.availableCurrencyCodes.valueChanges\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(value => {\r\n                if (value) {\r\n                    const defaultCurrencyCode = this.detailForm.controls.defaultCurrencyCode.value;\r\n                    if (defaultCurrencyCode && !value.includes(defaultCurrencyCode)) {\r\n                        this.detailForm.controls.defaultCurrencyCode.setValue(value[0] as CurrencyCode);\r\n                    }\r\n                }\r\n            });\r\n        this.detailForm.controls.availableLanguageCodes.valueChanges\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(value => {\r\n                if (value) {\r\n                    const defaultLanguageCode = this.detailForm.controls.defaultLanguageCode.value;\r\n                    if (defaultLanguageCode && !value.includes(defaultLanguageCode)) {\r\n                        this.detailForm.controls.defaultLanguageCode.setValue(value[0] as LanguageCode);\r\n                    }\r\n                }\r\n            });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    saveButtonEnabled(): boolean {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const {\r\n            code,\r\n            token,\r\n            defaultLanguageCode,\r\n            pricesIncludeTax,\r\n            defaultCurrencyCode,\r\n            defaultShippingZoneId,\r\n            defaultTaxZoneId,\r\n            customFields,\r\n            sellerId,\r\n        } = this.detailForm.value;\r\n        if (\r\n            !code ||\r\n            !token ||\r\n            !defaultLanguageCode ||\r\n            !defaultCurrencyCode ||\r\n            !defaultShippingZoneId ||\r\n            !defaultTaxZoneId\r\n        ) {\r\n            return;\r\n        }\r\n        const input: CreateChannelInput = {\r\n            code,\r\n            token,\r\n            defaultLanguageCode,\r\n            pricesIncludeTax: !!pricesIncludeTax,\r\n            defaultCurrencyCode,\r\n            defaultShippingZoneId,\r\n            defaultTaxZoneId,\r\n            customFields,\r\n            sellerId,\r\n        };\r\n        this.dataService.settings\r\n            .createChannel(input)\r\n            .pipe(\r\n                mergeMap(({ createChannel }) =>\r\n                    this.dataService.auth.currentUser().single$.pipe(\r\n                        map(({ me }) => ({\r\n                            me,\r\n                            createChannel,\r\n                        })),\r\n                    ),\r\n                ),\r\n                mergeMap(({ me, createChannel }) =>\r\n                    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                    this.dataService.client.updateUserChannels(me!.channels).pipe(map(() => createChannel)),\r\n                ),\r\n            )\r\n            .subscribe(data => {\r\n                switch (data.__typename) {\r\n                    case 'Channel':\r\n                        this.notificationService.success(_('common.notify-create-success'), {\r\n                            entity: 'Channel',\r\n                        });\r\n                        this.detailForm.markAsPristine();\r\n                        this.changeDetector.markForCheck();\r\n                        this.router.navigate(['../', data.id], { relativeTo: this.route });\r\n                        break;\r\n                    case 'LanguageNotAvailableError':\r\n                        this.notificationService.error(data.message);\r\n                        break;\r\n                }\r\n            });\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(channel => {\r\n                    const input = {\r\n                        id: channel.id,\r\n                        code: formValue.code,\r\n                        token: formValue.token,\r\n                        pricesIncludeTax: formValue.pricesIncludeTax,\r\n                        availableLanguageCodes: formValue.availableLanguageCodes,\r\n                        availableCurrencyCodes: formValue.availableCurrencyCodes,\r\n                        defaultCurrencyCode: formValue.defaultCurrencyCode,\r\n                        defaultShippingZoneId: formValue.defaultShippingZoneId,\r\n                        defaultLanguageCode: formValue.defaultLanguageCode,\r\n                        defaultTaxZoneId: formValue.defaultTaxZoneId,\r\n                        customFields: formValue.customFields,\r\n                        sellerId: formValue.sellerId,\r\n                    } as UpdateChannelInput;\r\n                    return this.dataService.settings.updateChannel(input);\r\n                }),\r\n            )\r\n            .subscribe(({ updateChannel }) => {\r\n                switch (updateChannel.__typename) {\r\n                    case 'Channel':\r\n                        this.notificationService.success(_('common.notify-update-success'), {\r\n                            entity: 'Channel',\r\n                        });\r\n                        this.detailForm.markAsPristine();\r\n                        this.changeDetector.markForCheck();\r\n                        break;\r\n                    case 'LanguageNotAvailableError':\r\n                        this.notificationService.error(updateChannel.message);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: ChannelFragment, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            code: entity.code,\r\n            token: entity.token || this.generateToken(),\r\n            pricesIncludeTax: entity.pricesIncludeTax,\r\n            availableLanguageCodes: entity.availableLanguageCodes,\r\n            availableCurrencyCodes: entity.availableCurrencyCodes,\r\n            defaultCurrencyCode: entity.defaultCurrencyCode,\r\n            defaultShippingZoneId: entity.defaultShippingZone?.id ?? '',\r\n            defaultLanguageCode: entity.defaultLanguageCode,\r\n            defaultTaxZoneId: entity.defaultTaxZone?.id ?? '',\r\n            sellerId: entity.seller?.id ?? '',\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n        if (entity.code === DEFAULT_CHANNEL_CODE) {\r\n            const codeControl = this.detailForm.get('code');\r\n            if (codeControl) {\r\n                codeControl.disable();\r\n            }\r\n        }\r\n    }\r\n\r\n    private generateToken(): string {\r\n        return Array.from(crypto.getRandomValues(new Uint8Array(10)))\r\n            .map(b => b.toString(16).padStart(2, '0'))\r\n            .join('');\r\n    }\r\n}\r\n","import { createBulkDeleteAction, GetChannelsQuery, ItemOf, Permission } from '@vendure/admin-ui/core';\r\nimport { map, mergeMap } from 'rxjs/operators';\r\n\r\nexport const deleteChannelsBulkAction = createBulkDeleteAction<ItemOf<GetChannelsQuery, 'channels'>>({\r\n    location: 'channel-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.SuperAdmin) || userPermissions.includes(Permission.DeleteChannel),\r\n    getItemName: item => item.code,\r\n    bulkDelete: (dataService, ids) => {\r\n        return dataService.settings.deleteChannels(ids).pipe(\r\n            mergeMap(({ deleteChannels }) =>\r\n                dataService.auth.currentUser().single$.pipe(\r\n                    map(({ me }) => ({\r\n                        me,\r\n                        deleteChannels,\r\n                    })),\r\n                ),\r\n            ),\r\n            mergeMap(({ me, deleteChannels }) =>\r\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\r\n                dataService.client.updateUserChannels(me!.channels).pipe(map(() => deleteChannels)),\r\n            ),\r\n        );\r\n    },\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"channel-list\" />\r\n            <a class=\"btn btn-primary\" *vdrIfPermissions=\"['SuperAdmin', 'CreateChannel']\" [routerLink]=\"['./', 'create']\">\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'settings.create-new-channel' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"channel-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    class=\"mt-2\"\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"channel-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-channel=\"item\">\r\n            {{ channel.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\" id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-channel=\"item\">\r\n            {{ channel.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\" id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-channel=\"item\">\r\n            {{ channel.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\" [optional]=\"false\" [sort]=\"sorts.get('code')\">\r\n        <ng-template let-channel=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', channel.id]\"\r\n                ><span>{{ channel.code | channelCodeToLabel | translate }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'settings.channel-token' | translate\" id=\"channel-token\" [sort]=\"sorts.get('token')\">\r\n        <ng-template let-channel=\"item\">\r\n            {{ channel.token }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column *ngFor=\"let customField of customFields\" [customField]=\"customField\" [sorts]=\"sorts\" />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { CHANNEL_FRAGMENT, GetChannelListDocument, TypedBaseListComponent } from '@vendure/admin-ui/core';\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\nimport { gql } from 'apollo-angular';\n\nexport const GET_CHANNEL_LIST = gql`\n    query GetChannelList($options: ChannelListOptions) {\n        channels(options: $options) {\n            items {\n                ...Channel\n            }\n            totalItems\n        }\n    }\n    ${CHANNEL_FRAGMENT}\n`;\n\n@Component({\n    selector: 'vdr-channel-list',\n    templateUrl: './channel-list.component.html',\n    styleUrls: ['./channel-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ChannelListComponent\n    extends TypedBaseListComponent<typeof GetChannelListDocument, 'channels'>\n    implements OnInit\n{\n    dataTableListId = 'channel-list';\n    readonly customFields = this.getCustomFieldConfig('Channel');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: _('common.code'),\n            filterField: 'code',\n        })\n        .addFilter({\n            name: 'token',\n            type: { kind: 'text' },\n            label: _('settings.channel-token'),\n            filterField: 'token',\n        })\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('createdAt', 'DESC')\n        .addSort({ name: 'createdAt' })\n        .addSort({ name: 'updatedAt' })\n        .addSort({ name: 'code' })\n        .addSort({ name: 'token' })\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        super.configure({\n            document: GetChannelListDocument,\n            getItems: data => data.channels,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        code: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n\n    isDefaultChannel(channelCode: string): boolean {\n        return channelCode === DEFAULT_CHANNEL_CODE;\n    }\n}\n","<vdr-page-block\r\n    ><vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [disabled]=\"isNew$ | async\"\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"languageCode$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            />\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"country-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    *vdrIfPermissions=\"updatePermission\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"country-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card>\r\n                <vdr-form-field [label]=\"'common.enabled' | translate\" for=\"enabled\">\r\n                    <clr-toggle-wrapper>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrToggle\r\n                            id=\"enabled\"\r\n                            formControlName=\"enabled\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </clr-toggle-wrapper>\r\n                </vdr-form-field>\r\n            </vdr-card>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'common.code' | translate\" for=\"code\">\r\n                        <input\r\n                            id=\"code\"\r\n                            type=\"text\"\r\n                            formControlName=\"code\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Region\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"country-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    COUNTRY_FRAGMENT,\r\n    CountryFragment,\r\n    createUpdatedTranslatable,\r\n    DataService,\r\n    findTranslation,\r\n    GetCountryDetailDocument,\r\n    getCustomFieldsDefaults,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    TypedBaseDetailComponent,\r\n    UpdateCountryInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { combineLatest } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport const GET_COUNTRY_DETAIL = gql`\r\n    query GetCountryDetail($id: ID!) {\r\n        country(id: $id) {\r\n            ...Country\r\n        }\r\n    }\r\n    ${COUNTRY_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-country-detail',\r\n    templateUrl: './country-detail.component.html',\r\n    styleUrls: ['./country-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class CountryDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetCountryDetailDocument, 'country'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('Region');\r\n    detailForm = this.formBuilder.group({\r\n        code: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n        enabled: [true],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateCountry];\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n\r\n        const formValue = this.detailForm.value;\r\n        const input = createUpdatedTranslatable({\r\n            translatable: {\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                code: '',\r\n                name: '',\r\n                enabled: false,\r\n                translations: [],\r\n            } as CountryFragment,\r\n            updatedFields: formValue,\r\n            languageCode: this.languageCode,\r\n            customFieldConfig: this.customFields,\r\n            defaultTranslation: {\r\n                name: formValue.name ?? '',\r\n                languageCode: this.languageCode,\r\n            },\r\n        });\r\n        this.dataService.settings.createCountry(input).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'Country',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createCountry.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'Country',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([country, languageCode]) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const input: UpdateCountryInput = createUpdatedTranslatable({\r\n                        translatable: country,\r\n                        updatedFields: formValue,\r\n                        customFieldConfig: this.customFields,\r\n                        languageCode,\r\n                        defaultTranslation: {\r\n                            name: formValue.name ?? '',\r\n                            languageCode,\r\n                        },\r\n                    });\r\n                    return this.dataService.settings.updateCountry(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Country',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Country',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    protected setFormValues(country: CountryFragment, languageCode: LanguageCode): void {\r\n        const currentTranslation = findTranslation(country, languageCode);\r\n\r\n        this.detailForm.patchValue({\r\n            code: country.code,\r\n            name: currentTranslation ? currentTranslation.name : '',\r\n            enabled: country.enabled,\r\n        });\r\n\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['customFields']),\r\n                country,\r\n                currentTranslation,\r\n            );\r\n        }\r\n    }\r\n}\r\n","import { createBulkDeleteAction, GetCountryListQuery, ItemOf, Permission } from '@vendure/admin-ui/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport const deleteCountriesBulkAction = createBulkDeleteAction<ItemOf<GetCountryListQuery, 'countries'>>({\r\n    location: 'country-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteSettings) ||\r\n        userPermissions.includes(Permission.DeleteCountry),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) =>\r\n        dataService.settings.deleteCountries(ids).pipe(map(res => res.deleteCountries)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"contentLanguage$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            />\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"country-list\" />\r\n            <a\r\n                class=\"btn btn-primary\"\r\n                *vdrIfPermissions=\"['CreateSettings', 'CreateCountry']\"\r\n                [routerLink]=\"['./', 'create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'settings.create-new-country' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"country-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    class=\"mt-2\"\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"country-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-country=\"item\">\r\n            {{ country.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\"\r\n        id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-country=\"item\">\r\n            {{ country.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\"\r\n        id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-country=\"item\">\r\n            {{ country.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.name' | translate\"\r\n        id=\"name\"\r\n        [optional]=\"false\"\r\n        [sort]=\"sorts.get('name')\"\r\n    >\r\n        <ng-template let-country=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', country.id]\"\r\n                ><span>{{ country.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\" [sort]=\"sorts.get('code')\">\r\n        <ng-template let-country=\"item\">\r\n            {{ country.code }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.enabled' | translate\" id=\"enabled\">\r\n        <ng-template let-country=\"item\">\r\n            <vdr-chip *ngIf=\"country.enabled\" colorType=\"success\">{{\r\n                'common.enabled' | translate\r\n            }}</vdr-chip>\r\n            <vdr-chip *ngIf=\"!country.enabled\" colorType=\"warning\">{{\r\n                'common.disabled' | translate\r\n            }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column\r\n        *ngFor=\"let customField of customFields\"\r\n        [customField]=\"customField\"\r\n        [sorts]=\"sorts\"\r\n    />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { GetCountryListDocument, TypedBaseListComponent } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\n\nexport const GET_COUNTRY_LIST = gql`\n    query GetCountryList($options: CountryListOptions) {\n        countries(options: $options) {\n            items {\n                ...CountryListItem\n            }\n            totalItems\n        }\n    }\n    fragment CountryListItem on Country {\n        id\n        createdAt\n        updatedAt\n        code\n        name\n        type\n        enabled\n    }\n`;\n\n@Component({\n    selector: 'vdr-country-list',\n    templateUrl: './country-list.component.html',\n    styleUrls: ['./country-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class CountryListComponent extends TypedBaseListComponent<typeof GetCountryListDocument, 'countries'> {\n    dataTableListId = 'country-list';\n    readonly customFields = this.getCustomFieldConfig('Region');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: _('common.name'),\n            filterField: 'name',\n        })\n        .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: _('common.code'),\n            filterField: 'code',\n        })\n        .addFilter({\n            name: 'enabled',\n            type: { kind: 'boolean' },\n            label: _('common.enabled'),\n            filterField: 'enabled',\n        })\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('name', 'ASC')\n        .addSort({ name: 'createdAt' })\n        .addSort({ name: 'updatedAt' })\n        .addSort({ name: 'name' })\n        .addSort({ name: 'code' })\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        super.configure({\n            document: GetCountryListDocument,\n            getItems: data => data.countries,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n}\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"global-setting-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                (click)=\"save()\"\r\n                *vdrIfPermissions=\"updatePermission\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.update' | translate }}\r\n            </button>\r\n            <vdr-action-bar-dropdown-menu locationId=\"global-setting-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-block>\r\n        <vdr-card>\r\n            <div class=\"form-grid\">\r\n                <vdr-form-field\r\n                    [label]=\"'common.available-languages' | translate\"\r\n                    for=\"availableLanguages\"\r\n                    [tooltip]=\"'settings.global-available-languages-tooltip' | translate\"\r\n                >\r\n                    <vdr-language-code-selector\r\n                        formControlName=\"availableLanguages\"\r\n                        [languageCodes]=\"languageCodes\"\r\n                    ></vdr-language-code-selector>\r\n                </vdr-form-field>\r\n                <vdr-form-field\r\n                    [label]=\"'settings.global-out-of-stock-threshold' | translate\"\r\n                    for=\"outOfStockThreshold\"\r\n                    [tooltip]=\"'settings.global-out-of-stock-threshold-tooltip' | translate\"\r\n                >\r\n                    <input\r\n                        id=\"outOfStockThreshold\"\r\n                        type=\"number\"\r\n                        formControlName=\"outOfStockThreshold\"\r\n                        [readonly]=\"!(updatePermission | hasPermission)\"\r\n                    />\r\n                </vdr-form-field>\r\n                <vdr-form-field\r\n                    [label]=\"'settings.track-inventory-default' | translate\"\r\n                    for=\"enabled\"\r\n                    [tooltip]=\"'catalog.track-inventory-tooltip' | translate\"\r\n                >\r\n                    <clr-toggle-wrapper>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrToggle\r\n                            name=\"enabled\"\r\n                            formControlName=\"trackInventory\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </clr-toggle-wrapper>\r\n                </vdr-form-field>\r\n            </div>\r\n        </vdr-card>\r\n        <vdr-card\r\n            formGroupName=\"customFields\"\r\n            *ngIf=\"customFields.length\"\r\n            [title]=\"'common.custom-fields' | translate\"\r\n        >\r\n            <vdr-tabbed-custom-fields\r\n                entityName=\"GlobalSettings\"\r\n                [customFields]=\"customFields\"\r\n                [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                [readonly]=\"!(updatePermission | hasPermission)\"\r\n            ></vdr-tabbed-custom-fields>\r\n        </vdr-card>\r\n\r\n        <vdr-custom-detail-component-host\r\n            locationId=\"global-settings-detail\"\r\n            [entity$]=\"entity$\"\r\n            [detailForm]=\"detailForm\"\r\n        ></vdr-custom-detail-component-host>\r\n    </vdr-page-block>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    DataService,\r\n    getCustomFieldsDefaults,\r\n    GetGlobalSettingsDetailDocument,\r\n    GlobalSettings,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    TypedBaseDetailComponent,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { switchMap, tap, withLatestFrom } from 'rxjs/operators';\r\n\r\nexport const GET_GLOBAL_SETTINGS_DETAIL = gql`\r\n    query GetGlobalSettingsDetail {\r\n        globalSettings {\r\n            ...GlobalSettingsDetail\r\n        }\r\n    }\r\n    fragment GlobalSettingsDetail on GlobalSettings {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        availableLanguages\r\n        trackInventory\r\n        outOfStockThreshold\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-global-settings',\r\n    templateUrl: './global-settings.component.html',\r\n    styleUrls: ['./global-settings.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class GlobalSettingsComponent\r\n    extends TypedBaseDetailComponent<typeof GetGlobalSettingsDetailDocument, 'globalSettings'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('GlobalSettings');\r\n    detailForm = this.formBuilder.group({\r\n        availableLanguages: [[] as LanguageCode[]],\r\n        trackInventory: false,\r\n        outOfStockThreshold: [0, Validators.required],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n    languageCodes = Object.values(LanguageCode);\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateGlobalSettings];\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.init();\r\n        this.dataService.client.userStatus().single$.subscribe(({ userStatus }) => {\r\n            if (!userStatus.permissions.includes(Permission.UpdateSettings)) {\r\n                const languagesSelect = this.detailForm.get('availableLanguages');\r\n                if (languagesSelect) {\r\n                    languagesSelect.disable();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n\r\n        this.dataService.settings\r\n            .updateGlobalSettings(this.detailForm.value)\r\n            .pipe(\r\n                tap(({ updateGlobalSettings }) => {\r\n                    switch (updateGlobalSettings.__typename) {\r\n                        case 'GlobalSettings':\r\n                            this.detailForm.markAsPristine();\r\n                            this.changeDetector.markForCheck();\r\n                            this.notificationService.success(_('common.notify-update-success'), {\r\n                                entity: 'Settings',\r\n                            });\r\n                            break;\r\n                        case 'ChannelDefaultLanguageError':\r\n                            this.notificationService.error(updateGlobalSettings.message);\r\n                    }\r\n                }),\r\n                switchMap(() => this.serverConfigService.refreshGlobalSettings()),\r\n                withLatestFrom(this.dataService.client.uiState().single$),\r\n            )\r\n            .subscribe(([{ globalSettings }, { uiState }]) => {\r\n                const availableLangs = globalSettings.availableLanguages;\r\n                if (availableLangs.length && !availableLangs.includes(uiState.contentLanguage)) {\r\n                    this.dataService.client.setContentLanguage(availableLangs[0]).subscribe();\r\n                }\r\n            });\r\n    }\r\n\r\n    protected setFormValues(entity: GlobalSettings, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            availableLanguages: entity.availableLanguages,\r\n            trackInventory: entity.trackInventory,\r\n            outOfStockThreshold: entity.outOfStockThreshold,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n}\r\n","<vdr-page-block\r\n    ><vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [disabled]=\"isNew$ | async\"\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"languageCode$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            />\r\n        </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"payment-method-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                [disabled]=\"detailForm.pristine || detailForm.invalid || !selectedHandler\"\r\n                (click)=\"create()\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    *vdrIfPermissions=\"updatePermission\"\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"detailForm.pristine || detailForm.invalid || !selectedHandler\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"payment-method-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card>\r\n                <vdr-form-field [label]=\"'common.enabled' | translate\" for=\"description\">\r\n                    <clr-toggle-wrapper>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrToggle\r\n                            id=\"enabled\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"enabled\"\r\n                        />\r\n                    </clr-toggle-wrapper>\r\n                </vdr-form-field>\r\n            </vdr-card>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            (input)=\"updateCode(entity?.code, $event.target.value)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'common.code' | translate\"\r\n                        for=\"code\"\r\n                        [readOnlyToggle]=\"updatePermission | hasPermission\"\r\n                    >\r\n                        <input\r\n                            id=\"code\"\r\n                            type=\"text\"\r\n                            formControlName=\"code\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-rich-text-editor\r\n                        class=\"form-grid-span\"\r\n                        formControlName=\"description\"\r\n                        [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        [label]=\"'common.description' | translate\"\r\n                    ></vdr-rich-text-editor>\r\n                </div>\r\n            </vdr-card>\r\n\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"PaymentMethod\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"payment-method-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n\r\n            <vdr-card [title]=\"'settings.payment-eligibility-checker' | translate\">\r\n                <vdr-configurable-input\r\n                    *ngIf=\"selectedChecker && selectedCheckerDefinition\"\r\n                    [operation]=\"selectedChecker\"\r\n                    [operationDefinition]=\"selectedCheckerDefinition\"\r\n                    [readonly]=\"!(updatePermission | hasPermission)\"\r\n                    (remove)=\"removeChecker()\"\r\n                    formControlName=\"checker\"\r\n                ></vdr-configurable-input>\r\n                <div *ngIf=\"!selectedChecker || !selectedCheckerDefinition\">\r\n                    <vdr-dropdown>\r\n                        <button class=\"btn btn-outline\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"plus\"></clr-icon>\r\n                            {{ 'common.select' | translate }}\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-left\">\r\n                            <button\r\n                                *ngFor=\"let checker of checkers\"\r\n                                type=\"button\"\r\n                                vdrDropdownItem\r\n                                (click)=\"selectChecker(checker)\"\r\n                            >\r\n                                {{ checker.description }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'settings.payment-handler' | translate\">\r\n                <vdr-configurable-input\r\n                    *ngIf=\"selectedHandler && selectedHandlerDefinition\"\r\n                    [operation]=\"selectedHandler\"\r\n                    [operationDefinition]=\"selectedHandlerDefinition\"\r\n                    [readonly]=\"!(updatePermission | hasPermission)\"\r\n                    (remove)=\"removeHandler()\"\r\n                    formControlName=\"handler\"\r\n                ></vdr-configurable-input>\r\n                <div *ngIf=\"!selectedHandler || !selectedHandlerDefinition\">\r\n                    <vdr-dropdown>\r\n                        <button class=\"btn btn-outline\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"plus\"></clr-icon>\r\n                            {{ 'common.select' | translate }}\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-left\">\r\n                            <button\r\n                                *ngFor=\"let handler of handlers\"\r\n                                type=\"button\"\r\n                                vdrDropdownItem\r\n                                (click)=\"selectHandler(handler)\"\r\n                            >\r\n                                {{ handler.description }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-card>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, UntypedFormGroup, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    configurableDefinitionToInstance,\r\n    ConfigurableOperation,\r\n    ConfigurableOperationDefinition,\r\n    CreatePaymentMethodInput,\r\n    createUpdatedTranslatable,\r\n    DataService,\r\n    findTranslation,\r\n    getConfigArgValue,\r\n    getCustomFieldsDefaults,\r\n    GetPaymentMethodDetailDocument,\r\n    GetPaymentMethodDetailQuery,\r\n    LanguageCode,\r\n    NotificationService,\r\n    PAYMENT_METHOD_FRAGMENT,\r\n    PaymentMethodFragment,\r\n    Permission,\r\n    toConfigurableOperationInput,\r\n    TypedBaseDetailComponent,\r\n    UpdatePaymentMethodInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { gql } from 'apollo-angular';\r\nimport { combineLatest } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport const GET_PAYMENT_METHOD_DETAIL = gql`\r\n    query GetPaymentMethodDetail($id: ID!) {\r\n        paymentMethod(id: $id) {\r\n            ...PaymentMethod\r\n        }\r\n    }\r\n    ${PAYMENT_METHOD_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-payment-method-detail',\r\n    templateUrl: './payment-method-detail.component.html',\r\n    styleUrls: ['./payment-method-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class PaymentMethodDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetPaymentMethodDetailDocument, 'paymentMethod'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('PaymentMethod');\r\n    detailForm = this.formBuilder.group({\r\n        code: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n        description: '',\r\n        enabled: [true, Validators.required],\r\n        checker: {} as NonNullable<GetPaymentMethodDetailQuery['paymentMethod']>['checker'],\r\n        handler: {} as NonNullable<GetPaymentMethodDetailQuery['paymentMethod']>['handler'],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n    checkers: ConfigurableOperationDefinition[] = [];\r\n    handlers: ConfigurableOperationDefinition[] = [];\r\n    selectedChecker?: ConfigurableOperation | null;\r\n    selectedCheckerDefinition?: ConfigurableOperationDefinition;\r\n    selectedHandler?: ConfigurableOperation | null;\r\n    selectedHandlerDefinition?: ConfigurableOperationDefinition;\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdatePaymentMethod];\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.settings.getPaymentMethodOperations().single$.subscribe(data => {\r\n            this.checkers = data.paymentMethodEligibilityCheckers;\r\n            this.handlers = data.paymentMethodHandlers;\r\n            this.changeDetector.markForCheck();\r\n            this.selectedCheckerDefinition = data.paymentMethodEligibilityCheckers.find(\r\n                c => c.code === this.entity?.checker?.code,\r\n            );\r\n            this.selectedHandlerDefinition = data.paymentMethodHandlers.find(\r\n                c => c.code === this.entity?.handler?.code,\r\n            );\r\n        });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    updateCode(currentCode: string | undefined, nameValue: string) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get('code');\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n\r\n    selectChecker(checker: ConfigurableOperationDefinition) {\r\n        this.selectedCheckerDefinition = checker;\r\n        this.selectedChecker = configurableDefinitionToInstance(checker);\r\n        const formControl = this.detailForm.get('checker');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedChecker);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    selectHandler(handler: ConfigurableOperationDefinition) {\r\n        this.selectedHandlerDefinition = handler;\r\n        this.selectedHandler = configurableDefinitionToInstance(handler);\r\n        const formControl = this.detailForm.get('handler');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedHandler);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    removeChecker() {\r\n        this.selectedChecker = null;\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    removeHandler() {\r\n        this.selectedHandler = null;\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    create() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedHandler = this.selectedHandler;\r\n        if (!selectedHandler) {\r\n            return;\r\n        }\r\n        const input = this.getUpdatedPaymentMethod(\r\n            {\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                name: '',\r\n                code: '',\r\n                description: '',\r\n                enabled: true,\r\n                checker: undefined as any,\r\n                handler: undefined as any,\r\n                translations: [],\r\n            },\r\n            this.detailForm,\r\n            this.languageCode,\r\n            selectedHandler,\r\n            selectedChecker,\r\n        ) as CreatePaymentMethodInput;\r\n        this.dataService.settings.createPaymentMethod(input).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'PaymentMethod',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createPaymentMethod.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'PaymentMethod',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedHandler = this.selectedHandler;\r\n        if (!selectedHandler) {\r\n            return;\r\n        }\r\n        combineLatest(this.entity$, this.languageCode$)\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([paymentMethod, languageCode]) => {\r\n                    const input = this.getUpdatedPaymentMethod(\r\n                        paymentMethod,\r\n                        this.detailForm,\r\n                        languageCode,\r\n                        selectedHandler,\r\n                        selectedChecker,\r\n                    ) as UpdatePaymentMethodInput;\r\n                    return this.dataService.settings.updatePaymentMethod(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'PaymentMethod',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'PaymentMethod',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Given a PaymentMethod and the value of the detailForm, this method creates an updated copy of it which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedPaymentMethod(\r\n        paymentMethod: PaymentMethodFragment,\r\n        formGroup: UntypedFormGroup,\r\n        languageCode: LanguageCode,\r\n        selectedHandler: ConfigurableOperation,\r\n        selectedChecker?: ConfigurableOperation | null,\r\n    ): UpdatePaymentMethodInput | CreatePaymentMethodInput {\r\n        const input = createUpdatedTranslatable({\r\n            translatable: paymentMethod,\r\n            updatedFields: formGroup.value,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: paymentMethod.name || '',\r\n                description: paymentMethod.description || '',\r\n            },\r\n        });\r\n        return {\r\n            ...input,\r\n            checker: selectedChecker\r\n                ? toConfigurableOperationInput(selectedChecker, formGroup.value.checker)\r\n                : null,\r\n            handler: toConfigurableOperationInput(selectedHandler, formGroup.value.handler),\r\n        };\r\n    }\r\n\r\n    protected setFormValues(\r\n        paymentMethod: NonNullable<GetPaymentMethodDetailQuery['paymentMethod']>,\r\n        languageCode: LanguageCode,\r\n    ): void {\r\n        const currentTranslation = findTranslation(paymentMethod, languageCode);\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation?.name,\r\n            code: paymentMethod.code,\r\n            description: currentTranslation?.description,\r\n            enabled: paymentMethod.enabled,\r\n            checker: paymentMethod.checker || ({} as any),\r\n            handler: paymentMethod.handler || ({} as any),\r\n        });\r\n        if (!this.selectedChecker) {\r\n            this.selectedChecker = paymentMethod.checker && {\r\n                code: paymentMethod.checker.code,\r\n                args: paymentMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (!this.selectedHandler) {\r\n            this.selectedHandler = paymentMethod.handler && {\r\n                code: paymentMethod.handler.code,\r\n                args: paymentMethod.handler.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get('customFields'),\r\n                paymentMethod,\r\n                currentTranslation,\r\n            );\r\n        }\r\n    }\r\n}\r\n","import {\r\n    createBulkAssignToChannelAction,\r\n    AssignPaymentMethodsToChannelDocument,\r\n    RemovePaymentMethodsFromChannelDocument,\r\n    createBulkDeleteAction,\r\n    createBulkRemoveFromChannelAction,\r\n    GetPaymentMethodListQuery,\r\n    ItemOf,\r\n    Permission,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport const deletePaymentMethodsBulkAction = createBulkDeleteAction<\r\n    ItemOf<GetPaymentMethodListQuery, 'paymentMethods'>\r\n>({\r\n    location: 'payment-method-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeletePaymentMethod) ||\r\n        userPermissions.includes(Permission.DeleteSettings),\r\n    getItemName: item => item.name,\r\n    shouldRetryItem: (response, item) => !!response.message,\r\n    bulkDelete: (dataService, ids, retrying) =>\r\n        dataService.settings.deletePaymentMethods(ids, retrying).pipe(map(res => res.deletePaymentMethods)),\r\n});\r\n\r\nconst ASSIGN_PAYMENT_METHODS_TO_CHANNEL = gql`\r\n    mutation AssignPaymentMethodsToChannel($input: AssignPaymentMethodsToChannelInput!) {\r\n        assignPaymentMethodsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nconst REMOVE_PAYMENT_METHODS_FROM_CHANNEL = gql`\r\n    mutation RemovePaymentMethodsFromChannel($input: RemovePaymentMethodsFromChannelInput!) {\r\n        removePaymentMethodsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nexport const assignPaymentMethodsToChannelBulkAction = createBulkAssignToChannelAction<\r\n    ItemOf<GetPaymentMethodListQuery, 'paymentMethods'>\r\n>({\r\n    location: 'payment-method-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdatePaymentMethod) ||\r\n        userPermissions.includes(Permission.UpdateSettings),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, paymentMethodIds, channelIds) =>\r\n        channelIds.map(channelId =>\r\n            dataService\r\n                .mutate(AssignPaymentMethodsToChannelDocument, {\r\n                    input: {\r\n                        channelId,\r\n                        paymentMethodIds,\r\n                    },\r\n                })\r\n                .pipe(map(res => res.assignPaymentMethodsToChannel)),\r\n        ),\r\n});\r\n\r\nexport const removePaymentMethodsFromChannelBulkAction = createBulkRemoveFromChannelAction<\r\n    ItemOf<GetPaymentMethodListQuery, 'paymentMethods'>\r\n>({\r\n    location: 'payment-method-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeletePaymentMethod) ||\r\n        userPermissions.includes(Permission.DeleteSettings),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, paymentMethodIds, channelId) =>\r\n        dataService\r\n            .mutate(RemovePaymentMethodsFromChannelDocument, {\r\n                input: {\r\n                    channelId,\r\n                    paymentMethodIds,\r\n                },\r\n            })\r\n            .pipe(map(res => res.removePaymentMethodsFromChannel)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"contentLanguage$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            />\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"payment-method-list\" />\r\n            <a\r\n                class=\"btn btn-primary\"\r\n                *vdrIfPermissions=\"['CreateSettings', 'CreatePaymentMethod']\"\r\n                [routerLink]=\"['./', 'create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'settings.create-new-payment-method' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"payment-method-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"payment-method-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    ></vdr-bulk-action-menu>\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    ></vdr-dt2-search>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.id' | translate\"\r\n        id=\"id\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('id')\"\r\n    >\r\n        <ng-template let-paymentMethod=\"item\">\r\n            {{ paymentMethod.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\"\r\n        id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-paymentMethod=\"item\">\r\n            {{ paymentMethod.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\"\r\n        id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-paymentMethod=\"item\">\r\n            {{ paymentMethod.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.name' | translate\"\r\n        id=\"name\"\r\n        [optional]=\"false\"\r\n        [sort]=\"sorts.get('name')\"\r\n    >\r\n        <ng-template let-paymentMethod=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', paymentMethod.id]\"\r\n                ><span>{{ paymentMethod.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\" [sort]=\"sorts.get('code')\">\r\n        <ng-template let-paymentMethod=\"item\">\r\n            {{ paymentMethod.code }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.enabled' | translate\" id=\"enabled\">\r\n        <ng-template let-paymentMethod=\"item\">\r\n            <vdr-chip *ngIf=\"paymentMethod.enabled\" colorType=\"success\">{{\r\n                'common.enabled' | translate\r\n            }}</vdr-chip>\r\n            <vdr-chip *ngIf=\"!paymentMethod.enabled\" colorType=\"warning\">{{\r\n                'common.disabled' | translate\r\n            }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column\r\n        *ngFor=\"let customField of customFields\"\r\n        [customField]=\"customField\"\r\n        [sorts]=\"sorts\"\r\n    />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { GetPaymentMethodListDocument, TypedBaseListComponent } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\n\nexport const GET_PAYMENT_METHOD_LIST = gql`\n    query GetPaymentMethodList($options: PaymentMethodListOptions!) {\n        paymentMethods(options: $options) {\n            items {\n                ...PaymentMethodListItem\n            }\n            totalItems\n        }\n    }\n    fragment PaymentMethodListItem on PaymentMethod {\n        id\n        createdAt\n        updatedAt\n        name\n        description\n        code\n        enabled\n    }\n`;\n\n@Component({\n    selector: 'vdr-payment-method-list',\n    templateUrl: './payment-method-list.component.html',\n    styleUrls: ['./payment-method-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class PaymentMethodListComponent extends TypedBaseListComponent<\n    typeof GetPaymentMethodListDocument,\n    'paymentMethods'\n> {\n    dataTableListId = 'payment-method-list';\n    readonly customFields = this.getCustomFieldConfig('PaymentMethod');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: _('common.name'),\n            filterField: 'name',\n        })\n        .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: _('common.code'),\n            filterField: 'code',\n        })\n        .addFilter({\n            name: 'enabled',\n            type: { kind: 'boolean' },\n            label: _('common.enabled'),\n            filterField: 'enabled',\n        })\n        .addFilter({\n            name: 'description',\n            type: { kind: 'text' },\n            label: _('common.description'),\n            filterField: 'description',\n        })\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('createdAt', 'DESC')\n        .addSort({ name: 'id' })\n        .addSort({ name: 'createdAt' })\n        .addSort({ name: 'updatedAt' })\n        .addSort({ name: 'name' })\n        .addSort({ name: 'code' })\n        .addSort({ name: 'description' })\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        super.configure({\n            document: GetPaymentMethodListDocument,\n            getItems: data => data.paymentMethods,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n}\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left></vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"profile\"></vdr-action-bar-items>\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                (click)=\"save()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.update' | translate }}\r\n            </button>\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'settings.email-address' | translate\" for=\"emailAddress\">\r\n                        <input id=\"emailAddress\" type=\"text\" formControlName=\"emailAddress\" />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'settings.first-name' | translate\" for=\"firstName\">\r\n                        <input id=\"firstName\" type=\"text\" formControlName=\"firstName\" />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'settings.last-name' | translate\" for=\"lastName\">\r\n                        <input id=\"lastName\" type=\"text\" formControlName=\"lastName\" />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        *ngIf=\"isNew$ | async\"\r\n                        [label]=\"'settings.password' | translate\"\r\n                        for=\"password\"\r\n                    >\r\n                        <input id=\"password\" type=\"password\" formControlName=\"password\" />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'settings.password' | translate\"\r\n                        for=\"password\"\r\n                        [readOnlyToggle]=\"true\"\r\n                    >\r\n                        <input id=\"password\" type=\"password\" formControlName=\"password\" />\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Administrator\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"administrator-profile\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    Administrator,\r\n    DataService,\r\n    getCustomFieldsDefaults,\r\n    GetProfileDetailDocument,\r\n    LanguageCode,\r\n    NotificationService,\r\n    TypedBaseDetailComponent,\r\n    UpdateActiveAdministratorInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport const GET_PROFILE_DETAIL = gql`\r\n    query GetProfileDetail {\r\n        activeAdministrator {\r\n            ...ProfileDetail\r\n        }\r\n    }\r\n    fragment ProfileDetail on Administrator {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        firstName\r\n        lastName\r\n        emailAddress\r\n        user {\r\n            id\r\n            lastLogin\r\n            verified\r\n        }\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-profile',\r\n    templateUrl: './profile.component.html',\r\n    styleUrls: ['./profile.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ProfileComponent\r\n    extends TypedBaseDetailComponent<typeof GetProfileDetailDocument, 'activeAdministrator'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('Administrator');\r\n    detailForm = this.formBuilder.group({\r\n        emailAddress: ['', Validators.required],\r\n        firstName: ['', Validators.required],\r\n        lastName: ['', Validators.required],\r\n        password: [''],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    save() {\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(({ id }) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const administrator: UpdateActiveAdministratorInput = {\r\n                        emailAddress: formValue.emailAddress,\r\n                        firstName: formValue.firstName,\r\n                        lastName: formValue.lastName,\r\n                        password: formValue.password,\r\n                        customFields: formValue.customFields,\r\n                    };\r\n                    return this.dataService.administrator.updateActiveAdministrator(administrator);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Administrator',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Administrator',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    protected setFormValues(administrator: Administrator, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            emailAddress: administrator.emailAddress,\r\n            firstName: administrator.firstName,\r\n            lastName: administrator.lastName,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get('customFields'),\r\n                administrator,\r\n            );\r\n        }\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left></vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"role-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    *vdrIfPermissions=\"'UpdateAdministrator'\"\r\n                    [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"role-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.description' | translate\" for=\"description\">\r\n                        <input\r\n                            id=\"description\"\r\n                            type=\"text\"\r\n                            formControlName=\"description\"\r\n                            [readonly]=\"!('UpdateAdministrator' | hasPermission)\"\r\n                            (input)=\"updateCode($event.target.value)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'common.code' | translate\"\r\n                        for=\"code\"\r\n                        [readOnlyToggle]=\"'UpdateAdministrator' | hasPermission\"\r\n                    >\r\n                        <input\r\n                            id=\"code\"\r\n                            type=\"text\"\r\n                            formControlName=\"code\"\r\n                            [readonly]=\"!('UpdateAdministrator' | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n    <vdr-page-block class=\"mt-2\">\r\n        <vdr-card [title]=\"'settings.permissions' | translate\">\r\n            <vdr-form-field [label]=\"'settings.channel' | translate\">\r\n                <vdr-channel-assignment-control\r\n                    formControlName=\"channelIds\"\r\n                    [vdrDisabled]=\"!('UpdateAdministrator' | hasPermission)\"\r\n                ></vdr-channel-assignment-control>\r\n            </vdr-form-field>\r\n            <vdr-permission-grid\r\n                class=\"mt-2\"\r\n                [permissionDefinitions]=\"permissionDefinitions\"\r\n                [activePermissions]=\"detailForm.get('permissions')?.value\"\r\n                (permissionChange)=\"setPermission($event)\"\r\n                [readonly]=\"!('UpdateAdministrator' | hasPermission)\"\r\n            ></vdr-permission-grid>\r\n        </vdr-card>\r\n    </vdr-page-block>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CreateRoleInput,\r\n    DataService,\r\n    GetRoleDetailDocument,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    Role,\r\n    ROLE_FRAGMENT,\r\n    TypedBaseDetailComponent,\r\n    UpdateRoleInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { unique } from '@vendure/common/lib/unique';\r\nimport { gql } from 'apollo-angular';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport const GET_ROLE_DETAIL = gql`\r\n    query GetRoleDetail($id: ID!) {\r\n        role(id: $id) {\r\n            ...Role\r\n        }\r\n    }\r\n    ${ROLE_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-role-detail',\r\n    templateUrl: './role-detail.component.html',\r\n    styleUrls: ['./role-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class RoleDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetRoleDetailDocument, 'role'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    detailForm = this.formBuilder.group({\r\n        code: ['', Validators.required],\r\n        description: ['', Validators.required],\r\n        channelIds: [[] as string[]],\r\n        permissions: [[] as Permission[]],\r\n    });\r\n    permissionDefinitions = this.serverConfigService.getPermissionDefinitions();\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    updateCode(nameValue: string) {\r\n        const codeControl = this.detailForm.get(['code']);\r\n        if (codeControl && codeControl.pristine) {\r\n            codeControl.setValue(normalizeString(nameValue, '-'));\r\n        }\r\n    }\r\n\r\n    setPermission(change: { permission: string; value: boolean }) {\r\n        const permissionsControl = this.detailForm.get('permissions');\r\n        if (permissionsControl) {\r\n            const currentPermissions = permissionsControl.value as string[];\r\n            const newValue = (\r\n                change.value === true\r\n                    ? unique([...currentPermissions, change.permission])\r\n                    : currentPermissions.filter(p => p !== change.permission)\r\n            ) as Permission[];\r\n            permissionsControl.setValue(newValue);\r\n            permissionsControl.markAsDirty();\r\n        }\r\n    }\r\n\r\n    create() {\r\n        const { code, description, permissions, channelIds } = this.detailForm.value;\r\n        if (!code || !description) {\r\n            return;\r\n        }\r\n        const role: CreateRoleInput = {\r\n            code,\r\n            description,\r\n            permissions: permissions ?? [],\r\n            channelIds,\r\n        };\r\n        this.dataService.administrator.createRole(role).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), { entity: 'Role' });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createRole.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'Role',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(({ id }) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const role: UpdateRoleInput = { id, ...formValue };\r\n                    return this.dataService.administrator.updateRole(role);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), { entity: 'Role' });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Role',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    protected setFormValues(role: Role, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            description: role.description,\r\n            code: role.code,\r\n            channelIds: role.channels.map(c => c.id),\r\n            permissions: role.permissions,\r\n        });\r\n        // This was required to get the channel selector component to\r\n        // correctly display its contents. A while spent debugging the root\r\n        // cause did not yield a solution, therefore this next line.\r\n        this.changeDetector.detectChanges();\r\n    }\r\n}\r\n","import { createBulkDeleteAction, GetRolesQuery, ItemOf, Permission } from '@vendure/admin-ui/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport const deleteRolesBulkAction = createBulkDeleteAction<ItemOf<GetRolesQuery, 'roles'>>({\r\n    location: 'role-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteAdministrator),\r\n    getItemName: item => item.description,\r\n    bulkDelete: (dataService, ids) =>\r\n        dataService.administrator.deleteRoles(ids).pipe(map(res => res.deleteRoles)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"role-list\" />\r\n            <a\r\n                class=\"btn btn-primary\"\r\n                *vdrIfPermissions=\"['CreateAdministrator']\"\r\n                [routerLink]=\"['./', 'create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'settings.create-new-role' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"role-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"role-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-role=\"item\">\r\n            {{ role.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\" id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-role=\"item\">\r\n            {{ role.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\" id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-role=\"item\">\r\n            {{ role.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.description' | translate\" id=\"description\"\r\n        [optional]=\"false\"\r\n        [sort]=\"sorts.get('description')\"\r\n    >\r\n        <ng-template let-role=\"item\">\r\n            <a\r\n                *ngIf=\"!isDefaultRole(role); else defaultRole\"\r\n                class=\"button-ghost\"\r\n                [routerLink]=\"['./', role.id]\"\r\n                ><span>{{ role.description }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n            <ng-template #defaultRole>\r\n                {{ role.description }}\r\n            </ng-template>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\" [sort]=\"sorts.get('code')\">\r\n        <ng-template let-role=\"item\">\r\n            <span *ngIf=\"!isDefaultRole(role)\">{{ role.code }}</span>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'settings.channel' | translate\" id=\"channel\">\r\n        <ng-template let-role=\"item\">\r\n            <ng-container *ngIf=\"!isDefaultRole(role)\">\r\n                <vdr-chip *ngFor=\"let channel of role.channels\">\r\n                    <vdr-channel-badge [channelCode]=\"channel.code\"></vdr-channel-badge>\r\n                    <div class=\"ml-1\">{{ channel.code | channelCodeToLabel | translate }}</div>\r\n                </vdr-chip>\r\n            </ng-container>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'settings.permissions' | translate\" id=\"permissions\">\r\n        <ng-template let-role=\"item\">\r\n            <ng-container *ngIf=\"!isDefaultRole(role); else defaultRole\">\r\n                <div class=\"permissions-list\">\r\n                    <vdr-chip\r\n                        *ngFor=\"let permission of role.permissions | slice : 0 : displayLimit[role.id] || 3\"\r\n                        >{{ permission }}</vdr-chip\r\n                    >\r\n                    <button\r\n                        class=\"button-small\"\r\n                        *ngIf=\"role.permissions.length > initialLimit\"\r\n                        (click)=\"toggleDisplayLimit(role)\"\r\n                    >\r\n                        <ng-container\r\n                            *ngIf=\"(displayLimit[role.id] || 0) < role.permissions.length; else collapse\"\r\n                        >\r\n                            <clr-icon shape=\"plus\"></clr-icon>\r\n                            {{ role.permissions.length - initialLimit }}\r\n                        </ng-container>\r\n                        <ng-template #collapse>\r\n                            <clr-icon shape=\"minus\"></clr-icon>\r\n                        </ng-template>\r\n                    </button>\r\n                </div>\r\n            </ng-container>\r\n            <ng-template #defaultRole>\r\n                <span class=\"default-role-label\">{{ 'settings.default-role-label' | translate }}</span>\r\n            </ng-template>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    GetRoleListDocument,\n    GetRolesQuery,\n    ItemOf,\n    Role,\n    ROLE_FRAGMENT,\n    TypedBaseListComponent,\n} from '@vendure/admin-ui/core';\nimport { CUSTOMER_ROLE_CODE, SUPER_ADMIN_ROLE_CODE } from '@vendure/common/lib/shared-constants';\nimport { gql } from 'apollo-angular';\n\nexport const GET_ROLE_LIST = gql`\n    query GetRoleList($options: RoleListOptions) {\n        roles(options: $options) {\n            items {\n                ...Role\n            }\n            totalItems\n        }\n    }\n    ${ROLE_FRAGMENT}\n`;\n\n@Component({\n    selector: 'vdr-role-list',\n    templateUrl: './role-list.component.html',\n    styleUrls: ['./role-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class RoleListComponent\n    extends TypedBaseListComponent<typeof GetRoleListDocument, 'roles'>\n    implements OnInit\n{\n    dataTableListId = 'role-list';\n    readonly initialLimit = 3;\n    displayLimit: { [id: string]: number } = {};\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: _('common.code'),\n            filterField: 'code',\n        })\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('createdAt', 'DESC')\n        .addSort({ name: 'createdAt' })\n        .addSort({ name: 'updatedAt' })\n        .addSort({ name: 'code' })\n        .addSort({ name: 'description' })\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        super.configure({\n            document: GetRoleListDocument,\n            getItems: data => data.roles,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        code: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n\n    toggleDisplayLimit(role: ItemOf<GetRolesQuery, 'roles'>) {\n        if (this.displayLimit[role.id] === role.permissions.length) {\n            this.displayLimit[role.id] = this.initialLimit;\n        } else {\n            this.displayLimit[role.id] = role.permissions.length;\n        }\n    }\n\n    isDefaultRole(role: Role): boolean {\n        return role.code === SUPER_ADMIN_ROLE_CODE || role.code === CUSTOMER_ROLE_CODE;\n    }\n}\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"seller-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"!saveButtonEnabled()\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    *vdrIfPermissions=\"['SuperAdmin', 'UpdateSeller']\"\r\n                    [disabled]=\"!saveButtonEnabled()\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"seller-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            formControlName=\"name\"\r\n                        />\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Seller\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"seller-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CreateSellerInput,\r\n    DataService,\r\n    getCustomFieldsDefaults,\r\n    GetSellerDetailDocument,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    SellerFragment,\r\n    TypedBaseDetailComponent,\r\n    UpdateSellerInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport const GET_SELLER_DETAIL = gql`\r\n    query GetSellerDetail($id: ID!) {\r\n        seller(id: $id) {\r\n            ...SellerDetail\r\n        }\r\n    }\r\n    fragment SellerDetail on Seller {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-seller-detail',\r\n    templateUrl: './seller-detail.component.html',\r\n    styleUrls: ['./seller-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class SellerDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetSellerDetailDocument, 'seller'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('Seller');\r\n    detailForm = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n    readonly updatePermission = [Permission.SuperAdmin, Permission.UpdateSeller, Permission.CreateSeller];\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    saveButtonEnabled(): boolean {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        if (!formValue.name) {\r\n            return;\r\n        }\r\n        const input: CreateSellerInput = {\r\n            name: formValue.name,\r\n            customFields: formValue.customFields,\r\n        };\r\n        this.dataService.settings.createSeller(input).subscribe(data => {\r\n            switch (data.createSeller.__typename) {\r\n                case 'Seller':\r\n                    this.notificationService.success(_('common.notify-create-success'), {\r\n                        entity: 'Seller',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                    this.router.navigate(['../', data.createSeller.id], { relativeTo: this.route });\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(seller => {\r\n                    const input = {\r\n                        id: seller.id,\r\n                        name: formValue.name,\r\n                        customFields: formValue.customFields,\r\n                    } as UpdateSellerInput;\r\n                    return this.dataService.settings.updateSeller(input);\r\n                }),\r\n            )\r\n            .subscribe(({ updateSeller }) => {\r\n                switch (updateSeller.__typename) {\r\n                    case 'Seller':\r\n                        this.notificationService.success(_('common.notify-update-success'), {\r\n                            entity: 'Seller',\r\n                        });\r\n                        this.detailForm.markAsPristine();\r\n                        this.changeDetector.markForCheck();\r\n                        break;\r\n                    // case 'LanguageNotAvailableError':\r\n                    //     this.notificationService.error(updateSeller.message);\r\n                }\r\n            });\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: SellerFragment, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get(['customFields']), entity);\r\n        }\r\n    }\r\n}\r\n","import { createBulkDeleteAction, GetSellersQuery, ItemOf, Permission } from '@vendure/admin-ui/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport const deleteSellersBulkAction = createBulkDeleteAction<ItemOf<GetSellersQuery, 'sellers'>>({\r\n    location: 'seller-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteSeller),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) =>\r\n        dataService.settings.deleteSellers(ids).pipe(map(res => res.deleteSellers)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"seller-list\" />\r\n            <a class=\"btn btn-primary\" *vdrIfPermissions=\"['SuperAdmin', 'CreateSeller']\" [routerLink]=\"['./', 'create']\">\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'settings.create-new-seller' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"seller-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"seller-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-seller=\"item\">{{ seller.id }}</ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\" id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-seller=\"item\">\r\n            {{ seller.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\" id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-seller=\"item\">\r\n            {{ seller.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\" [sort]=\"sorts.get('name')\">\r\n        <ng-template let-seller=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', seller.id]\"\r\n                ><span>{{ seller.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column *ngFor=\"let customField of customFields\" [customField]=\"customField\" [sorts]=\"sorts\" />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { GetSellerListDocument, TypedBaseListComponent } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\n\nconst GET_SELLER_LIST = gql`\n    query GetSellerList($options: SellerListOptions) {\n        sellers(options: $options) {\n            items {\n                ...SellerListItem\n            }\n            totalItems\n        }\n    }\n    fragment SellerListItem on Seller {\n        id\n        createdAt\n        updatedAt\n        name\n    }\n`;\n\n@Component({\n    selector: 'vdr-seller-list',\n    templateUrl: './seller-list.component.html',\n    styleUrls: ['./seller-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class SellerListComponent\n    extends TypedBaseListComponent<typeof GetSellerListDocument, 'sellers'>\n    implements OnInit\n{\n    dataTableListId = 'seller-list';\n    readonly customFields = this.getCustomFieldConfig('Seller');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: _('common.name'),\n            filterField: 'name',\n        })\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('createdAt', 'DESC')\n        .addSort({ name: 'createdAt' })\n        .addSort({ name: 'updatedAt' })\n        .addSort({ name: 'name' })\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        super.configure({\n            document: GetSellerListDocument,\n            getItems: data => data.sellers,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n}\n","<vdr-card class=\"test-result\" [title]=\"'settings.test-result' | translate\">\r\n    <div class=\"card-span\" *ngFor=\"let quote of testResult\">\r\n        <div class=\"result-details\" [class.stale]=\"testDataUpdated\">\r\n            <vdr-labeled-data [label]=\"'settings.shipping-method' | translate\">\r\n                {{ quote.name }}\r\n            </vdr-labeled-data>\r\n            <div class=\"price-row\">\r\n                <vdr-labeled-data [label]=\"'common.price' | translate\">\r\n                    {{ quote.price | localeCurrency: currencyCode }}\r\n                </vdr-labeled-data>\r\n                <vdr-labeled-data [label]=\"'common.price-with-tax' | translate\">\r\n                    {{ quote.priceWithTax | localeCurrency: currencyCode }}\r\n                </vdr-labeled-data>\r\n            </div>\r\n            <vdr-object-tree *ngIf=\"quote.metadata\" [value]=\"quote.metadata\"></vdr-object-tree>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-span\" *ngIf=\"testResult?.length === 0\">\r\n        <clr-icon shape=\"ban\" class=\"is-solid error\"></clr-icon>\r\n        {{ 'settings.no-eligible-shipping-methods' | translate }}\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button class=\"btn btn-secondary\" (click)=\"runTest.emit()\" [disabled]=\"!okToRun\">\r\n            {{ 'settings.test-shipping-methods' | translate }}\r\n        </button>\r\n    </div>\r\n</vdr-card>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { CurrencyCode, ShippingMethodQuote } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-shipping-eligibility-test-result',\r\n    templateUrl: './shipping-eligibility-test-result.component.html',\r\n    styleUrls: ['./shipping-eligibility-test-result.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShippingEligibilityTestResultComponent {\r\n    @Input() testResult: ShippingMethodQuote[];\r\n    @Input() okToRun = false;\r\n    @Input() testDataUpdated = false;\r\n    @Input() currencyCode: CurrencyCode;\r\n    @Output() runTest = new EventEmitter<void>();\r\n}\r\n","<table class=\"order-table table\" *ngIf=\"lines.length; else emptyPlaceholder\">\r\n    <thead>\r\n        <tr>\r\n            <th></th>\r\n            <th>{{ 'order.product-name' | translate }}</th>\r\n            <th>{{ 'order.product-sku' | translate }}</th>\r\n            <th>{{ 'order.unit-price' | translate }}</th>\r\n            <th>{{ 'order.quantity' | translate }}</th>\r\n            <th>{{ 'order.total' | translate }}</th>\r\n        </tr>\r\n    </thead>\r\n    <tr *ngFor=\"let line of lines\" class=\"order-line\">\r\n        <td class=\"align-middle thumb\">\r\n            <img [src]=\"line.preview + '?preset=tiny'\" />\r\n        </td>\r\n        <td class=\"align-middle name\">{{ line.name }}</td>\r\n        <td class=\"align-middle sku\">{{ line.sku }}</td>\r\n        <td class=\"align-middle unit-price\">\r\n            {{ line.unitPriceWithTax | localeCurrency : currencyCode }}\r\n        </td>\r\n        <td class=\"align-middle quantity\">\r\n            <input [(ngModel)]=\"line.quantity\" (change)=\"updateQuantity()\" type=\"number\" max=\"9999\" min=\"1\" />\r\n            <button class=\"icon-button\" (click)=\"removeLine(line)\">\r\n                <clr-icon shape=\"trash\"></clr-icon>\r\n            </button>\r\n        </td>\r\n        <td class=\"align-middle total\">\r\n            {{ line.unitPriceWithTax * line.quantity | localeCurrency : currencyCode }}\r\n        </td>\r\n    </tr>\r\n    <tr class=\"sub-total\">\r\n        <td class=\"left\">{{ 'order.sub-total' | translate }}</td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td></td>\r\n        <td>{{ subTotal | localeCurrency : currencyCode }}</td>\r\n    </tr>\r\n</table>\r\n\r\n<ng-template #emptyPlaceholder>\r\n    <div class=\"card-block empty-placeholder card-span\">\r\n        <div class=\"empty-text\">{{ 'settings.add-products-to-test-order' | translate }}</div>\r\n        <clr-icon shape=\"arrow\" dir=\"down\" size=\"96\"></clr-icon>\r\n    </div>\r\n</ng-template>\r\n<div class=\"card-block\">\r\n    <vdr-product-variant-selector (productSelected)=\"selectResult($event)\"> </vdr-product-variant-selector>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnInit, Output } from '@angular/core';\r\nimport {\r\n    CurrencyCode,\r\n    DataService,\r\n    LocalStorageService,\r\n    ProductSelectorSearchQuery,\r\n} from '@vendure/admin-ui/core';\r\n\r\ntype SearchItem = ProductSelectorSearchQuery['search']['items'][number];\r\n\r\nexport interface TestOrderLine {\r\n    id: string;\r\n    name: string;\r\n    preview: string;\r\n    sku: string;\r\n    unitPriceWithTax: number;\r\n    quantity: number;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-test-order-builder',\r\n    templateUrl: './test-order-builder.component.html',\r\n    styleUrls: ['./test-order-builder.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TestOrderBuilderComponent implements OnInit {\r\n    @Output() orderLinesChange = new EventEmitter<TestOrderLine[]>();\r\n    lines: TestOrderLine[] = [];\r\n    currencyCode: CurrencyCode;\r\n    get subTotal(): number {\r\n        return this.lines.reduce((sum, l) => sum + l.unitPriceWithTax * l.quantity, 0);\r\n    }\r\n\r\n    constructor(private dataService: DataService, private localStorageService: LocalStorageService) {}\r\n\r\n    ngOnInit() {\r\n        this.lines = this.loadFromLocalStorage();\r\n        if (this.lines) {\r\n            this.orderLinesChange.emit(this.lines);\r\n        }\r\n        this.dataService.settings.getActiveChannel('cache-first').single$.subscribe(result => {\r\n            this.currencyCode = result.activeChannel.defaultCurrencyCode;\r\n        });\r\n    }\r\n\r\n    selectResult(result: SearchItem) {\r\n        if (result) {\r\n            this.addToLines(result);\r\n        }\r\n    }\r\n\r\n    private addToLines(result: SearchItem) {\r\n        if (!this.lines.find(l => l.id === result.productVariantId)) {\r\n            this.lines.push({\r\n                id: result.productVariantId,\r\n                name: result.productVariantName,\r\n                preview: result.productAsset?.preview ?? '',\r\n                quantity: 1,\r\n                sku: result.sku,\r\n                unitPriceWithTax:\r\n                    (result.priceWithTax.__typename === 'SinglePrice' && result.priceWithTax.value) || 0,\r\n            });\r\n            this.persistToLocalStorage();\r\n            this.orderLinesChange.emit(this.lines);\r\n        }\r\n    }\r\n\r\n    updateQuantity() {\r\n        this.persistToLocalStorage();\r\n        this.orderLinesChange.emit(this.lines);\r\n    }\r\n\r\n    removeLine(line: TestOrderLine) {\r\n        this.lines = this.lines.filter(l => l.id !== line.id);\r\n        this.persistToLocalStorage();\r\n        this.orderLinesChange.emit(this.lines);\r\n    }\r\n\r\n    private persistToLocalStorage() {\r\n        this.localStorageService.setForCurrentLocation('shippingTestOrder', this.lines);\r\n    }\r\n\r\n    private loadFromLocalStorage(): TestOrderLine[] {\r\n        return this.localStorageService.getForCurrentLocation('shippingTestOrder') || [];\r\n    }\r\n}\r\n","<div class=\"card\">\r\n    <div class=\"card-header\">\r\n        {{ 'settings.test-address' | translate }}\r\n    </div>\r\n    <div class=\"card-block\">\r\n        <form [formGroup]=\"form\" class=\"form-grid\">\r\n            <vdr-form-field [label]=\"'customer.city' | translate\">\r\n                <input formControlName=\"city\" type=\"text\"  />\r\n            </vdr-form-field>\r\n            <vdr-form-field [label]=\"'customer.province' | translate\">\r\n                <input formControlName=\"province\" type=\"text\"  />\r\n            </vdr-form-field>\r\n            <vdr-form-field [label]=\"'customer.postal-code' | translate\">\r\n                <input formControlName=\"postalCode\" type=\"text\"  />\r\n            </vdr-form-field>\r\n            <vdr-form-field [label]=\"'customer.country' | translate\">\r\n                <select name=\"countryCode\" formControlName=\"countryCode\" >\r\n                    <option *ngFor=\"let country of availableCountries$ | async\" [value]=\"country.code\">\r\n                        {{ country.name }}\r\n                    </option>\r\n                </select>\r\n            </vdr-form-field>\r\n        </form>\r\n    </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, OnDestroy, OnInit, Output } from '@angular/core';\r\nimport { UntypedFormBuilder, UntypedFormGroup } from '@angular/forms';\r\nimport { DataService, GetAvailableCountriesQuery, ItemOf, LocalStorageService } from '@vendure/admin-ui/core';\r\nimport { Observable, Subscription } from 'rxjs';\r\n\r\nexport interface TestAddress {\r\n    city: string;\r\n    province: string;\r\n    postalCode: string;\r\n    countryCode: string;\r\n}\r\n\r\n@Component({\r\n    selector: 'vdr-test-address-form',\r\n    templateUrl: './test-address-form.component.html',\r\n    styleUrls: ['./test-address-form.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TestAddressFormComponent implements OnInit, OnDestroy {\r\n    @Output() addressChange = new EventEmitter<TestAddress>();\r\n    availableCountries$: Observable<Array<ItemOf<GetAvailableCountriesQuery, 'countries'>>>;\r\n    form: UntypedFormGroup;\r\n    private subscription: Subscription;\r\n\r\n    constructor(\r\n        private formBuilder: UntypedFormBuilder,\r\n        private dataService: DataService,\r\n        private localStorageService: LocalStorageService,\r\n    ) {}\r\n\r\n    ngOnInit() {\r\n        this.availableCountries$ = this.dataService.settings\r\n            .getAvailableCountries()\r\n            .mapSingle(result => result.countries.items);\r\n        const storedValue = this.localStorageService.getForCurrentLocation('shippingTestAddress');\r\n        const initialValue: TestAddress = storedValue\r\n            ? storedValue\r\n            : {\r\n                  city: '',\r\n                  countryCode: '',\r\n                  postalCode: '',\r\n                  province: '',\r\n              };\r\n        this.addressChange.emit(initialValue);\r\n\r\n        this.form = this.formBuilder.group(initialValue);\r\n        this.subscription = this.form.valueChanges.subscribe(value => {\r\n            this.localStorageService.setForCurrentLocation('shippingTestAddress', value);\r\n            this.addressChange.emit(value);\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscription) {\r\n            this.subscription.unsubscribe();\r\n        }\r\n    }\r\n}\r\n","<div\r\n    class=\"test-result card\"\r\n    [ngClass]=\"{\r\n        success: testResult?.eligible === true,\r\n        error: testResult?.eligible === false,\r\n        unknown: !testResult\r\n    }\"\r\n>\r\n    <div class=\"card-header\">\r\n        {{ 'settings.test-result' | translate }}\r\n    </div>\r\n    <div class=\"card-block\">\r\n        <div class=\"result-details\" [class.stale]=\"testDataUpdated\">\r\n            <vdr-labeled-data [label]=\"'settings.eligible' | translate\">\r\n                <div class=\"eligible-icon\">\r\n                    <clr-icon\r\n                        shape=\"success-standard\"\r\n                        class=\"is-solid success\"\r\n                        *ngIf=\"testResult?.eligible\"\r\n                    ></clr-icon>\r\n                    <clr-icon\r\n                        shape=\"ban\"\r\n                        class=\"is-solid error\"\r\n                        *ngIf=\"testResult?.eligible === false\"\r\n                    ></clr-icon>\r\n                    <clr-icon shape=\"unknown-status\" *ngIf=\"!testResult\"></clr-icon>\r\n                </div>\r\n                {{ testResult?.eligible }}\r\n            </vdr-labeled-data>\r\n            <div class=\"price-row\">\r\n                <vdr-labeled-data\r\n                    [label]=\"'common.price' | translate\"\r\n                    *ngIf=\"testResult?.quote?.price != null\"\r\n                >\r\n                    {{ testResult.quote?.price | localeCurrency: currencyCode }}\r\n                </vdr-labeled-data>\r\n                <vdr-labeled-data\r\n                    [label]=\"'common.price-with-tax' | translate\"\r\n                    *ngIf=\"testResult?.quote?.priceWithTax != null\"\r\n                >\r\n                    {{ testResult.quote?.priceWithTax | localeCurrency: currencyCode }}\r\n                </vdr-labeled-data>\r\n            </div>\r\n            <vdr-object-tree\r\n                *ngIf=\"testResult?.quote?.metadata\"\r\n                [value]=\"testResult?.quote?.metadata\"\r\n            ></vdr-object-tree>\r\n        </div>\r\n    </div>\r\n    <div class=\"card-footer\">\r\n        <button class=\"btn btn-secondary\" (click)=\"runTest.emit()\" [disabled]=\"!okToRun\">\r\n            {{ 'settings.test-shipping-method' | translate }}\r\n        </button>\r\n    </div>\r\n</div>\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, Output } from '@angular/core';\r\n\r\nimport { CurrencyCode, TestShippingMethodResult } from '@vendure/admin-ui/core';\r\n\r\n@Component({\r\n    selector: 'vdr-shipping-method-test-result',\r\n    templateUrl: './shipping-method-test-result.component.html',\r\n    styleUrls: ['./shipping-method-test-result.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShippingMethodTestResultComponent {\r\n    @Input() testResult: TestShippingMethodResult;\r\n    @Input() okToRun = false;\r\n    @Input() testDataUpdated = false;\r\n    @Input() currencyCode: CurrencyCode;\r\n    @Output() runTest = new EventEmitter<void>();\r\n}\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [disabled]=\"isNew$ | async\"\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"languageCode$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            />\r\n        </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"shipping-method-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"\r\n                    detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\r\n                \"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    *vdrIfPermissions=\"updatePermission\"\r\n                    [disabled]=\"\r\n                        detailForm.pristine || detailForm.invalid || !selectedChecker || !selectedCalculator\r\n                    \"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"shipping-method-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            (input)=\"updateCode(entity?.code, $event.target.value)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        [label]=\"'common.code' | translate\"\r\n                        for=\"code\"\r\n                        [readOnlyToggle]=\"updatePermission | hasPermission\"\r\n                    >\r\n                        <input\r\n                            id=\"code\"\r\n                            type=\"text\"\r\n                            formControlName=\"code\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-rich-text-editor\r\n                        class=\"form-grid-span\"\r\n                        formControlName=\"description\"\r\n                        [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        [label]=\"'common.description' | translate\"\r\n                    ></vdr-rich-text-editor>\r\n                    <vdr-form-field\r\n                        [label]=\"'settings.fulfillment-handler' | translate\"\r\n                        for=\"fulfillmentHandler\"\r\n                    >\r\n                        <select\r\n                            name=\"fulfillmentHandler\"\r\n                            formControlName=\"fulfillmentHandler\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option *ngFor=\"let handler of fulfillmentHandlers\" [value]=\"handler.code\">\r\n                                {{ handler.code }}: {{ handler.description }}\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"ShippingMethod\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"shipping-method-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n\r\n            <vdr-card [title]=\"'settings.shipping-eligibility-checker' | translate\">\r\n                <vdr-configurable-input\r\n                    class=\"card-span\"\r\n                    *ngIf=\"selectedChecker && selectedCheckerDefinition\"\r\n                    [operation]=\"selectedChecker\"\r\n                    [operationDefinition]=\"selectedCheckerDefinition\"\r\n                    [readonly]=\"!(updatePermission | hasPermission)\"\r\n                    (remove)=\"selectedChecker = null\"\r\n                    formControlName=\"checker\"\r\n                ></vdr-configurable-input>\r\n                <div *ngIf=\"!selectedChecker || !selectedCheckerDefinition\" class=\"card-span\">\r\n                    <vdr-dropdown>\r\n                        <button class=\"btn btn-outline\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"plus\"></clr-icon>\r\n                            {{ 'common.select' | translate }}\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-left\">\r\n                            <button\r\n                                *ngFor=\"let checker of checkers\"\r\n                                type=\"button\"\r\n                                vdrDropdownItem\r\n                                (click)=\"selectChecker(checker)\"\r\n                            >\r\n                                {{ checker.description }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'settings.shipping-calculator' | translate\">\r\n                <vdr-configurable-input\r\n                    class=\"card-span\"\r\n                    *ngIf=\"selectedCalculator && selectedCalculatorDefinition\"\r\n                    [operation]=\"selectedCalculator\"\r\n                    [operationDefinition]=\"selectedCalculatorDefinition\"\r\n                    [readonly]=\"!(updatePermission | hasPermission)\"\r\n                    (remove)=\"selectedCalculator = null\"\r\n                    formControlName=\"calculator\"\r\n                ></vdr-configurable-input>\r\n                <div *ngIf=\"!selectedCalculator || !selectedCalculatorDefinition\" class=\"card-span\">\r\n                    <vdr-dropdown>\r\n                        <button class=\"btn btn-outline\" vdrDropdownTrigger>\r\n                            <clr-icon shape=\"plus\"></clr-icon>\r\n                            {{ 'common.select' | translate }}\r\n                        </button>\r\n                        <vdr-dropdown-menu vdrPosition=\"bottom-left\">\r\n                            <button\r\n                                *ngFor=\"let calculator of calculators\"\r\n                                type=\"button\"\r\n                                vdrDropdownItem\r\n                                (click)=\"selectCalculator(calculator)\"\r\n                            >\r\n                                {{ calculator.description }}\r\n                            </button>\r\n                        </vdr-dropdown-menu>\r\n                    </vdr-dropdown>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card [title]=\"'settings.test-shipping-method' | translate\">\r\n                <vdr-test-order-builder\r\n                    class=\"card-span\"\r\n                    (orderLinesChange)=\"setTestOrderLines($event)\"\r\n                ></vdr-test-order-builder>\r\n                <vdr-test-address-form\r\n                    (addressChange)=\"setTestAddress($event)\"\r\n                    class=\"mt-2\"\r\n                ></vdr-test-address-form>\r\n                <vdr-shipping-method-test-result\r\n                    class=\"mt-2\"\r\n                    [currencyCode]=\"(activeChannel$ | async)?.currencyCode\"\r\n                    [okToRun]=\"allTestDataPresent() && testDataUpdated && detailForm.valid\"\r\n                    [testDataUpdated]=\"testDataUpdated\"\r\n                    [testResult]=\"testResult$ | async\"\r\n                    (runTest)=\"runTest()\"\r\n                ></vdr-shipping-method-test-result>\r\n            </vdr-card>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    configurableDefinitionToInstance,\r\n    ConfigurableOperation,\r\n    ConfigurableOperationDefinition,\r\n    CreateShippingMethodInput,\r\n    createUpdatedTranslatable,\r\n    DataService,\r\n    findTranslation,\r\n    GetActiveChannelQuery,\r\n    getConfigArgValue,\r\n    getCustomFieldsDefaults,\r\n    GetShippingMethodDetailDocument,\r\n    GetShippingMethodDetailQuery,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    SHIPPING_METHOD_FRAGMENT,\r\n    ShippingMethodFragment,\r\n    TestShippingMethodInput,\r\n    TestShippingMethodResult,\r\n    toConfigurableOperationInput,\r\n    TypedBaseDetailComponent,\r\n    UpdateShippingMethodInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { normalizeString } from '@vendure/common/lib/normalize-string';\r\nimport { gql } from 'apollo-angular';\r\nimport { combineLatest, merge, Observable, of, Subject } from 'rxjs';\r\nimport { mergeMap, switchMap, take, takeUntil } from 'rxjs/operators';\r\n\r\nimport { TestAddress } from '../test-address-form/test-address-form.component';\r\nimport { TestOrderLine } from '../test-order-builder/test-order-builder.component';\r\n\r\nexport const GET_SHIPPING_METHOD_DETAIL = gql`\r\n    query GetShippingMethodDetail($id: ID!) {\r\n        shippingMethod(id: $id) {\r\n            ...ShippingMethod\r\n        }\r\n    }\r\n    ${SHIPPING_METHOD_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-shipping-method-detail',\r\n    templateUrl: './shipping-method-detail.component.html',\r\n    styleUrls: ['./shipping-method-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ShippingMethodDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetShippingMethodDetailDocument, 'shippingMethod'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('ShippingMethod');\r\n    detailForm = this.formBuilder.group({\r\n        code: ['', Validators.required],\r\n        name: ['', Validators.required],\r\n        description: '',\r\n        fulfillmentHandler: ['', Validators.required],\r\n        checker: {} as NonNullable<GetShippingMethodDetailQuery['shippingMethod']>['checker'],\r\n        calculator: {} as NonNullable<GetShippingMethodDetailQuery['shippingMethod']>['calculator'],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n    checkers: ConfigurableOperationDefinition[] = [];\r\n    calculators: ConfigurableOperationDefinition[] = [];\r\n    fulfillmentHandlers: ConfigurableOperationDefinition[] = [];\r\n    selectedChecker?: ConfigurableOperation | null;\r\n    selectedCheckerDefinition?: ConfigurableOperationDefinition;\r\n    selectedCalculator?: ConfigurableOperation | null;\r\n    selectedCalculatorDefinition?: ConfigurableOperationDefinition;\r\n    activeChannel$: Observable<GetActiveChannelQuery['activeChannel']>;\r\n    testAddress: TestAddress;\r\n    testOrderLines: TestOrderLine[];\r\n    testDataUpdated = false;\r\n    testResult$: Observable<TestShippingMethodResult | undefined>;\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateShippingMethod];\r\n    private fetchTestResult$ = new Subject<[TestAddress, TestOrderLine[]]>();\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.dataService.shippingMethod.getShippingMethodOperations().single$.subscribe(data => {\r\n            this.checkers = data.shippingEligibilityCheckers;\r\n            this.calculators = data.shippingCalculators;\r\n            this.fulfillmentHandlers = data.fulfillmentHandlers;\r\n            this.changeDetector.markForCheck();\r\n            this.selectedCheckerDefinition = data.shippingEligibilityCheckers.find(\r\n                c => c.code === this.entity?.checker?.code,\r\n            );\r\n            this.selectedCalculatorDefinition = data.shippingCalculators.find(\r\n                c => c.code === this.entity?.calculator?.code,\r\n            );\r\n        });\r\n\r\n        this.activeChannel$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .mapStream(data => data.activeChannel);\r\n\r\n        this.testResult$ = this.fetchTestResult$.pipe(\r\n            switchMap(([address, lines]) => {\r\n                const { checker, calculator } = this.detailForm.value;\r\n                if (!this.selectedChecker || !this.selectedCalculator || !checker || !calculator) {\r\n                    return of(undefined);\r\n                }\r\n                const input: TestShippingMethodInput = {\r\n                    shippingAddress: { ...address, streetLine1: 'test' },\r\n                    lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\r\n                    checker: toConfigurableOperationInput(this.selectedChecker, checker),\r\n                    calculator: toConfigurableOperationInput(this.selectedCalculator, calculator),\r\n                };\r\n                return this.dataService.shippingMethod\r\n                    .testShippingMethod(input)\r\n                    .mapSingle(result => result.testShippingMethod);\r\n            }),\r\n        );\r\n\r\n        /* eslint-disable @typescript-eslint/no-non-null-assertion */\r\n        merge(\r\n            this.detailForm.get(['checker'])!.valueChanges,\r\n            this.detailForm.get(['calculator'])!.valueChanges,\r\n        )\r\n            .pipe(takeUntil(this.destroy$))\r\n            .subscribe(() => (this.testDataUpdated = true));\r\n        /* eslint-enable @typescript-eslint/no-non-null-assertion */\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy();\r\n    }\r\n\r\n    updateCode(currentCode: string | undefined, nameValue: string) {\r\n        if (!currentCode) {\r\n            const codeControl = this.detailForm.get(['code']);\r\n            if (codeControl && codeControl.pristine) {\r\n                codeControl.setValue(normalizeString(nameValue, '-'));\r\n            }\r\n        }\r\n    }\r\n\r\n    selectChecker(checker: ConfigurableOperationDefinition) {\r\n        this.selectedCheckerDefinition = checker;\r\n        this.selectedChecker = configurableDefinitionToInstance(checker);\r\n        const formControl = this.detailForm.get('checker');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedChecker);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    selectCalculator(calculator: ConfigurableOperationDefinition) {\r\n        this.selectedCalculatorDefinition = calculator;\r\n        this.selectedCalculator = configurableDefinitionToInstance(calculator);\r\n        const formControl = this.detailForm.get('calculator');\r\n        if (formControl) {\r\n            formControl.clearValidators();\r\n            formControl.updateValueAndValidity({ onlySelf: true });\r\n            formControl.patchValue(this.selectedCalculator);\r\n        }\r\n        this.detailForm.markAsDirty();\r\n    }\r\n\r\n    create() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedCalculator = this.selectedCalculator;\r\n        const { checker, calculator } = this.detailForm.value;\r\n        if (!selectedChecker || !selectedCalculator || !checker || !calculator) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        const input = {\r\n            ...(this.getUpdatedShippingMethod(\r\n                {\r\n                    createdAt: '',\r\n                    updatedAt: '',\r\n                    id: '',\r\n                    code: '',\r\n                    name: '',\r\n                    description: '',\r\n                    fulfillmentHandlerCode: '',\r\n                    checker: undefined as any,\r\n                    calculator: undefined as any,\r\n                    translations: [],\r\n                },\r\n                this.detailForm,\r\n                this.languageCode,\r\n            ) as CreateShippingMethodInput),\r\n            checker: toConfigurableOperationInput(selectedChecker, checker),\r\n            calculator: toConfigurableOperationInput(selectedCalculator, calculator),\r\n        };\r\n        this.dataService.shippingMethod.createShippingMethod(input).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'ShippingMethod',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createShippingMethod.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'ShippingMethod',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        const selectedChecker = this.selectedChecker;\r\n        const selectedCalculator = this.selectedCalculator;\r\n        const { checker, calculator } = this.detailForm.value;\r\n        if (!selectedChecker || !selectedCalculator || !checker || !calculator) {\r\n            return;\r\n        }\r\n        combineLatest([this.entity$, this.languageCode$])\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(([shippingMethod, languageCode]) => {\r\n                    const formValue = this.detailForm.value;\r\n                    const input = {\r\n                        ...(this.getUpdatedShippingMethod(\r\n                            shippingMethod,\r\n                            this.detailForm,\r\n                            languageCode,\r\n                        ) as UpdateShippingMethodInput),\r\n                        checker: toConfigurableOperationInput(selectedChecker, checker),\r\n                        calculator: toConfigurableOperationInput(selectedCalculator, calculator),\r\n                    };\r\n                    return this.dataService.shippingMethod.updateShippingMethod(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'ShippingMethod',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    // eslint-disable-next-line no-console\r\n                    console.error(err);\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'ShippingMethod',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    setTestOrderLines(event: TestOrderLine[]) {\r\n        this.testOrderLines = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n\r\n    setTestAddress(event: TestAddress) {\r\n        this.testAddress = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n\r\n    allTestDataPresent(): boolean {\r\n        return !!(\r\n            this.testAddress &&\r\n            this.testOrderLines &&\r\n            this.testOrderLines.length &&\r\n            this.selectedChecker &&\r\n            this.selectedCalculator\r\n        );\r\n    }\r\n\r\n    runTest() {\r\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\r\n        this.testDataUpdated = false;\r\n    }\r\n\r\n    /**\r\n     * Given a ShippingMethod and the value of the detailForm, this method creates an updated copy which\r\n     * can then be persisted to the API.\r\n     */\r\n    private getUpdatedShippingMethod(\r\n        shippingMethod: NonNullable<GetShippingMethodDetailQuery['shippingMethod']>,\r\n        formGroup: typeof this.detailForm,\r\n        languageCode: LanguageCode,\r\n    ): Omit<CreateShippingMethodInput | UpdateShippingMethodInput, 'checker' | 'calculator'> {\r\n        const formValue = formGroup.value;\r\n        const input = createUpdatedTranslatable({\r\n            translatable: shippingMethod,\r\n            updatedFields: formValue,\r\n            customFieldConfig: this.customFields,\r\n            languageCode,\r\n            defaultTranslation: {\r\n                languageCode,\r\n                name: shippingMethod.name || '',\r\n                description: shippingMethod.description || '',\r\n            },\r\n        });\r\n        return { ...input, fulfillmentHandler: formValue.fulfillmentHandler };\r\n    }\r\n\r\n    protected setFormValues(shippingMethod: ShippingMethodFragment, languageCode: LanguageCode): void {\r\n        const currentTranslation = findTranslation(shippingMethod, languageCode);\r\n        this.detailForm.patchValue({\r\n            name: currentTranslation?.name ?? '',\r\n            description: currentTranslation?.description ?? '',\r\n            code: shippingMethod.code,\r\n            fulfillmentHandler: shippingMethod.fulfillmentHandlerCode,\r\n            checker: shippingMethod.checker || {},\r\n            calculator: shippingMethod.calculator || {},\r\n        });\r\n        if (!this.selectedChecker) {\r\n            this.selectedChecker = shippingMethod.checker && {\r\n                code: shippingMethod.checker.code,\r\n                args: shippingMethod.checker.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (!this.selectedCalculator) {\r\n            this.selectedCalculator = shippingMethod.calculator && {\r\n                code: shippingMethod.calculator?.code,\r\n                args: shippingMethod.calculator?.args.map(a => ({ ...a, value: getConfigArgValue(a.value) })),\r\n            };\r\n        }\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(\r\n                this.customFields,\r\n                this.detailForm.get(['customFields']),\r\n                shippingMethod,\r\n                currentTranslation,\r\n            );\r\n        }\r\n    }\r\n}\r\n","import {\r\n    createBulkAssignToChannelAction,\r\n    createBulkDeleteAction,\r\n    createBulkRemoveFromChannelAction,\r\n    GetShippingMethodListQuery,\r\n    GetRolesQuery,\r\n    ItemOf,\r\n    Permission,\r\n    AssignShippingMethodsToChannelDocument,\r\n    RemoveShippingMethodsFromChannelDocument,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport const deleteShippingMethodsBulkAction = createBulkDeleteAction<\r\n    ItemOf<GetShippingMethodListQuery, 'shippingMethods'>\r\n>({\r\n    location: 'shipping-method-list',\r\n    requiresPermission: userPermissions => userPermissions.includes(Permission.DeleteShippingMethod),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) =>\r\n        dataService.shippingMethod.deleteShippingMethods(ids).pipe(map(res => res.deleteShippingMethods)),\r\n});\r\n\r\nconst ASSIGN_SHIPPING_METHODS_TO_CHANNEL = gql`\r\n    mutation AssignShippingMethodsToChannel($input: AssignShippingMethodsToChannelInput!) {\r\n        assignShippingMethodsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nconst REMOVE_SHIPPING_METHODS_FROM_CHANNEL = gql`\r\n    mutation RemoveShippingMethodsFromChannel($input: RemoveShippingMethodsFromChannelInput!) {\r\n        removeShippingMethodsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\nexport const assignShippingMethodsToChannelBulkAction = createBulkAssignToChannelAction<\r\n    ItemOf<GetShippingMethodListQuery, 'shippingMethods'>\r\n>({\r\n    location: 'shipping-method-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateShippingMethod) ||\r\n        userPermissions.includes(Permission.UpdateSettings),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, shippingMethodIds, channelIds) =>\r\n        channelIds.map(channelId =>\r\n            dataService\r\n                .mutate(AssignShippingMethodsToChannelDocument, {\r\n                    input: {\r\n                        channelId,\r\n                        shippingMethodIds,\r\n                    },\r\n                })\r\n                .pipe(map(res => res.assignShippingMethodsToChannel)),\r\n        ),\r\n});\r\n\r\nexport const removeShippingMethodsFromChannelBulkAction = createBulkRemoveFromChannelAction<\r\n    ItemOf<GetShippingMethodListQuery, 'shippingMethods'>\r\n>({\r\n    location: 'shipping-method-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteShippingMethod) ||\r\n        userPermissions.includes(Permission.DeleteSettings),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, shippingMethodIds, channelId) =>\r\n        dataService\r\n            .mutate(RemoveShippingMethodsFromChannelDocument, {\r\n                input: {\r\n                    channelId,\r\n                    shippingMethodIds,\r\n                },\r\n            })\r\n            .pipe(map(res => res.removeShippingMethodsFromChannel)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"contentLanguage$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            />\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"shipping-method-list\" />\r\n            <a\r\n                class=\"btn btn-primary\"\r\n                *vdrIfPermissions=\"['CreateSettings', 'CreateShippingMethod']\"\r\n                [routerLink]=\"['./', 'create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'settings.create-new-shipping-method' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"shipping-method-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"shipping-method-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-shippingMethod=\"item\">\r\n            {{ shippingMethod.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\" id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-shippingMethod=\"item\">\r\n            {{ shippingMethod.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\" id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-shippingMethod=\"item\">\r\n            {{ shippingMethod.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\" [sort]=\"sorts.get('name')\">\r\n        <ng-template let-shippingMethod=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', shippingMethod.id]\"\r\n                ><span>{{ shippingMethod.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.code' | translate\" id=\"code\" [sort]=\"sorts.get('code')\">\r\n        <ng-template let-shippingMethod=\"item\">\r\n            {{ shippingMethod.code }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.description' | translate\" id=\"description\"\r\n        [sort]=\"sorts.get('description')\"\r\n        [hiddenByDefault]=\"true\"\r\n    >\r\n        <ng-template let-shippingMethod=\"item\">\r\n            {{ shippingMethod.description }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'settings.fulfillment-handler' | translate\" id=\"fulfillment-handler\" [sort]=\"sorts.get('fulfillmentHandlerCode')\">\r\n        <ng-template let-shippingMethod=\"item\">\r\n            {{ shippingMethod.fulfillmentHandlerCode }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column\r\n        *ngFor=\"let customField of customFields\"\r\n        [customField]=\"customField\"\r\n        [sorts]=\"sorts\"\r\n    />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { GetShippingMethodListDocument, TypedBaseListComponent } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\n\nexport const GET_SHIPPING_METHOD_LIST = gql`\n    query GetShippingMethodList($options: ShippingMethodListOptions) {\n        shippingMethods(options: $options) {\n            items {\n                ...ShippingMethodListItem\n            }\n            totalItems\n        }\n    }\n    fragment ShippingMethodListItem on ShippingMethod {\n        id\n        createdAt\n        updatedAt\n        code\n        name\n        description\n        fulfillmentHandlerCode\n    }\n`;\n\n@Component({\n    selector: 'vdr-shipping-method-list',\n    templateUrl: './shipping-method-list.component.html',\n    styleUrls: ['./shipping-method-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ShippingMethodListComponent\n    extends TypedBaseListComponent<typeof GetShippingMethodListDocument, 'shippingMethods'>\n    implements OnInit\n{\n    dataTableListId = 'shipping-method-list';\n    readonly customFields = this.getCustomFieldConfig('ShippingMethod');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: _('common.name'),\n            filterField: 'name',\n        })\n        .addFilter({\n            name: 'code',\n            type: { kind: 'text' },\n            label: _('common.code'),\n            filterField: 'code',\n        })\n        .addFilter({\n            name: 'description',\n            type: { kind: 'text' },\n            label: _('common.description'),\n            filterField: 'description',\n        })\n        .addFilter({\n            name: 'fulfillmentHandler',\n            type: { kind: 'text' },\n            label: _('settings.fulfillment-handler'),\n            filterField: 'fulfillmentHandlerCode',\n        })\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('createdAt', 'DESC')\n        .addSort({ name: 'createdAt' })\n        .addSort({ name: 'updatedAt' })\n        .addSort({ name: 'name' })\n        .addSort({ name: 'code' })\n        .addSort({ name: 'description' })\n        .addSort({ name: 'fulfillmentHandlerCode' })\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        super.configure({\n            document: GetShippingMethodListDocument,\n            getItems: data => data.shippingMethods,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n}\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left></vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"stock-location-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"detailForm.invalid || detailForm.pristine\"\r\n                    *vdrIfPermissions=\"'UpdateStockLocation'\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"stock-location-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!('UpdateStockLocation' | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field\r\n                        class=\"form-grid-span\"\r\n                        [label]=\"'common.description' | translate\"\r\n                        for=\"slug\"\r\n                        [errors]=\"{ pattern: 'catalog.slug-pattern-error' | translate }\"\r\n                    >\r\n                        <vdr-rich-text-editor\r\n                            formControlName=\"description\"\r\n                            [readonly]=\"!('UpdateStockLocation' | hasPermission)\"\r\n                        ></vdr-rich-text-editor>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"StockLocation\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"stock-location-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CreateStockLocationDocument,\r\n    CreateStockLocationInput,\r\n    DataService,\r\n    getCustomFieldsDefaults,\r\n    GetStockLocationDetailDocument,\r\n    NotificationService,\r\n    StockLocationDetailFragment,\r\n    TypedBaseDetailComponent,\r\n    UpdateStockLocationDocument,\r\n    UpdateStockLocationInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nconst STOCK_LOCATION_DETAIL_FRAGMENT = gql`\r\n    fragment StockLocationDetail on StockLocation {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n        description\r\n    }\r\n`;\r\n\r\nexport const GET_STOCK_LOCATION_DETAIL = gql`\r\n    query GetStockLocationDetail($id: ID!) {\r\n        stockLocation(id: $id) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\r\n\r\nexport const CREATE_STOCK_LOCATION = gql`\r\n    mutation CreateStockLocation($input: CreateStockLocationInput!) {\r\n        createStockLocation(input: $input) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\r\n\r\nexport const UPDATE_STOCK_LOCATION = gql`\r\n    mutation UpdateStockLocation($input: UpdateStockLocationInput!) {\r\n        updateStockLocation(input: $input) {\r\n            ...StockLocationDetail\r\n        }\r\n    }\r\n    ${STOCK_LOCATION_DETAIL_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-stock-location-detail',\r\n    templateUrl: './stock-location-detail.component.html',\r\n    styleUrls: ['./stock-location-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class StockLocationDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetStockLocationDetailDocument, 'stockLocation'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('StockLocation');\r\n    detailForm = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        description: [''],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const { name, description, customFields } = this.detailForm.value;\r\n        if (!name) {\r\n            return;\r\n        }\r\n        const input = {\r\n            name,\r\n            description,\r\n            customFields,\r\n        } satisfies CreateStockLocationInput;\r\n        this.dataService.mutate(CreateStockLocationDocument, { input }).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'StockLocation',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createStockLocation.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'StockLocation',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(taxRate => {\r\n                    const input = {\r\n                        id: taxRate.id,\r\n                        name: formValue.name,\r\n                        description: formValue.description,\r\n                        customFields: formValue.customFields,\r\n                    } satisfies UpdateStockLocationInput;\r\n                    return this.dataService.mutate(UpdateStockLocationDocument, { input });\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'StockLocation',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'StockLocation',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: StockLocationDetailFragment): void {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n            description: entity.description,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n}\r\n","import {\r\n    AssignStockLocationsToChannelDocument,\r\n    createBulkAssignToChannelAction,\r\n    createBulkDeleteAction,\r\n    createBulkRemoveFromChannelAction,\r\n    DeleteStockLocationsDocument,\r\n    DeletionResult,\r\n    GetStockLocationListQuery,\r\n    ItemOf,\r\n    Permission,\r\n    RemoveStockLocationsFromChannelDocument,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { map } from 'rxjs/operators';\r\n\r\nconst DELETE_STOCK_LOCATIONS = gql`\r\n    mutation DeleteStockLocations($input: [DeleteStockLocationInput!]!) {\r\n        deleteStockLocations(input: $input) {\r\n            result\r\n            message\r\n        }\r\n    }\r\n`;\r\n\r\nconst ASSIGN_STOCK_LOCATIONS_TO_CHANNEL = gql`\r\n    mutation AssignStockLocationsToChannel($input: AssignStockLocationsToChannelInput!) {\r\n        assignStockLocationsToChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nconst REMOVE_STOCK_LOCATIONS_FROM_CHANNEL = gql`\r\n    mutation RemoveStockLocationsFromChannel($input: RemoveStockLocationsFromChannelInput!) {\r\n        removeStockLocationsFromChannel(input: $input) {\r\n            id\r\n            name\r\n        }\r\n    }\r\n`;\r\n\r\nexport const deleteStockLocationsBulkAction = createBulkDeleteAction<\r\n    ItemOf<GetStockLocationListQuery, 'stockLocations'>\r\n>({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteStockLocation) ||\r\n        userPermissions.includes(Permission.DeleteCatalog),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) =>\r\n        dataService\r\n            .mutate(DeleteStockLocationsDocument, {\r\n                input: ids.map(id => ({ id })),\r\n            })\r\n            .pipe(map(res => res.deleteStockLocations)),\r\n    shouldRetryItem: response => response.result === DeletionResult.NOT_DELETED,\r\n});\r\n\r\nexport const assignStockLocationsToChannelBulkAction = createBulkAssignToChannelAction<\r\n    ItemOf<GetStockLocationListQuery, 'stockLocations'>\r\n>({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.UpdateCatalog) ||\r\n        userPermissions.includes(Permission.UpdateStockLocation),\r\n    getItemName: item => item.name,\r\n    bulkAssignToChannel: (dataService, stockLocationIds, channelIds) =>\r\n        channelIds.map(channelId =>\r\n            dataService\r\n                .mutate(AssignStockLocationsToChannelDocument, {\r\n                    input: {\r\n                        channelId,\r\n                        stockLocationIds,\r\n                    },\r\n                })\r\n                .pipe(map(res => res.assignStockLocationsToChannel)),\r\n        ),\r\n});\r\n\r\nexport const removeStockLocationsFromChannelBulkAction = createBulkRemoveFromChannelAction<\r\n    ItemOf<GetStockLocationListQuery, 'stockLocations'>\r\n>({\r\n    location: 'stock-location-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteCatalog) ||\r\n        userPermissions.includes(Permission.DeleteStockLocation),\r\n    getItemName: item => item.name,\r\n    bulkRemoveFromChannel: (dataService, stockLocationIds, channelId) =>\r\n        dataService\r\n            .mutate(RemoveStockLocationsFromChannelDocument, {\r\n                input: {\r\n                    channelId,\r\n                    stockLocationIds,\r\n                },\r\n            })\r\n            .pipe(map(res => res.removeStockLocationsFromChannel)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"stock-location-list\" />\r\n            <a\r\n                class=\"button primary\"\r\n                *vdrIfPermissions=\"['CreateStockLocation']\"\r\n                [routerLink]=\"['./', 'create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'catalog.create-new-stock-location' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"stock-location-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    class=\"mt-2\"\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"stock-location-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\" [sort]=\"sorts.get('id')\">\r\n        <ng-template let-stockLocation=\"item\">\r\n            {{ stockLocation.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\" id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-stockLocation=\"item\">\r\n            {{ stockLocation.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\" id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-stockLocation=\"item\">\r\n            {{ stockLocation.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\" [sort]=\"sorts.get('name')\">\r\n        <ng-template let-stockLocation=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', stockLocation.id]\"\r\n                ><span>{{ stockLocation.name }}</span\r\n                ><clr-icon shape=\"arrow right\"\r\n            /></a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.description' | translate\" id=\"description\" [sort]=\"sorts.get('description')\">\r\n        <ng-template let-stockLocation=\"item\">\r\n            <div class=\"description\" [innerHTML]=\"stockLocation.description\"></div>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column\r\n        *ngFor=\"let field of customFields\"\r\n        [customField]=\"field\"\r\n        [sorts]=\"sorts\" />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { GetStockLocationListDocument, TypedBaseListComponent } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\n\nexport const GET_STOCK_LOCATION_LIST = gql`\n    query GetStockLocationList($options: StockLocationListOptions) {\n        stockLocations(options: $options) {\n            items {\n                ...StockLocationListItem\n            }\n            totalItems\n        }\n    }\n    fragment StockLocationListItem on StockLocation {\n        id\n        createdAt\n        updatedAt\n        name\n        description\n    }\n`;\n\n@Component({\n    selector: 'vdr-stock-location-list',\n    templateUrl: './stock-location-list.component.html',\n    styleUrls: ['./stock-location-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class StockLocationListComponent\n    extends TypedBaseListComponent<typeof GetStockLocationListDocument, 'stockLocations'>\n    implements OnInit\n{\n    dataTableListId = 'stock-location-list';\n    readonly customFields = this.getCustomFieldConfig('StockLocation');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilters([\n            {\n                name: 'enabled',\n                type: { kind: 'text' },\n                label: _('common.enabled'),\n                filterField: 'name',\n            },\n            {\n                name: 'sku',\n                type: { kind: 'text' },\n                label: _('catalog.sku'),\n                filterField: 'description',\n            },\n        ])\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .addSorts([\n            { name: 'id' },\n            { name: 'createdAt' },\n            { name: 'updatedAt' },\n            { name: 'name' },\n            { name: 'description' },\n        ])\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        this.configure({\n            document: GetStockLocationListDocument,\n            getItems: data => data.stockLocations,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.sorts.valueChanges, this.filters.valueChanges],\n        });\n    }\n}\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"tax-category-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"!saveButtonEnabled()\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"!saveButtonEnabled()\"\r\n                    *vdrIfPermissions=\"updatePermission\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"tax-category-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'common.default-tax-category' | translate\" for=\"isDefault\">\r\n                        <clr-toggle-wrapper>\r\n                            <input\r\n                                type=\"checkbox\"\r\n                                clrToggle\r\n                                id=\"isDefault\"\r\n                                [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                                formControlName=\"isDefault\"\r\n                            />\r\n                        </clr-toggle-wrapper>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"TaxCategory\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"tax-category-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CreateTaxCategoryInput,\r\n    DataService,\r\n    getCustomFieldsDefaults,\r\n    GetTaxCategoryDetailDocument,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    TAX_CATEGORY_FRAGMENT,\r\n    TaxCategoryFragment,\r\n    TypedBaseDetailComponent,\r\n    UpdateTaxCategoryInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport const GET_TAX_CATEGORY_DETAIL = gql`\r\n    query GetTaxCategoryDetail($id: ID!) {\r\n        taxCategory(id: $id) {\r\n            ...TaxCategory\r\n        }\r\n    }\r\n    ${TAX_CATEGORY_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-tax-detail',\r\n    templateUrl: './tax-category-detail.component.html',\r\n    styleUrls: ['./tax-category-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TaxCategoryDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetTaxCategoryDetailDocument, 'taxCategory'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('TaxCategory');\r\n    detailForm = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        isDefault: false,\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxCategory];\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    saveButtonEnabled(): boolean {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        const input = {\r\n            name: formValue.name,\r\n            isDefault: formValue.isDefault,\r\n            customFields: formValue.customFields,\r\n        } as CreateTaxCategoryInput;\r\n        this.dataService.settings.createTaxCategory(input).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'TaxCategory',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createTaxCategory.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'TaxCategory',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(taxCategory => {\r\n                    const input = {\r\n                        id: taxCategory.id,\r\n                        name: formValue.name,\r\n                        isDefault: formValue.isDefault,\r\n                        customFields: formValue.customFields,\r\n                    } as UpdateTaxCategoryInput;\r\n                    return this.dataService.settings.updateTaxCategory(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'TaxCategory',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'TaxCategory',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: TaxCategoryFragment, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n            isDefault: entity.isDefault,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n}\r\n","import { createBulkDeleteAction, GetTaxCategoryListQuery, ItemOf, Permission } from '@vendure/admin-ui/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport const deleteTaxCategoriesBulkAction = createBulkDeleteAction<\r\n    ItemOf<GetTaxCategoryListQuery, 'taxCategories'>\r\n>({\r\n    location: 'tax-category-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteSettings) ||\r\n        userPermissions.includes(Permission.DeleteTaxCategory),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) =>\r\n        dataService.settings.deleteTaxCategories(ids).pipe(map(res => res.deleteTaxCategories)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"tax-category-list\" />\r\n            <a\r\n                class=\"btn btn-primary\"\r\n                *vdrIfPermissions=\"['CreateSettings', 'CreateTaxCategory']\"\r\n                [routerLink]=\"['./', 'create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'settings.create-new-tax-category' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"tax-category-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"tax-category-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-taxCategory=\"item\">\r\n            {{ taxCategory.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\" id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-taxCategory=\"item\">\r\n            {{ taxCategory.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\" id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-taxCategory=\"item\">\r\n            {{ taxCategory.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\" [sort]=\"sorts.get('name')\">\r\n        <ng-template let-taxCategory=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', taxCategory.id]\"\r\n                ><span>{{ taxCategory.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.default-tax-category' | translate\" id=\"default-tax-category\">\r\n        <ng-template let-taxCategory=\"item\">\r\n            <vdr-chip *ngIf=\"taxCategory.isDefault\">{{ 'common.default-tax-category' | translate }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column *ngFor=\"let customField of customFields\" [customField]=\"customField\" [sorts]=\"sorts\" />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    GetTaxCategoryListDocument,\n    TAX_CATEGORY_FRAGMENT,\n    TypedBaseListComponent,\n} from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\n\nexport const GET_TAX_CATEGORY_LIST = gql`\n    query GetTaxCategoryList($options: TaxCategoryListOptions) {\n        taxCategories(options: $options) {\n            items {\n                ...TaxCategory\n            }\n            totalItems\n        }\n    }\n    ${TAX_CATEGORY_FRAGMENT}\n`;\n\n@Component({\n    selector: 'vdr-tax-list',\n    templateUrl: './tax-category-list.component.html',\n    styleUrls: ['./tax-category-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaxCategoryListComponent extends TypedBaseListComponent<\n    typeof GetTaxCategoryListDocument,\n    'taxCategories'\n> {\n    dataTableListId = 'tax-category-list';\n    readonly customFields = this.serverConfigService.getCustomFieldsFor('TaxCategory');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: _('common.name'),\n            filterField: 'name',\n        })\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('createdAt', 'DESC')\n        .addSort({ name: 'createdAt' })\n        .addSort({ name: 'updatedAt' })\n        .addSort({ name: 'name' })\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        super.configure({\n            document: GetTaxCategoryListDocument,\n            getItems: data => data.taxCategories,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n}\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left></vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"tax-rate-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"!saveButtonEnabled()\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"!saveButtonEnabled()\"\r\n                    *vdrIfPermissions=\"updatePermission\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"tax-rate-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card>\r\n                <vdr-form-field [label]=\"'common.enabled' | translate\" for=\"enabled\">\r\n                    <clr-toggle-wrapper>\r\n                        <input\r\n                            type=\"checkbox\"\r\n                            clrToggle\r\n                            id=\"enabled\"\r\n                            formControlName=\"enabled\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </clr-toggle-wrapper>\r\n                </vdr-form-field>\r\n            </vdr-card>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'settings.rate' | translate\" for=\"value\">\r\n                        <vdr-affixed-input suffix=\"%\">\r\n                            <input\r\n                                id=\"value\"\r\n                                type=\"number\"\r\n                                step=\"0.1\"\r\n                                formControlName=\"value\"\r\n                                [readonly]=\"!(updatePermission | hasPermission)\"\r\n                            />\r\n                        </vdr-affixed-input>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'settings.tax-category' | translate\" for=\"taxCategoryId\">\r\n                        <select\r\n                            name=\"taxCategoryId\"\r\n                            formControlName=\"taxCategoryId\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                            <option\r\n                                *ngFor=\"let taxCategory of taxCategories$ | async\"\r\n                                [value]=\"taxCategory.id\"\r\n                            >\r\n                                {{ taxCategory.name }}\r\n                            </option>\r\n                        </select>\r\n                    </vdr-form-field>\r\n                    <vdr-form-field [label]=\"'settings.zone' | translate\" for=\"zoneId\">\r\n                        <vdr-zone-selector\r\n                            name=\"zoneId\"\r\n                            formControlName=\"zoneId\"\r\n                            [vdrDisabled]=\"!(updatePermission | hasPermission)\"\r\n                        >\r\n                        </vdr-zone-selector>\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"TaxRate\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"tax-rate-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CreateTaxRateInput,\r\n    CustomerGroup,\r\n    DataService,\r\n    getCustomFieldsDefaults,\r\n    GetTaxRateDetailDocument,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    TAX_RATE_FRAGMENT,\r\n    TaxCategoryFragment,\r\n    TaxRateFragment,\r\n    TypedBaseDetailComponent,\r\n    UpdateTaxRateInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { Observable } from 'rxjs';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport const GET_TAX_RATE_DETAIL = gql`\r\n    query GetTaxRateDetail($id: ID!) {\r\n        taxRate(id: $id) {\r\n            ...TaxRate\r\n        }\r\n    }\r\n    ${TAX_RATE_FRAGMENT}\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-tax-rate-detail',\r\n    templateUrl: './tax-rate-detail.component.html',\r\n    styleUrls: ['./tax-rate-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TaxRateDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetTaxRateDetailDocument, 'taxRate'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('TaxRate');\r\n    detailForm = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        enabled: [true],\r\n        value: [0, Validators.required],\r\n        taxCategoryId: ['', Validators.required],\r\n        zoneId: ['', Validators.required],\r\n        customerGroupId: [''],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n    taxCategories$: Observable<TaxCategoryFragment[]>;\r\n    groups$: Observable<CustomerGroup[]>;\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateTaxRate];\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n        this.taxCategories$ = this.dataService.settings\r\n            .getTaxCategories({ take: 100 })\r\n            .mapSingle(data => data.taxCategories.items);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    saveButtonEnabled(): boolean {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const { name, enabled, value, taxCategoryId, zoneId, customerGroupId, customFields } =\r\n            this.detailForm.value;\r\n        if (!name || enabled == null || value == null || !taxCategoryId || !zoneId) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        const input = {\r\n            name,\r\n            enabled,\r\n            value,\r\n            categoryId: taxCategoryId,\r\n            zoneId,\r\n            customerGroupId: formValue.customerGroupId,\r\n            customFields: formValue.customFields,\r\n        } satisfies CreateTaxRateInput;\r\n        this.dataService.settings.createTaxRate(input).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'TaxRate',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createTaxRate.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'TaxRate',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(taxRate => {\r\n                    const input = {\r\n                        id: taxRate.id,\r\n                        name: formValue.name,\r\n                        enabled: formValue.enabled,\r\n                        value: formValue.value,\r\n                        categoryId: formValue.taxCategoryId,\r\n                        zoneId: formValue.zoneId,\r\n                        customerGroupId: formValue.customerGroupId,\r\n                        customFields: formValue.customFields,\r\n                    } satisfies UpdateTaxRateInput;\r\n                    return this.dataService.settings.updateTaxRate(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'TaxRate',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'TaxRate',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(entity: TaxRateFragment, languageCode: LanguageCode): void {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n            enabled: entity.enabled,\r\n            value: entity.value,\r\n            taxCategoryId: entity.category ? entity.category.id : '',\r\n            zoneId: entity.zone ? entity.zone.id : '',\r\n            customerGroupId: entity.customerGroup ? entity.customerGroup.id : '',\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n}\r\n","import { createBulkDeleteAction, GetTaxRateListQuery, ItemOf, Permission } from '@vendure/admin-ui/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport const deleteTaxRatesBulkAction = createBulkDeleteAction<ItemOf<GetTaxRateListQuery, 'taxRates'>>({\r\n    location: 'tax-rate-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteSettings) ||\r\n        userPermissions.includes(Permission.DeleteTaxRate),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) =>\r\n        dataService.settings.deleteTaxRates(ids).pipe(map(res => res.deleteTaxRates)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"tax-rate-list\" />\r\n            <a\r\n                class=\"btn btn-primary\"\r\n                *vdrIfPermissions=\"['CreateSettings', 'CreateTaxRate']\"\r\n                [routerLink]=\"['./', 'create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'settings.create-new-tax-rate' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"tax-rate-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-data-table-2\r\n    [id]=\"dataTableListId\"\r\n    [items]=\"items$ | async\"\r\n    [itemsPerPage]=\"itemsPerPage$ | async\"\r\n    [totalItems]=\"totalItems$ | async\"\r\n    [currentPage]=\"currentPage$ | async\"\r\n    [filters]=\"filters\"\r\n    (pageChange)=\"setPageNumber($event)\"\r\n    (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n    (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n>\r\n    <vdr-bulk-action-menu\r\n        locationId=\"tax-rate-list\"\r\n        [hostComponent]=\"this\"\r\n        [selectionManager]=\"selectionManager\"\r\n    />\r\n    <vdr-dt2-search\r\n        [searchTermControl]=\"searchTermControl\"\r\n        [searchTermPlaceholder]=\"'catalog.filter-by-name' | translate\"\r\n    />\r\n    <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-taxRate=\"item\">\r\n            {{ taxRate.id }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.created-at' | translate\" id=\"created-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('createdAt')\"\r\n    >\r\n        <ng-template let-taxRate=\"item\">\r\n            {{ taxRate.createdAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column\r\n        [heading]=\"'common.updated-at' | translate\" id=\"updated-at\"\r\n        [hiddenByDefault]=\"true\"\r\n        [sort]=\"sorts.get('updatedAt')\"\r\n    >\r\n        <ng-template let-taxRate=\"item\">\r\n            {{ taxRate.updatedAt | localeDate : 'short' }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.name' | translate\" id=\"name\" [optional]=\"false\" [sort]=\"sorts.get('name')\">\r\n        <ng-template let-taxRate=\"item\">\r\n            <a class=\"button-ghost\" [routerLink]=\"['./', taxRate.id]\"\r\n                ><span>{{ taxRate.name }}</span>\r\n                <clr-icon shape=\"arrow right\"></clr-icon>\r\n            </a>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'settings.tax-category' | translate\" id=\"tax-category\">\r\n        <ng-template let-taxRate=\"item\">\r\n            {{ taxRate.category.name }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'settings.zone' | translate\" id=\"zone\">\r\n        <ng-template let-taxRate=\"item\">\r\n            {{ taxRate.zone.name }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'customer.customer-group' | translate\" id=\"customer-group\" [hiddenByDefault]=\"true\">\r\n        <ng-template let-taxRate=\"item\">\r\n            {{ taxRate.customerGroup?.name }}\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'settings.tax-rate' | translate\" id=\"tax-rate\" [sort]=\"sorts.get('value')\">\r\n        <ng-template let-taxRate=\"item\"> {{ taxRate.value }}% </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-column [heading]=\"'common.enabled' | translate\" id=\"enabled\">\r\n        <ng-template let-taxRate=\"item\">\r\n            <vdr-chip *ngIf=\"taxRate.enabled\" colorType=\"success\">{{\r\n                'common.enabled' | translate\r\n            }}</vdr-chip>\r\n            <vdr-chip *ngIf=\"!taxRate.enabled\" colorType=\"warning\">{{\r\n                'common.disabled' | translate\r\n            }}</vdr-chip>\r\n        </ng-template>\r\n    </vdr-dt2-column>\r\n    <vdr-dt2-custom-field-column *ngFor=\"let customField of customFields\" [customField]=\"customField\" [sorts]=\"sorts\" />\r\n</vdr-data-table-2>\r\n","import { ChangeDetectionStrategy, Component } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport { GetTaxRateListDocument, TAX_RATE_FRAGMENT, TypedBaseListComponent } from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\n\nexport const GET_TAX_RATE_LIST = gql`\n    query GetTaxRateList($options: TaxRateListOptions) {\n        taxRates(options: $options) {\n            items {\n                ...TaxRate\n            }\n            totalItems\n        }\n    }\n    ${TAX_RATE_FRAGMENT}\n`;\n\n@Component({\n    selector: 'vdr-tax-rate-list',\n    templateUrl: './tax-rate-list.component.html',\n    styleUrls: ['./tax-rate-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class TaxRateListComponent extends TypedBaseListComponent<typeof GetTaxRateListDocument, 'taxRates'> {\n    dataTableListId = 'tax-rate-list';\n    readonly customFields = this.getCustomFieldConfig('TaxRate');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: _('common.name'),\n            filterField: 'name',\n        })\n        .addFilter({\n            name: 'enabled',\n            type: { kind: 'boolean' },\n            label: _('common.enabled'),\n            filterField: 'enabled',\n        })\n        .addFilter({\n            name: 'value',\n            type: { kind: 'number' },\n            label: _('common.value'),\n            filterField: 'value',\n        })\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('createdAt', 'DESC')\n        .addSort({ name: 'createdAt' })\n        .addSort({ name: 'updatedAt' })\n        .addSort({ name: 'name' })\n        .addSort({ name: 'value' })\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor() {\n        super();\n        super.configure({\n            document: GetTaxRateListDocument,\n            getItems: data => data.taxRates,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n}\n","import { ChangeDetectionStrategy, Component, OnInit } from '@angular/core';\r\nimport {\r\n    DataService,\r\n    GetActiveChannelQuery,\r\n    ShippingMethodQuote,\r\n    TestEligibleShippingMethodsInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { Observable, Subject } from 'rxjs';\r\nimport { switchMap } from 'rxjs/operators';\r\nimport { TestAddress } from '../test-address-form/test-address-form.component';\r\nimport { TestOrderLine } from '../test-order-builder/test-order-builder.component';\r\n\r\n@Component({\r\n    selector: 'vdr-test-shipping-methods',\r\n    templateUrl: './test-shipping-methods.component.html',\r\n    styleUrls: ['./test-shipping-methods.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class TestShippingMethodsComponent implements OnInit {\r\n    activeChannel$: Observable<GetActiveChannelQuery['activeChannel']>;\r\n    testAddress: TestAddress;\r\n    testOrderLines: TestOrderLine[];\r\n    testDataUpdated = false;\r\n    testResult$: Observable<ShippingMethodQuote[] | undefined>;\r\n    private fetchTestResult$ = new Subject<[TestAddress, TestOrderLine[]]>();\r\n\r\n    constructor(private dataService: DataService) {}\r\n\r\n    ngOnInit() {\r\n        this.activeChannel$ = this.dataService.settings\r\n            .getActiveChannel()\r\n            .mapStream(data => data.activeChannel);\r\n        this.testResult$ = this.fetchTestResult$.pipe(\r\n            switchMap(([address, lines]) => {\r\n                const input: TestEligibleShippingMethodsInput = {\r\n                    shippingAddress: { ...address, streetLine1: 'test' },\r\n                    lines: lines.map(l => ({ productVariantId: l.id, quantity: l.quantity })),\r\n                };\r\n                return this.dataService.shippingMethod\r\n                    .testEligibleShippingMethods(input)\r\n                    .mapSingle(result => result.testEligibleShippingMethods);\r\n            }),\r\n        );\r\n    }\r\n\r\n    setTestOrderLines(event: TestOrderLine[]) {\r\n        this.testOrderLines = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n\r\n    setTestAddress(event: TestAddress) {\r\n        this.testAddress = event;\r\n        this.testDataUpdated = true;\r\n    }\r\n\r\n    allTestDataPresent(): boolean {\r\n        return !!(this.testAddress && this.testOrderLines && this.testOrderLines.length);\r\n    }\r\n\r\n    runTest() {\r\n        this.fetchTestResult$.next([this.testAddress, this.testOrderLines]);\r\n        this.testDataUpdated = false;\r\n    }\r\n}\r\n","<vdr-page-block>\r\n    <div class=\"test-wrapper\">\r\n        <div class=\"\">\r\n            <vdr-test-order-builder (orderLinesChange)=\"setTestOrderLines($event)\"></vdr-test-order-builder>\r\n        </div>\r\n        <div class=\"\">\r\n            <vdr-test-address-form (addressChange)=\"setTestAddress($event)\"></vdr-test-address-form>\r\n            <vdr-shipping-eligibility-test-result\r\n                class=\"mt-1\"\r\n                [currencyCode]=\"(activeChannel$ | async)?.currencyCode\"\r\n                [okToRun]=\"allTestDataPresent()\"\r\n                [testDataUpdated]=\"testDataUpdated\"\r\n                [testResult]=\"testResult$ | async\"\r\n                (runTest)=\"runTest()\"\r\n            ></vdr-shipping-eligibility-test-result>\r\n        </div>\r\n    </div>\r\n</vdr-page-block>\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left> </vdr-ab-left>\r\n\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"zone-detail\" />\r\n            <button\r\n                class=\"btn btn-primary\"\r\n                *ngIf=\"isNew$ | async; else updateButton\"\r\n                (click)=\"create()\"\r\n                [disabled]=\"!saveButtonEnabled()\"\r\n            >\r\n                {{ 'common.create' | translate }}\r\n            </button>\r\n            <ng-template #updateButton>\r\n                <button\r\n                    class=\"btn btn-primary\"\r\n                    (click)=\"save()\"\r\n                    [disabled]=\"!saveButtonEnabled()\"\r\n                    *vdrIfPermissions=\"updatePermission\"\r\n                >\r\n                    {{ 'common.update' | translate }}\r\n                </button>\r\n            </ng-template>\r\n            <vdr-action-bar-dropdown-menu locationId=\"zone-detail\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<form class=\"form\" [formGroup]=\"detailForm\">\r\n    <vdr-page-detail-layout>\r\n        <vdr-page-detail-sidebar>\r\n            <vdr-card *ngIf=\"entity$ | async as entity\">\r\n                <vdr-page-entity-info [entity]=\"entity\" />\r\n            </vdr-card>\r\n        </vdr-page-detail-sidebar>\r\n        <vdr-page-block>\r\n            <vdr-card>\r\n                <div class=\"form-grid\">\r\n                    <vdr-form-field [label]=\"'common.name' | translate\" for=\"name\">\r\n                        <input\r\n                            id=\"name\"\r\n                            type=\"text\"\r\n                            formControlName=\"name\"\r\n                            [readonly]=\"!(updatePermission | hasPermission)\"\r\n                        />\r\n                    </vdr-form-field>\r\n                </div>\r\n            </vdr-card>\r\n            <vdr-card\r\n                formGroupName=\"customFields\"\r\n                *ngIf=\"customFields.length\"\r\n                [title]=\"'common.custom-fields' | translate\"\r\n            >\r\n                <vdr-tabbed-custom-fields\r\n                    entityName=\"Zone\"\r\n                    [customFields]=\"customFields\"\r\n                    [customFieldsFormGroup]=\"detailForm.get('customFields')\"\r\n                ></vdr-tabbed-custom-fields>\r\n            </vdr-card>\r\n            <vdr-custom-detail-component-host\r\n                locationId=\"zone-detail\"\r\n                [entity$]=\"entity$\"\r\n                [detailForm]=\"detailForm\"\r\n            ></vdr-custom-detail-component-host>\r\n        </vdr-page-block>\r\n    </vdr-page-detail-layout>\r\n</form>\r\n","import { ChangeDetectionStrategy, ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\r\nimport { FormBuilder, Validators } from '@angular/forms';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    CreateZoneInput,\r\n    DataService,\r\n    getCustomFieldsDefaults,\r\n    GetZoneDetailDocument,\r\n    GetZoneDetailQuery,\r\n    LanguageCode,\r\n    NotificationService,\r\n    Permission,\r\n    TypedBaseDetailComponent,\r\n    UpdateTaxCategoryInput,\r\n} from '@vendure/admin-ui/core';\r\nimport { gql } from 'apollo-angular';\r\nimport { mergeMap, take } from 'rxjs/operators';\r\n\r\nexport const GET_ZONE_DETAIL = gql`\r\n    query GetZoneDetail($id: ID!) {\r\n        zone(id: $id) {\r\n            ...ZoneDetail\r\n        }\r\n    }\r\n    fragment ZoneDetail on Zone {\r\n        id\r\n        createdAt\r\n        updatedAt\r\n        name\r\n    }\r\n`;\r\n\r\n@Component({\r\n    selector: 'vdr-zone-detail',\r\n    templateUrl: './zone-detail.component.html',\r\n    styleUrls: ['./zone-detail.component.scss'],\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n})\r\nexport class ZoneDetailComponent\r\n    extends TypedBaseDetailComponent<typeof GetZoneDetailDocument, 'zone'>\r\n    implements OnInit, OnDestroy\r\n{\r\n    customFields = this.getCustomFieldConfig('Zone');\r\n    detailForm = this.formBuilder.group({\r\n        name: ['', Validators.required],\r\n        customFields: this.formBuilder.group(getCustomFieldsDefaults(this.customFields)),\r\n    });\r\n    readonly updatePermission = [Permission.UpdateSettings, Permission.UpdateZone];\r\n\r\n    constructor(\r\n        private changeDetector: ChangeDetectorRef,\r\n        protected dataService: DataService,\r\n        private formBuilder: FormBuilder,\r\n        private notificationService: NotificationService,\r\n    ) {\r\n        super();\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.init();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroy();\r\n    }\r\n\r\n    saveButtonEnabled(): boolean {\r\n        return this.detailForm.dirty && this.detailForm.valid;\r\n    }\r\n\r\n    create() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const { name, customFields } = this.detailForm.value;\r\n        if (!name) {\r\n            return;\r\n        }\r\n        const input = {\r\n            name,\r\n            customFields,\r\n        } satisfies CreateZoneInput;\r\n        this.dataService.settings.createZone(input).subscribe(\r\n            data => {\r\n                this.notificationService.success(_('common.notify-create-success'), {\r\n                    entity: 'Zone',\r\n                });\r\n                this.detailForm.markAsPristine();\r\n                this.changeDetector.markForCheck();\r\n                this.router.navigate(['../', data.createZone.id], { relativeTo: this.route });\r\n            },\r\n            err => {\r\n                this.notificationService.error(_('common.notify-create-error'), {\r\n                    entity: 'Zone',\r\n                });\r\n            },\r\n        );\r\n    }\r\n\r\n    save() {\r\n        if (!this.detailForm.dirty) {\r\n            return;\r\n        }\r\n        const formValue = this.detailForm.value;\r\n        this.entity$\r\n            .pipe(\r\n                take(1),\r\n                mergeMap(zone => {\r\n                    const input = {\r\n                        id: zone.id,\r\n                        name: formValue.name,\r\n                        customFields: formValue.customFields,\r\n                    } satisfies UpdateTaxCategoryInput;\r\n                    return this.dataService.settings.updateZone(input);\r\n                }),\r\n            )\r\n            .subscribe(\r\n                data => {\r\n                    this.notificationService.success(_('common.notify-update-success'), {\r\n                        entity: 'Zone',\r\n                    });\r\n                    this.detailForm.markAsPristine();\r\n                    this.changeDetector.markForCheck();\r\n                },\r\n                err => {\r\n                    this.notificationService.error(_('common.notify-update-error'), {\r\n                        entity: 'Zone',\r\n                    });\r\n                },\r\n            );\r\n    }\r\n\r\n    /**\r\n     * Update the form values when the entity changes.\r\n     */\r\n    protected setFormValues(\r\n        entity: NonNullable<GetZoneDetailQuery['zone']>,\r\n        languageCode: LanguageCode,\r\n    ): void {\r\n        this.detailForm.patchValue({\r\n            name: entity.name,\r\n        });\r\n        if (this.customFields.length) {\r\n            this.setCustomFieldFormValues(this.customFields, this.detailForm.get('customFields'), entity);\r\n        }\r\n    }\r\n}\r\n","import { createBulkDeleteAction, GetZoneListQuery, ItemOf, Permission } from '@vendure/admin-ui/core';\r\nimport { map } from 'rxjs/operators';\r\n\r\nexport const deleteZonesBulkAction = createBulkDeleteAction<ItemOf<GetZoneListQuery, 'zones'>>({\r\n    location: 'zone-list',\r\n    requiresPermission: userPermissions =>\r\n        userPermissions.includes(Permission.DeleteSettings) ||\r\n        userPermissions.includes(Permission.DeleteZone),\r\n    getItemName: item => item.name,\r\n    bulkDelete: (dataService, ids) => dataService.settings.deleteZones(ids).pipe(map(res => res.deleteZones)),\r\n});\r\n","<vdr-page-block>\r\n    <vdr-action-bar>\r\n        <vdr-ab-left>\r\n            <vdr-language-selector\r\n                [availableLanguageCodes]=\"availableLanguages$ | async\"\r\n                [currentLanguageCode]=\"contentLanguage$ | async\"\r\n                (languageCodeChange)=\"setLanguage($event)\"\r\n            />\r\n        </vdr-ab-left>\r\n        <vdr-ab-right>\r\n            <vdr-action-bar-items locationId=\"zone-list\" />\r\n            <a\r\n                class=\"btn btn-primary\"\r\n                *vdrIfPermissions=\"['CreateSettings', 'CreateZone']\"\r\n                [routerLink]=\"['./', 'create']\"\r\n            >\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                {{ 'settings.create-new-zone' | translate }}\r\n            </a>\r\n            <vdr-action-bar-dropdown-menu locationId=\"zone-list\" />\r\n        </vdr-ab-right>\r\n    </vdr-action-bar>\r\n</vdr-page-block>\r\n<vdr-split-view [rightPanelOpen]=\"activeZone$ | async\" (closeClicked)=\"closeMembers()\">\r\n    <ng-template vdrSplitViewLeft>\r\n        <vdr-data-table-2\r\n            [id]=\"dataTableListId\"\r\n            [items]=\"items$ | async\"\r\n            [itemsPerPage]=\"itemsPerPage$ | async\"\r\n            [totalItems]=\"totalItems$ | async\"\r\n            [currentPage]=\"currentPage$ | async\"\r\n            [filters]=\"filters\"\r\n            [activeIndex]=\"activeIndex$ | async\"\r\n            (pageChange)=\"setPageNumber($event)\"\r\n            (itemsPerPageChange)=\"setItemsPerPage($event)\"\r\n            (visibleColumnsChange)=\"setVisibleColumns($event)\"\r\n        >\r\n            <vdr-bulk-action-menu\r\n                locationId=\"zone-list\"\r\n                [hostComponent]=\"this\"\r\n                [selectionManager]=\"selectionManager\"\r\n            />\r\n            <vdr-dt2-search\r\n                [searchTermControl]=\"searchTermControl\"\r\n                [searchTermPlaceholder]=\"'common.search-by-name' | translate\"\r\n            />\r\n            <vdr-dt2-column [heading]=\"'common.id' | translate\" id=\"id\" [hiddenByDefault]=\"true\">\r\n                <ng-template let-customerGroup=\"item\">\r\n                    {{ customerGroup.id }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column\r\n                [heading]=\"'common.created-at' | translate\" id=\"created-at\"\r\n                [hiddenByDefault]=\"true\"\r\n                [sort]=\"sorts.get('createdAt')\"\r\n            >\r\n                <ng-template let-customerGroup=\"item\">\r\n                    {{ customerGroup.createdAt | localeDate : 'short' }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column\r\n                [heading]=\"'common.updated-at' | translate\" id=\"updated-at\"\r\n                [hiddenByDefault]=\"true\"\r\n                [sort]=\"sorts.get('updatedAt')\"\r\n            >\r\n                <ng-template let-customerGroup=\"item\">\r\n                    {{ customerGroup.updatedAt | localeDate : 'short' }}\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column\r\n                [heading]=\"'common.name' | translate\" id=\"name\"\r\n                [optional]=\"false\"\r\n                [sort]=\"sorts.get('name')\"\r\n            >\r\n                <ng-template let-customerGroup=\"item\">\r\n                    <a class=\"button-ghost\" [routerLink]=\"['./', customerGroup.id]\"\r\n                        ><span>{{ customerGroup.name }}</span>\r\n                        <clr-icon shape=\"arrow right\"></clr-icon>\r\n                    </a>\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-column [heading]=\"'common.view-contents' | translate\" id=\"view-contents\" [optional]=\"false\">\r\n                <ng-template let-customerGroup=\"item\">\r\n                    <a\r\n                        class=\"button-small bg-weight-150\"\r\n                        [routerLink]=\"['./', { contents: customerGroup.id }]\"\r\n                        queryParamsHandling=\"preserve\"\r\n                    >\r\n                        <span>{{ 'settings.view-zone-members' | translate }}</span>\r\n                        <clr-icon shape=\"file-group\"></clr-icon>\r\n                    </a>\r\n                </ng-template>\r\n            </vdr-dt2-column>\r\n            <vdr-dt2-custom-field-column\r\n                *ngFor=\"let customField of customFields\"\r\n                [customField]=\"customField\"\r\n                [sort]=\"sorts\"\r\n            />\r\n        </vdr-data-table-2>\r\n    </ng-template>\r\n    <ng-template vdrSplitViewRight [splitViewTitle]=\"(activeZone$ | async)?.name\">\r\n        <ng-container *ngIf=\"activeZone$ | async as activeZone\">\r\n            <button class=\"button-ghost ml-4\" (click)=\"addToZone(activeZone)\">\r\n                <clr-icon shape=\"plus\"></clr-icon>\r\n                <span>{{\r\n                    'settings.add-countries-to-zone' | translate : { zoneName: activeZone.name }\r\n                }}</span>\r\n            </button>\r\n            <vdr-zone-member-list\r\n                *ngIf=\"activeZone$ | async as activeZone\"\r\n                locationId=\"zone-members-list\"\r\n                [selectedMemberIds]=\"selectedMemberIds\"\r\n                [activeZone]=\"activeZone\"\r\n                (selectionChange)=\"selectedMemberIds = $event\"\r\n            />\r\n        </ng-container>\r\n    </ng-template>\r\n</vdr-split-view>\r\n","import { ChangeDetectionStrategy, Component, OnInit, ViewChild } from '@angular/core';\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\nimport {\n    DataService,\n    GetZoneListDocument,\n    GetZoneListQuery,\n    ItemOf,\n    LanguageCode,\n    LogicalOperator,\n    ModalService,\n    NotificationService,\n    TypedBaseListComponent,\n} from '@vendure/admin-ui/core';\nimport { gql } from 'apollo-angular';\nimport { combineLatest, EMPTY, Observable } from 'rxjs';\nimport { distinctUntilChanged, map, mapTo, switchMap, tap } from 'rxjs/operators';\n\nimport { AddCountryToZoneDialogComponent } from '../add-country-to-zone-dialog/add-country-to-zone-dialog.component';\nimport { ZoneMemberListComponent } from '../zone-member-list/zone-member-list.component';\n\nexport const GET_ZONE_LIST = gql`\n    query GetZoneList($options: ZoneListOptions) {\n        zones(options: $options) {\n            items {\n                ...ZoneListItem\n            }\n            totalItems\n        }\n    }\n    fragment ZoneListItem on Zone {\n        id\n        createdAt\n        updatedAt\n        name\n    }\n`;\n\n@Component({\n    selector: 'vdr-zone-list',\n    templateUrl: './zone-list.component.html',\n    styleUrls: ['./zone-list.component.scss'],\n    changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class ZoneListComponent\n    extends TypedBaseListComponent<typeof GetZoneListDocument, 'zones'>\n    implements OnInit\n{\n    dataTableListId = 'zone-list';\n    activeZone$: Observable<ItemOf<GetZoneListQuery, 'zones'> | undefined>;\n    activeIndex$: Observable<number>;\n    selectedMemberIds: string[] = [];\n    @ViewChild(ZoneMemberListComponent) zoneMemberList: ZoneMemberListComponent;\n    readonly customFields = this.serverConfigService.getCustomFieldsFor('Zone');\n    readonly filters = this.createFilterCollection()\n        .addIdFilter()\n        .addDateFilters()\n        .addFilter({\n            name: 'name',\n            type: { kind: 'text' },\n            label: _('common.name'),\n            filterField: 'name',\n        })\n        .addCustomFieldFilters(this.customFields)\n        .connectToRoute(this.route);\n\n    readonly sorts = this.createSortCollection()\n        .defaultSort('createdAt', 'DESC')\n        .addSort({ name: 'createdAt' })\n        .addSort({ name: 'updatedAt' })\n        .addSort({ name: 'name' })\n        .addCustomFieldSorts(this.customFields)\n        .connectToRoute(this.route);\n\n    constructor(\n        protected dataService: DataService,\n        private notificationService: NotificationService,\n        private modalService: ModalService,\n    ) {\n        super();\n        super.configure({\n            document: GetZoneListDocument,\n            getItems: data => data.zones,\n            setVariables: (skip, take) => ({\n                options: {\n                    skip,\n                    take,\n                    filter: {\n                        name: {\n                            contains: this.searchTermControl.value,\n                        },\n                        ...this.filters.createFilterInput(),\n                    },\n                    filterOperator: this.searchTermControl.value ? LogicalOperator.OR : LogicalOperator.AND,\n                    sort: this.sorts.createSortInput(),\n                },\n            }),\n            refreshListOnChanges: [this.filters.valueChanges, this.sorts.valueChanges],\n        });\n    }\n\n    ngOnInit(): void {\n        super.ngOnInit();\n        const activeZoneId$ = this.route.paramMap.pipe(\n            map(pm => pm.get('contents')),\n            distinctUntilChanged(),\n            tap(() => (this.selectedMemberIds = [])),\n        );\n        this.activeZone$ = combineLatest(this.items$, activeZoneId$).pipe(\n            map(([zones, activeZoneId]) => {\n                if (activeZoneId) {\n                    return zones.find(z => z.id === activeZoneId);\n                }\n            }),\n        );\n        this.activeIndex$ = combineLatest(this.items$, activeZoneId$).pipe(\n            map(([zones, activeZoneId]) => {\n                if (activeZoneId) {\n                    return zones.findIndex(g => g.id === activeZoneId);\n                } else {\n                    return -1;\n                }\n            }),\n        );\n    }\n\n    setLanguage(code: LanguageCode) {\n        this.dataService.client.setContentLanguage(code).subscribe();\n    }\n\n    closeMembers() {\n        const params = { ...this.route.snapshot.params };\n        delete params.contents;\n        this.router.navigate(['./', params], { relativeTo: this.route, queryParamsHandling: 'preserve' });\n    }\n\n    addToZone(zone: ItemOf<GetZoneListQuery, 'zones'>) {\n        this.modalService\n            .fromComponent(AddCountryToZoneDialogComponent, {\n                locals: {\n                    zoneName: zone.name,\n                    zoneId: zone.id,\n                },\n                size: 'md',\n            })\n            .pipe(\n                switchMap(memberIds =>\n                    memberIds\n                        ? this.dataService.settings\n                              .addMembersToZone(zone.id, memberIds)\n                              .pipe(mapTo(memberIds))\n                        : EMPTY,\n                ),\n            )\n            .subscribe({\n                next: result => {\n                    this.notificationService.success(_(`settings.add-countries-to-zone-success`), {\n                        countryCount: result.length,\n                        zoneName: zone.name,\n                    });\n                    this.refreshMemberList();\n                },\n                error: err => {\n                    this.notificationService.error(err);\n                },\n            });\n    }\n\n    refreshMemberList() {\n        this.zoneMemberList?.refresh();\n    }\n}\n","import { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport { BulkAction, DataService, NotificationService, Permission } from '@vendure/admin-ui/core';\r\nimport { ZoneMember, ZoneMemberListComponent } from './zone-member-list.component';\r\n\r\nexport const removeZoneMembersBulkAction: BulkAction<ZoneMember, ZoneMemberListComponent> = {\r\n    location: 'zone-members-list',\r\n    label: _('settings.remove-from-zone'),\r\n    icon: 'trash',\r\n    iconClass: 'is-danger',\r\n    requiresPermission: Permission.UpdateCustomerGroup,\r\n    onClick: ({ injector, selection, hostComponent, clearSelection }) => {\r\n        const dataService = injector.get(DataService);\r\n        const notificationService = injector.get(NotificationService);\r\n\r\n        const zone = hostComponent.activeZone;\r\n        const memberIds = selection.map(s => s.id);\r\n\r\n        dataService.settings.removeMembersFromZone(zone.id, memberIds).subscribe({\r\n            complete: () => {\r\n                notificationService.success(_(`settings.remove-countries-from-zone-success`), {\r\n                    countryCount: memberIds.length,\r\n                    zoneName: zone.name,\r\n                });\r\n                hostComponent.refresh();\r\n                clearSelection();\r\n            },\r\n        });\r\n    },\r\n};\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { AdministratorFragment, BaseEntityResolver, DataService } from '@vendure/admin-ui/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root',\r\n})\r\nexport class ProfileResolver extends BaseEntityResolver<AdministratorFragment> {\r\n    constructor(router: Router, dataService: DataService) {\r\n        super(\r\n            router,\r\n            {\r\n                __typename: 'Administrator' as const,\r\n                id: '',\r\n                createdAt: '',\r\n                updatedAt: '',\r\n                emailAddress: '',\r\n                firstName: '',\r\n                lastName: '',\r\n                user: { roles: [] } as any,\r\n            },\r\n            id =>\r\n                dataService.administrator\r\n                    .getActiveAdministrator()\r\n                    .mapStream(data => data.activeAdministrator),\r\n        );\r\n    }\r\n}\r\n","import { inject } from '@angular/core';\r\nimport { Route } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    DataService,\r\n    GetGlobalSettingsDetailDocument,\r\n    GetProfileDetailDocument,\r\n    PageComponent,\r\n    PageService,\r\n} from '@vendure/admin-ui/core';\r\nimport { of } from 'rxjs';\r\n\r\nexport const createRoutes = (pageService: PageService): Route[] => [\r\n    {\r\n        path: 'profile',\r\n        component: PageComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.profile'),\r\n        },\r\n        resolve: {\r\n            detail: () =>\r\n                inject(DataService)\r\n                    .query(GetProfileDetailDocument)\r\n                    .mapSingle(data => ({ entity: of(data.activeAdministrator) })),\r\n        },\r\n        children: pageService.getPageTabRoutes('profile'),\r\n    },\r\n    {\r\n        path: 'administrators',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'administrator-list',\r\n            breadcrumb: _('breadcrumb.administrators'),\r\n        },\r\n        children: pageService.getPageTabRoutes('administrator-list'),\r\n    },\r\n    {\r\n        path: 'administrators/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'administrator-detail',\r\n            breadcrumb: { label: _('breadcrumb.administrators'), link: ['../', 'administrators'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('administrator-detail'),\r\n    },\r\n    {\r\n        path: 'channels',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'channel-list',\r\n            breadcrumb: _('breadcrumb.channels'),\r\n        },\r\n        children: pageService.getPageTabRoutes('channel-list'),\r\n    },\r\n    {\r\n        path: 'channels/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'channel-detail',\r\n            breadcrumb: { label: _('breadcrumb.channels'), link: ['../', 'channels'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('channel-detail'),\r\n    },\r\n    {\r\n        path: 'stock-locations',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'stock-location-list',\r\n            breadcrumb: _('breadcrumb.stock-locations'),\r\n        },\r\n        children: pageService.getPageTabRoutes('stock-location-list'),\r\n    },\r\n    {\r\n        path: 'stock-locations/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'stock-location-detail',\r\n            breadcrumb: { label: _('breadcrumb.stock-locations'), link: ['../', 'stock-locations'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('stock-location-detail'),\r\n    },\r\n    {\r\n        path: 'sellers',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'seller-list',\r\n            breadcrumb: _('breadcrumb.sellers'),\r\n        },\r\n        children: pageService.getPageTabRoutes('seller-list'),\r\n    },\r\n    {\r\n        path: 'sellers/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'seller-detail',\r\n            breadcrumb: { label: _('breadcrumb.sellers'), link: ['../', 'sellers'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('seller-detail'),\r\n    },\r\n    {\r\n        path: 'roles',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'role-list',\r\n            breadcrumb: _('breadcrumb.roles'),\r\n        },\r\n        children: pageService.getPageTabRoutes('role-list'),\r\n    },\r\n    {\r\n        path: 'roles/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'role-detail',\r\n            breadcrumb: { label: _('breadcrumb.roles'), link: ['../', 'roles'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('role-detail'),\r\n    },\r\n    {\r\n        path: 'tax-categories',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'tax-category-list',\r\n            breadcrumb: _('breadcrumb.tax-categories'),\r\n        },\r\n        children: pageService.getPageTabRoutes('tax-category-list'),\r\n    },\r\n    {\r\n        path: 'tax-categories/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'tax-category-detail',\r\n            breadcrumb: { label: _('breadcrumb.tax-categories'), link: ['../', 'tax-categories'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('tax-category-detail'),\r\n    },\r\n    {\r\n        path: 'tax-rates',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'tax-rate-list',\r\n            breadcrumb: _('breadcrumb.tax-rates'),\r\n        },\r\n        children: pageService.getPageTabRoutes('tax-rate-list'),\r\n    },\r\n    {\r\n        path: 'tax-rates/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'tax-rate-detail',\r\n            breadcrumb: { label: _('breadcrumb.tax-rates'), link: ['../', 'tax-rates'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('tax-rate-detail'),\r\n    },\r\n    {\r\n        path: 'countries',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'country-list',\r\n            breadcrumb: _('breadcrumb.countries'),\r\n        },\r\n        children: pageService.getPageTabRoutes('country-list'),\r\n    },\r\n    {\r\n        path: 'countries/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'country-detail',\r\n            breadcrumb: { label: _('breadcrumb.countries'), link: ['../', 'countries'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('country-detail'),\r\n    },\r\n    {\r\n        path: 'zones',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'zone-list',\r\n            breadcrumb: _('breadcrumb.zones'),\r\n        },\r\n        children: pageService.getPageTabRoutes('zone-list'),\r\n    },\r\n    {\r\n        path: 'zones/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'zone-detail',\r\n            breadcrumb: { label: _('breadcrumb.zones'), link: ['../', 'zones'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('zone-detail'),\r\n    },\r\n    {\r\n        path: 'shipping-methods',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'shipping-method-list',\r\n            breadcrumb: _('breadcrumb.shipping-methods'),\r\n        },\r\n        children: pageService.getPageTabRoutes('shipping-method-list'),\r\n    },\r\n    {\r\n        path: 'shipping-methods/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'shipping-method-detail',\r\n            breadcrumb: { label: _('breadcrumb.shipping-methods'), link: ['../', 'shipping-methods'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('shipping-method-detail'),\r\n    },\r\n    {\r\n        path: 'payment-methods',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'payment-method-list',\r\n            breadcrumb: _('breadcrumb.payment-methods'),\r\n        },\r\n        children: pageService.getPageTabRoutes('payment-method-list'),\r\n    },\r\n    {\r\n        path: 'payment-methods/:id',\r\n        component: PageComponent,\r\n        data: {\r\n            locationId: 'payment-method-detail',\r\n            breadcrumb: { label: _('breadcrumb.payment-methods'), link: ['../', 'payment-methods'] },\r\n        },\r\n        children: pageService.getPageTabRoutes('payment-method-detail'),\r\n    },\r\n    {\r\n        path: 'global-settings',\r\n        component: PageComponent,\r\n        data: {\r\n            breadcrumb: _('breadcrumb.global-settings'),\r\n            locationId: 'global-setting-detail',\r\n        },\r\n        resolve: {\r\n            detail: () =>\r\n                inject(DataService)\r\n                    .query(GetGlobalSettingsDetailDocument)\r\n                    .mapSingle(data => ({ entity: of(data.globalSettings) })),\r\n        },\r\n        children: pageService.getPageTabRoutes('global-setting-detail'),\r\n    },\r\n];\r\n","import { NgModule } from '@angular/core';\r\nimport { RouterModule, ROUTES } from '@angular/router';\r\nimport { marker as _ } from '@biesbjerg/ngx-translate-extract-marker';\r\nimport {\r\n    BulkActionRegistryService,\r\n    detailComponentWithResolver,\r\n    GetAdministratorDetailDocument,\r\n    GetChannelDetailDocument,\r\n    GetCountryDetailDocument,\r\n    GetPaymentMethodDetailDocument,\r\n    GetRoleDetailDocument,\r\n    GetSellerDetailDocument,\r\n    GetShippingMethodDetailDocument,\r\n    GetStockLocationDetailDocument,\r\n    GetTaxCategoryDetailDocument,\r\n    GetTaxRateDetailDocument,\r\n    GetZoneDetailDocument,\r\n    PageService,\r\n    SharedModule,\r\n} from '@vendure/admin-ui/core';\r\nimport { DEFAULT_CHANNEL_CODE } from '@vendure/common/lib/shared-constants';\r\n\r\nimport { AddCountryToZoneDialogComponent } from './components/add-country-to-zone-dialog/add-country-to-zone-dialog.component';\r\nimport { AdminDetailComponent } from './components/admin-detail/admin-detail.component';\r\nimport { deleteAdministratorsBulkAction } from './components/administrator-list/administrator-list-bulk-actions';\r\nimport { AdministratorListComponent } from './components/administrator-list/administrator-list.component';\r\nimport { ChannelDetailComponent } from './components/channel-detail/channel-detail.component';\r\nimport { deleteChannelsBulkAction } from './components/channel-list/channel-list-bulk-actions';\r\nimport { ChannelListComponent } from './components/channel-list/channel-list.component';\r\nimport { CountryDetailComponent } from './components/country-detail/country-detail.component';\r\nimport { deleteCountriesBulkAction } from './components/country-list/country-list-bulk-actions';\r\nimport { CountryListComponent } from './components/country-list/country-list.component';\r\nimport { GlobalSettingsComponent } from './components/global-settings/global-settings.component';\r\nimport { PaymentMethodDetailComponent } from './components/payment-method-detail/payment-method-detail.component';\r\nimport {\r\n    assignPaymentMethodsToChannelBulkAction,\r\n    deletePaymentMethodsBulkAction,\r\n    removePaymentMethodsFromChannelBulkAction,\r\n} from './components/payment-method-list/payment-method-list-bulk-actions';\r\nimport { PaymentMethodListComponent } from './components/payment-method-list/payment-method-list.component';\r\nimport { PermissionGridComponent } from './components/permission-grid/permission-grid.component';\r\nimport { ProfileComponent } from './components/profile/profile.component';\r\nimport { RoleDetailComponent } from './components/role-detail/role-detail.component';\r\nimport { deleteRolesBulkAction } from './components/role-list/role-list-bulk-actions';\r\nimport { RoleListComponent } from './components/role-list/role-list.component';\r\nimport { SellerDetailComponent } from './components/seller-detail/seller-detail.component';\r\nimport { deleteSellersBulkAction } from './components/seller-list/seller-list-bulk-actions';\r\nimport { SellerListComponent } from './components/seller-list/seller-list.component';\r\nimport { ShippingEligibilityTestResultComponent } from './components/shipping-eligibility-test-result/shipping-eligibility-test-result.component';\r\nimport { ShippingMethodDetailComponent } from './components/shipping-method-detail/shipping-method-detail.component';\r\nimport {\r\n    assignShippingMethodsToChannelBulkAction,\r\n    deleteShippingMethodsBulkAction,\r\n    removeShippingMethodsFromChannelBulkAction,\r\n} from './components/shipping-method-list/shipping-method-list-bulk-actions';\r\nimport { ShippingMethodListComponent } from './components/shipping-method-list/shipping-method-list.component';\r\nimport { ShippingMethodTestResultComponent } from './components/shipping-method-test-result/shipping-method-test-result.component';\r\nimport { StockLocationDetailComponent } from './components/stock-location-detail/stock-location-detail.component';\r\nimport {\r\n    assignStockLocationsToChannelBulkAction,\r\n    deleteStockLocationsBulkAction,\r\n    removeStockLocationsFromChannelBulkAction,\r\n} from './components/stock-location-list/stock-location-list-bulk-actions';\r\nimport { StockLocationListComponent } from './components/stock-location-list/stock-location-list.component';\r\nimport { TaxCategoryDetailComponent } from './components/tax-category-detail/tax-category-detail.component';\r\nimport { deleteTaxCategoriesBulkAction } from './components/tax-category-list/tax-category-list-bulk-actions';\r\nimport { TaxCategoryListComponent } from './components/tax-category-list/tax-category-list.component';\r\nimport { TaxRateDetailComponent } from './components/tax-rate-detail/tax-rate-detail.component';\r\nimport { deleteTaxRatesBulkAction } from './components/tax-rate-list/tax-rate-list-bulk-actions';\r\nimport { TaxRateListComponent } from './components/tax-rate-list/tax-rate-list.component';\r\nimport { TestAddressFormComponent } from './components/test-address-form/test-address-form.component';\r\nimport { TestOrderBuilderComponent } from './components/test-order-builder/test-order-builder.component';\r\nimport { TestShippingMethodsComponent } from './components/test-shipping-methods/test-shipping-methods.component';\r\nimport { ZoneDetailComponent } from './components/zone-detail/zone-detail.component';\r\nimport { deleteZonesBulkAction } from './components/zone-list/zone-list-bulk-actions';\r\nimport { ZoneListComponent } from './components/zone-list/zone-list.component';\r\nimport { ZoneMemberControlsDirective } from './components/zone-member-list/zone-member-controls.directive';\r\nimport { removeZoneMembersBulkAction } from './components/zone-member-list/zone-member-list-bulk-actions';\r\nimport { ZoneMemberListHeaderDirective } from './components/zone-member-list/zone-member-list-header.directive';\r\nimport { ZoneMemberListComponent } from './components/zone-member-list/zone-member-list.component';\r\nimport { createRoutes } from './settings.routes';\r\n\r\n@NgModule({\r\n    imports: [SharedModule, RouterModule.forChild([])],\r\n    providers: [\r\n        {\r\n            provide: ROUTES,\r\n            useFactory: (pageService: PageService) => createRoutes(pageService),\r\n            multi: true,\r\n            deps: [PageService],\r\n        },\r\n    ],\r\n    declarations: [\r\n        TaxCategoryListComponent,\r\n        TaxCategoryDetailComponent,\r\n        AdministratorListComponent,\r\n        RoleListComponent,\r\n        RoleDetailComponent,\r\n        AdminDetailComponent,\r\n        PermissionGridComponent,\r\n        CountryListComponent,\r\n        CountryDetailComponent,\r\n        TaxRateListComponent,\r\n        TaxRateDetailComponent,\r\n        ChannelListComponent,\r\n        ChannelDetailComponent,\r\n        ShippingMethodListComponent,\r\n        ShippingMethodDetailComponent,\r\n        PaymentMethodListComponent,\r\n        PaymentMethodDetailComponent,\r\n        GlobalSettingsComponent,\r\n        TestOrderBuilderComponent,\r\n        TestAddressFormComponent,\r\n        SellerDetailComponent,\r\n        SellerListComponent,\r\n        ShippingMethodTestResultComponent,\r\n        ShippingEligibilityTestResultComponent,\r\n        ZoneListComponent,\r\n        AddCountryToZoneDialogComponent,\r\n        ZoneMemberListComponent,\r\n        ZoneMemberListHeaderDirective,\r\n        ZoneMemberControlsDirective,\r\n        ProfileComponent,\r\n        TestShippingMethodsComponent,\r\n        ZoneDetailComponent,\r\n        StockLocationListComponent,\r\n        StockLocationDetailComponent,\r\n    ],\r\n})\r\nexport class SettingsModule {\r\n    private static hasRegisteredTabsAndBulkActions = false;\r\n\r\n    constructor(bulkActionRegistryService: BulkActionRegistryService, pageService: PageService) {\r\n        if (SettingsModule.hasRegisteredTabsAndBulkActions) {\r\n            return;\r\n        }\r\n        bulkActionRegistryService.registerBulkAction(deleteSellersBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(deleteChannelsBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(deleteAdministratorsBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(deleteRolesBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(assignShippingMethodsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeShippingMethodsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteShippingMethodsBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(assignPaymentMethodsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removePaymentMethodsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deletePaymentMethodsBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(deleteTaxCategoriesBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(deleteTaxRatesBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(deleteCountriesBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(deleteZonesBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(removeZoneMembersBulkAction);\r\n\r\n        bulkActionRegistryService.registerBulkAction(assignStockLocationsToChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(removeStockLocationsFromChannelBulkAction);\r\n        bulkActionRegistryService.registerBulkAction(deleteStockLocationsBulkAction);\r\n\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'seller-list',\r\n            tab: _('breadcrumb.sellers'),\r\n            route: '',\r\n            component: SellerListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'seller-detail',\r\n            tab: _('settings.seller'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: SellerDetailComponent,\r\n                query: GetSellerDetailDocument,\r\n                entityKey: 'seller',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('settings.create-new-seller'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'channel-list',\r\n            tab: _('breadcrumb.channels'),\r\n            route: '',\r\n            component: ChannelListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'channel-detail',\r\n            tab: _('settings.channel'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ChannelDetailComponent,\r\n                query: GetChannelDetailDocument,\r\n                entityKey: 'channel',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity\r\n                            ? entity.code === DEFAULT_CHANNEL_CODE\r\n                                ? 'common.default-channel'\r\n                                : entity.code\r\n                            : _('settings.create-new-channel'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'administrator-list',\r\n            tab: _('breadcrumb.administrators'),\r\n            route: '',\r\n            component: AdministratorListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'administrator-detail',\r\n            tab: _('settings.administrator'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: AdminDetailComponent,\r\n                query: GetAdministratorDetailDocument,\r\n                entityKey: 'administrator',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity\r\n                            ? `${entity.firstName} ${entity.lastName}`\r\n                            : _('admin.create-new-administrator'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'role-list',\r\n            tab: _('breadcrumb.roles'),\r\n            route: '',\r\n            component: RoleListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'role-detail',\r\n            tab: _('settings.role'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: RoleDetailComponent,\r\n                query: GetRoleDetailDocument,\r\n                entityKey: 'role',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.description : _('settings.create-new-role'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'shipping-method-list',\r\n            tab: _('breadcrumb.shipping-methods'),\r\n            route: '',\r\n            component: ShippingMethodListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'shipping-method-detail',\r\n            tab: _('settings.shipping-method'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ShippingMethodDetailComponent,\r\n                query: GetShippingMethodDetailDocument,\r\n                entityKey: 'shippingMethod',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('settings.create-new-shipping-method'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'shipping-method-list',\r\n            tab: _('settings.test-shipping-methods'),\r\n            route: 'test',\r\n            component: TestShippingMethodsComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'payment-method-list',\r\n            tab: _('breadcrumb.payment-methods'),\r\n            route: '',\r\n            component: PaymentMethodListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'payment-method-detail',\r\n            tab: _('settings.payment-method'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: PaymentMethodDetailComponent,\r\n                query: GetPaymentMethodDetailDocument,\r\n                entityKey: 'paymentMethod',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('settings.create-new-payment-method'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'tax-category-list',\r\n            tab: _('breadcrumb.tax-categories'),\r\n            route: '',\r\n            component: TaxCategoryListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'tax-category-detail',\r\n            tab: _('settings.tax-category'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: TaxCategoryDetailComponent,\r\n                query: GetTaxCategoryDetailDocument,\r\n                entityKey: 'taxCategory',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('settings.create-new-tax-category'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'tax-rate-list',\r\n            tab: _('breadcrumb.tax-rates'),\r\n            route: '',\r\n            component: TaxRateListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'tax-rate-detail',\r\n            tab: _('settings.tax-rate'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: TaxRateDetailComponent,\r\n                query: GetTaxRateDetailDocument,\r\n                entityKey: 'taxRate',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('settings.create-new-tax-rate'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'country-list',\r\n            tab: _('breadcrumb.countries'),\r\n            route: '',\r\n            component: CountryListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'country-detail',\r\n            tab: _('settings.country'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: CountryDetailComponent,\r\n                query: GetCountryDetailDocument,\r\n                entityKey: 'country',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('settings.create-new-country'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'zone-list',\r\n            tab: _('breadcrumb.zones'),\r\n            route: '',\r\n            component: ZoneListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'zone-detail',\r\n            tab: _('settings.zone'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: ZoneDetailComponent,\r\n                query: GetZoneDetailDocument,\r\n                entityKey: 'zone',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('settings.create-new-zone'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'global-setting-detail',\r\n            tab: _('breadcrumb.global-settings'),\r\n            route: '',\r\n            component: GlobalSettingsComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'profile',\r\n            tab: _('breadcrumb.profile'),\r\n            route: '',\r\n            component: ProfileComponent,\r\n        });\r\n\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'stock-location-list',\r\n            tab: _('catalog.stock-locations'),\r\n            route: '',\r\n            component: StockLocationListComponent,\r\n        });\r\n        pageService.registerPageTab({\r\n            priority: 0,\r\n            location: 'stock-location-detail',\r\n            tab: _('catalog.stock-location'),\r\n            route: '',\r\n            component: detailComponentWithResolver({\r\n                component: StockLocationDetailComponent,\r\n                query: GetStockLocationDetailDocument,\r\n                entityKey: 'stockLocation',\r\n                getBreadcrumbs: entity => [\r\n                    {\r\n                        label: entity ? entity.name : _('catalog.create-new-stock-location'),\r\n                        link: [entity?.id],\r\n                    },\r\n                ],\r\n            }),\r\n        });\r\n        SettingsModule.hasRegisteredTabsAndBulkActions = true;\r\n    }\r\n}\r\n"],"x_google_ignoreList":[0]}